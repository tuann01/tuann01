[
    {
        "id": "aa2c5de576744bc5",
        "type": "tab",
        "label": "Main-KT01=>KT10",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0dbea037c38ddf9e",
        "type": "tab",
        "label": "Main-KT02=>KT03",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1f40e0817509f9dc",
        "type": "tab",
        "label": "Main-KT03=>KT08",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "60b4b547618dda01",
        "type": "tab",
        "label": "Main-KT05=>KT07",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0a4f1b3c819cc1eb",
        "type": "tab",
        "label": "Main-KT07=>KT05",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1799f9f924596a28",
        "type": "tab",
        "label": "Main-KT08=>KT02",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cf86c899003b8ec7",
        "type": "tab",
        "label": "Main-KT10=>KT01",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a67c9cf64cd6a481",
        "type": "tab",
        "label": "SQL",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "361e5c7b7ce31d51",
        "type": "tab",
        "label": "G1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "31e4ae645b526288",
        "type": "tab",
        "label": "G2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b38b295d3b6c9224",
        "type": "tab",
        "label": "G3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "658f9a100caf4b2d",
        "type": "tab",
        "label": "G4",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "341b998efcc0164b",
        "type": "tab",
        "label": "G5",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "40a6f3866cdd8235",
        "type": "tab",
        "label": "G6",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ad61a36faca2db15",
        "type": "tab",
        "label": "G7",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bb7329521b9d0bbc",
        "type": "tab",
        "label": "Maps",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7855a58305240820",
        "type": "tab",
        "label": "KT/Ngay",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "36991e1f24d3f7bf",
        "type": "tab",
        "label": "Email",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "76b288a8884e6049",
        "type": "tab",
        "label": "Cài đặt",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0e9277e107575076",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "2924702c.b33a7",
        "type": "subflow",
        "name": "ui-table handler",
        "info": "# ui-table handler\nUniversal handler for ui-table.\n## features\n- buffer table data\n- add or update individual rows or cells of the table\n- delete rows\n- clear tableData\n- handle column width\n- handle column order\n- hide und unhide columns\n- hide and unhide rows\n- records row order\n- support for nested columns [(column groups)](http://tabulator.info/examples/4.7#column-groups)\n- support for child rows (_children) [(nested data trees)](http://tabulator.info/examples/4.7#tree)\n\nFor real life example see:\n\n**syslog server** for logfile like table with filters\n\n**remote device table** for dynamically updated table with context menues\n\n**irrigation system** for sortable rows\n\n## sending data to ui-tabel\n\n- sending an `array` as discribed in ui-table will replace the complete table and delete all table edits\n  \n  if `msg.keepEdits=true` is added the existing edits will be kept.\n- send an `object` containing the updated properties of a table row by sending msg.<tableDataProp>.\n\n  The table is updated using the `updateOrAddData` command. You can alter the command used by adding the `msg.tabulatorCommand` and `msg.tabulatorParameter`\n\n```\nmsg.tabulatorCommand=\"addData\";\nmsg.tabulatorParameter=[true];\n```\n## configuration\n- `tabulator` json formatted object containing configuration of the table. See ui-table for more details.\n- `property` property of the msg object that contains the data to be passed to ui-table. I.e. *state* `msg.state`\n- `index` index column to identify individual rows. Each message containing data must have a unique `msg.topic` to identify the row. Messages without this `msg.topic` will be droped. It is not nessesary but possible to display the index column in the table. Do not enable editing on this column otherwise you will loose the connection and another row will be added to the table as soon as a new message arrives!\n\n   Defaults to *$topic* `msg.state.$topic`\n- `maxRows`maximum number of rows held by table widget. If grater than **0** the amount of rows in ui-table is limited. For this to work the index row must be a Number. ´rows < currentID-maxRows´ will be deleted.\n- `maxStore`maximum number of rows stored by this node for replay if a client connects. If grater than **0** the amount of rows in flow context is limited. for this to work the index row must be a Number. ´rows < currentID-maxStore´ will be deleted.\n- `dashboard` name of the dashboard tab to only update the table if the dashboard is visible. If empty the table will be updated on every tab change and connect.\n- `context` configuration of context data. The subflow will save or cache data in the flows context using `$parent.`. \n   **tableData** caches the incoming data to restore it on `ui-control´ *change* messages.\n   **tableConfig** saves column width and order to save the interactive table layot\n   **tableEdit** saves edits on the table data otherwise it would be overwritten when new data arrives\n```json\n{\n    \"tableData\": {\n        \"name\": \"tableData\"\n    },\n    \"tableConfig\": {\n        \"name\": \"tableConfig\",\n        \"storage\": \"file\"\n    },\n    \"tableEdit\": {\n        \"name\": \"tableEdit\",\n        \"storage\": \"file\"\n    }\n}\n```\n\n## commands\ncommands can be passed by sending a object as `msg.payload`\n\n```json\n{\n    \"command\": \"delete\",\n    \"object\": \"columnOrder\"\n}\n```\n\n- `deleteTable` tableCache\n- `deleteRow` delete single row. `object` matching index property\n- `ignoreRow` delete single row and put it on an ignore list. `object` matching index property\n- `unIgnoreRow`remove row from the ignore list.  `object` matching index property\n- `unIgnoreRows`delte the ignore list. \n- `deleteRowOrder` delete custom row order\n- `deleteColumnOrder` delete custom column order\n  This is important if you add or delete columns in the tabulator config otherwise the columns most likely don`t show up\n- `deleteColumnWidth` delete custom column width\n- `columnHide` hide a column. `object` matching column field\n- `columnUnHide` unhide a column. `object` matching column field\n- `columnsUnHide` unhide all hidden columns.\n- `setMaxStore` set maximum amount of rows in cache\n- `setMaxDisplay` set maximum amout of rows in ui-table\n- `getTable` get table data (as displayed) as an array (on 2nd output)\n \n## background\nui-table warps the powerfull tabluator library.  This subflow makes it easier to unleash the powerfull features of ui-table",
        "category": "dashboard",
        "in": [
            {
                "x": 60,
                "y": 220,
                "wires": [
                    {
                        "id": "5eb0bd6b.74b794"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 460,
                "y": 280,
                "wires": [
                    {
                        "id": "5eb0bd6b.74b794",
                        "port": 1
                    }
                ]
            },
            {
                "x": 460,
                "y": 340,
                "wires": [
                    {
                        "id": "5eb0bd6b.74b794",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "tabulator",
                "type": "json",
                "value": "{\"tabulator\":{\"responsiveLayout\":\"collapse\",\"responsiveLayoutCollapseStartOpen\":false,\"index\":\"$name\",\"layout\":\"fitColumns\",\"movableColumns\":true,\"groupBy\":\"\",\"columnResized\":\"function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }\",\"columnMoved\":\"function(column, columns){     var newColumns=[];     columns.forEach(function (column) {         newColumns.push({'field': column._column.definition.field, 'title': column._column.definition.title});     });     this.send({topic:this.config.topic,ui_control:{callback:'columnMoved',columns:newColumns}}); }\",\"rowFormatter\":\"function(row){     var data = row.getData();     switch (data.$state) {         case \\\"lost\\\":             row.getElement().style.backgroundColor = \\\"#9e2e66\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"sleeping\\\":             row.getElement().style.backgroundColor = \\\"#336699\\\";             break;         case \\\"disconnected\\\":             row.getElement().style.backgroundColor = \\\"#cc3300\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"alert\\\":             row.getElement().style.backgroundColor = \\\"#A6A6DF\\\";             break;         case \\\"init\\\":             row.getElement().style.backgroundColor = \\\"#f2f20d\\\";             break;         case \\\"ready\\\":             row.getElement().style.backgroundColor = \\\"\\\";             row.getElement().style.color = \\\"\\\";             break;         } }\",\"columns\":[{\"formatter\":\"responsiveCollapse\",\"width\":30,\"minWidth\":30,\"align\":\"center\",\"resizable\":false,\"headerSort\":false,\"frozen\":true,\"title\":\"expand\",\"field\":\"expand\",\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {      var html = cell.getValue(); return html;  }\",\"title\":\"State\",\"field\":\"$stateIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {     var html = cell.getValue(); return html;  }\",\"title\":\"Signal\",\"field\":\"signalIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"Name\",\"field\":\"$name\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"State\",\"field\":\"$state\",\"width\":100,\"align\":\"center\",\"headerVertical\":\"flip\"},{\"title\":\"last-ready\",\"field\":\"lastSeenreadyFormatted\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Homie\",\"field\":\"$homie\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Platform\",\"field\":\"$implementation\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Statistics\",\"columns\":[{\"title\":\"Interval\",\"field\":\"interval\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"outputFormat\":\"d hh:mm:ss\",\"inputFormat\":\"seconds\",\"invalidPlaceholder\":\"(unknown)\"},\"title\":\"Uptime\",\"field\":\"uptime\",\"formatter\":\"function(cell, formatterParams, onRendered){     var pad = function (num) {         return (\\\"0\\\"+num).slice(-2);     };     var secs = Number(cell.getValue());     if (Number.isNaN(secs)) return;     var minutes = Math.floor(secs / 60);     secs = secs%60;     var hours = Math.floor(minutes/60);     minutes = minutes%60;     var days = Math.floor(hours/24);     hours = hours%24;     if (days>0)         return days+\\\"d \\\"+pad(hours)+\\\":\\\"+pad(minutes);     else         return pad(hours)+\\\":\\\"+pad(minutes)+\\\":\\\"+pad(secs); }\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\"; else return; }\",\"legendColor\":\"#FFFFFF\",\"legendAlign\":\"center\"},\"title\":\"Signal\",\"field\":\"signal\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":2.5,\"max\":3.5,\"color\":[\"red\",\"green\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" V</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Supply\",\"field\":\"supply\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Battery\",\"field\":\"battery\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100000,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+(value/1024).toFixed(2)+\\\" kB</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Memory\",\"field\":\"freeheap\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU load\",\"field\":\"cpuload\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":20,\"max\":60,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" °C</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU temp\",\"field\":\"cputemp\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"}]},{\"title\":\"Firmware\",\"columns\":[{\"formatter\":\"link\",\"formatterParams\":{\"labelField\":\"$localip\",\"urlPrefix\":\"http://\",\"target\":\"_blank\"},\"title\":\"IP\",\"field\":\"$localip\",\"width\":100},{\"title\":\"mac\",\"field\":\"$mac\",\"width\":100},{\"title\":\"Accsess Point\",\"field\":\"SSID\",\"width\":100},{\"title\":\"Firmware\",\"field\":\"name\",\"width\":100},{\"title\":\"Version\",\"field\":\"version\",\"width\":100},{\"title\":\"Last Boot Cause\",\"field\":\"lastBootCause\",\"width\":100},{\"title\":\"Reset Reason\",\"field\":\"resetReason\",\"width\":100}]}]},\"customHeight\":12}",
                "ui": {
                    "icon": "font-awesome/fa-table",
                    "label": {
                        "en-US": "Tabulator"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "json",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableDataProp",
                "type": "str",
                "value": "row",
                "ui": {
                    "icon": "font-awesome/fa-tag",
                    "label": {
                        "en-US": "rowProperty"
                    }
                }
            },
            {
                "name": "tableIndex",
                "type": "str",
                "value": "$topic",
                "ui": {
                    "icon": "font-awesome/fa-indent",
                    "label": {
                        "en-US": "Index"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "json",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "maxRows",
                "type": "num",
                "value": "0",
                "ui": {
                    "icon": "font-awesome/fa-list-ol",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num",
                            "bool",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "maxStore",
                "type": "num",
                "value": "0",
                "ui": {
                    "icon": "font-awesome/fa-database",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "dashboard",
                "type": "str",
                "value": "Remote Device Table",
                "ui": {
                    "icon": "font-awesome/fa-dashboard",
                    "label": {
                        "en-US": "Dashboard"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableContext",
                "type": "json",
                "value": "{\"tableData\":{\"name\":\"tableData\"},\"tableConfig\":{\"name\":\"tableConfig\",\"storage\":\"file\"},\"tableEdit\":{\"name\":\"tableEdit\",\"storage\":\"file\"}}",
                "ui": {
                    "icon": "font-awesome/fa-database",
                    "label": {
                        "en-US": "Context"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "json",
                            "env"
                        ]
                    }
                }
            }
        ],
        "color": "#3FADB5",
        "icon": "node-red-dashboard/ui_slider.png",
        "status": {
            "x": 460,
            "y": 220,
            "wires": [
                {
                    "id": "5eb0bd6b.74b794",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "ee3f1e510df2584d",
        "type": "subflow",
        "name": "ui-table handler",
        "info": "# ui-table handler\nUniversal handler for ui-table.\n## features\n- buffer table data\n- add or update individual rows or cells of the table\n- delete rows\n- clear tableData\n- handle column width\n- handle column order\n- hide und unhide columns\n- hide and unhide rows\n- records row order\n- support for nested columns [(column groups)](http://tabulator.info/examples/4.7#column-groups)\n- support for child rows (_children) [(nested data trees)](http://tabulator.info/examples/4.7#tree)\n\nFor real life example see:\n\n**syslog server** for logfile like table with filters\n\n**remote device table** for dynamically updated table with context menues\n\n**irrigation system** for sortable rows\n\n## sending data to ui-tabel\n\n- sending an `array` as discribed in ui-table will replace the complete table and delete all table edits\n  \n  if `msg.keepEdits=true` is added the existing edits will be kept.\n- send an `object` containing the updated properties of a table row by sending msg.<tableDataProp>.\n\n  The table is updated using the `updateOrAddData` command. You can alter the command used by adding the `msg.tabulatorCommand` and `msg.tabulatorParameter`\n\n```\nmsg.tabulatorCommand=\"addData\";\nmsg.tabulatorParameter=[true];\n```\n## configuration\n- `tabulator` json formatted object containing configuration of the table. See ui-table for more details.\n- `property` property of the msg object that contains the data to be passed to ui-table. I.e. *state* `msg.state`\n- `index` index column to identify individual rows. Each message containing data must have a unique `msg.topic` to identify the row. Messages without this `msg.topic` will be droped. It is not nessesary but possible to display the index column in the table. Do not enable editing on this column otherwise you will loose the connection and another row will be added to the table as soon as a new message arrives!\n\n   Defaults to *$topic* `msg.state.$topic`\n- `maxRows`maximum number of rows held by table widget. If grater than **0** the amount of rows in ui-table is limited. For this to work the index row must be a Number. ´rows < currentID-maxRows´ will be deleted.\n- `maxStore`maximum number of rows stored by this node for replay if a client connects. If grater than **0** the amount of rows in flow context is limited. for this to work the index row must be a Number. ´rows < currentID-maxStore´ will be deleted.\n- `dashboard` name of the dashboard tab to only update the table if the dashboard is visible. If empty the table will be updated on every tab change and connect.\n- `context` configuration of context data. The subflow will save or cache data in the flows context using `$parent.`. \n   **tableData** caches the incoming data to restore it on `ui-control´ *change* messages.\n   **tableConfig** saves column width and order to save the interactive table layot\n   **tableEdit** saves edits on the table data otherwise it would be overwritten when new data arrives\n```json\n{\n    \"tableData\": {\n        \"name\": \"tableData\"\n    },\n    \"tableConfig\": {\n        \"name\": \"tableConfig\",\n        \"storage\": \"file\"\n    },\n    \"tableEdit\": {\n        \"name\": \"tableEdit\",\n        \"storage\": \"file\"\n    }\n}\n```\n\n## commands\ncommands can be passed by sending a object as `msg.payload`\n\n```json\n{\n    \"command\": \"delete\",\n    \"object\": \"columnOrder\"\n}\n```\n\n- `deleteTable` tableCache\n- `deleteRow` delete single row. `object` matching index property\n- `ignoreRow` delete single row and put it on an ignore list. `object` matching index property\n- `unIgnoreRow`remove row from the ignore list.  `object` matching index property\n- `unIgnoreRows`delte the ignore list. \n- `deleteRowOrder` delete custom row order\n- `deleteColumnOrder` delete custom column order\n  This is important if you add or delete columns in the tabulator config otherwise the columns most likely don`t show up\n- `deleteColumnWidth` delete custom column width\n- `columnHide` hide a column. `object` matching column field\n- `columnUnHide` unhide a column. `object` matching column field\n- `columnsUnHide` unhide all hidden columns.\n- `setMaxStore` set maximum amount of rows in cache\n- `setMaxDisplay` set maximum amout of rows in ui-table\n- `getTable` get table data (as displayed) as an array (on 2nd output)\n \n## background\nui-table warps the powerfull tabluator library.  This subflow makes it easier to unleash the powerfull features of ui-table",
        "category": "dashboard",
        "in": [
            {
                "x": 60,
                "y": 220,
                "wires": [
                    {
                        "id": "9709b9f87fef300e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 460,
                "y": 280,
                "wires": [
                    {
                        "id": "9709b9f87fef300e",
                        "port": 1
                    }
                ]
            },
            {
                "x": 460,
                "y": 340,
                "wires": [
                    {
                        "id": "9709b9f87fef300e",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "tabulator",
                "type": "json",
                "value": "{\"tabulator\":{\"responsiveLayout\":\"collapse\",\"responsiveLayoutCollapseStartOpen\":false,\"index\":\"$name\",\"layout\":\"fitColumns\",\"movableColumns\":true,\"groupBy\":\"\",\"columnResized\":\"function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }\",\"columnMoved\":\"function(column, columns){     var newColumns=[];     columns.forEach(function (column) {         newColumns.push({'field': column._column.definition.field, 'title': column._column.definition.title});     });     this.send({topic:this.config.topic,ui_control:{callback:'columnMoved',columns:newColumns}}); }\",\"rowFormatter\":\"function(row){     var data = row.getData();     switch (data.$state) {         case \\\"lost\\\":             row.getElement().style.backgroundColor = \\\"#9e2e66\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"sleeping\\\":             row.getElement().style.backgroundColor = \\\"#336699\\\";             break;         case \\\"disconnected\\\":             row.getElement().style.backgroundColor = \\\"#cc3300\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"alert\\\":             row.getElement().style.backgroundColor = \\\"#A6A6DF\\\";             break;         case \\\"init\\\":             row.getElement().style.backgroundColor = \\\"#f2f20d\\\";             break;         case \\\"ready\\\":             row.getElement().style.backgroundColor = \\\"\\\";             row.getElement().style.color = \\\"\\\";             break;         } }\",\"columns\":[{\"formatter\":\"responsiveCollapse\",\"width\":30,\"minWidth\":30,\"align\":\"center\",\"resizable\":false,\"headerSort\":false,\"frozen\":true,\"title\":\"expand\",\"field\":\"expand\",\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {      var html = cell.getValue(); return html;  }\",\"title\":\"State\",\"field\":\"$stateIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {     var html = cell.getValue(); return html;  }\",\"title\":\"Signal\",\"field\":\"signalIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"Name\",\"field\":\"$name\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"State\",\"field\":\"$state\",\"width\":100,\"align\":\"center\",\"headerVertical\":\"flip\"},{\"title\":\"last-ready\",\"field\":\"lastSeenreadyFormatted\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Homie\",\"field\":\"$homie\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Platform\",\"field\":\"$implementation\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Statistics\",\"columns\":[{\"title\":\"Interval\",\"field\":\"interval\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"outputFormat\":\"d hh:mm:ss\",\"inputFormat\":\"seconds\",\"invalidPlaceholder\":\"(unknown)\"},\"title\":\"Uptime\",\"field\":\"uptime\",\"formatter\":\"function(cell, formatterParams, onRendered){     var pad = function (num) {         return (\\\"0\\\"+num).slice(-2);     };     var secs = Number(cell.getValue());     if (Number.isNaN(secs)) return;     var minutes = Math.floor(secs / 60);     secs = secs%60;     var hours = Math.floor(minutes/60);     minutes = minutes%60;     var days = Math.floor(hours/24);     hours = hours%24;     if (days>0)         return days+\\\"d \\\"+pad(hours)+\\\":\\\"+pad(minutes);     else         return pad(hours)+\\\":\\\"+pad(minutes)+\\\":\\\"+pad(secs); }\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\"; else return; }\",\"legendColor\":\"#FFFFFF\",\"legendAlign\":\"center\"},\"title\":\"Signal\",\"field\":\"signal\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":2.5,\"max\":3.5,\"color\":[\"red\",\"green\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" V</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Supply\",\"field\":\"supply\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Battery\",\"field\":\"battery\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100000,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+(value/1024).toFixed(2)+\\\" kB</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Memory\",\"field\":\"freeheap\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU load\",\"field\":\"cpuload\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":20,\"max\":60,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" °C</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU temp\",\"field\":\"cputemp\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"}]},{\"title\":\"Firmware\",\"columns\":[{\"formatter\":\"link\",\"formatterParams\":{\"labelField\":\"$localip\",\"urlPrefix\":\"http://\",\"target\":\"_blank\"},\"title\":\"IP\",\"field\":\"$localip\",\"width\":100},{\"title\":\"mac\",\"field\":\"$mac\",\"width\":100},{\"title\":\"Accsess Point\",\"field\":\"SSID\",\"width\":100},{\"title\":\"Firmware\",\"field\":\"name\",\"width\":100},{\"title\":\"Version\",\"field\":\"version\",\"width\":100},{\"title\":\"Last Boot Cause\",\"field\":\"lastBootCause\",\"width\":100},{\"title\":\"Reset Reason\",\"field\":\"resetReason\",\"width\":100}]}]},\"customHeight\":12}",
                "ui": {
                    "icon": "font-awesome/fa-table",
                    "label": {
                        "en-US": "Tabulator"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "json",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableDataProp",
                "type": "str",
                "value": "row",
                "ui": {
                    "icon": "font-awesome/fa-tag",
                    "label": {
                        "en-US": "rowProperty"
                    }
                }
            },
            {
                "name": "tableIndex",
                "type": "str",
                "value": "$topic",
                "ui": {
                    "icon": "font-awesome/fa-indent",
                    "label": {
                        "en-US": "Index"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "json",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "maxRows",
                "type": "num",
                "value": "0",
                "ui": {
                    "icon": "font-awesome/fa-list-ol",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num",
                            "bool",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "maxStore",
                "type": "num",
                "value": "0",
                "ui": {
                    "icon": "font-awesome/fa-database",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "dashboard",
                "type": "str",
                "value": "Remote Device Table",
                "ui": {
                    "icon": "font-awesome/fa-dashboard",
                    "label": {
                        "en-US": "Dashboard"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableContext",
                "type": "json",
                "value": "{\"tableData\":{\"name\":\"tableData\"},\"tableConfig\":{\"name\":\"tableConfig\",\"storage\":\"file\"},\"tableEdit\":{\"name\":\"tableEdit\",\"storage\":\"file\"}}",
                "ui": {
                    "icon": "font-awesome/fa-database",
                    "label": {
                        "en-US": "Context"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "json",
                            "env"
                        ]
                    }
                }
            }
        ],
        "color": "#3FADB5",
        "icon": "node-red-dashboard/ui_slider.png",
        "status": {
            "x": 460,
            "y": 220,
            "wires": [
                {
                    "id": "9709b9f87fef300e",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "32fc21558b80447b",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "Times New Roman,Times,serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#0094ce",
                "baseFont": "Times New Roman,Times,serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#0094ce",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#a7a7a7",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "Times New Roman,Times,serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Quan trắc giếng ngầm NumberOne Hà Nam",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 54,
                "sy": 46,
                "gx": 2,
                "gy": 2,
                "cx": 2,
                "cy": 2,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "41370e1941ec34b4",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "953580f1c70bae15",
        "type": "ui_group",
        "name": "Giếng khai thác KT10",
        "tab": "cdf830fa1b401426",
        "order": 7,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cd22576b9e453129",
        "type": "ui_group",
        "name": "Giếng khai thác KT10",
        "tab": "e908ce7c2192e37b",
        "order": 7,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cdf830fa1b401426",
        "type": "ui_tab",
        "name": "Trang chủ",
        "icon": "home",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e908ce7c2192e37b",
        "type": "ui_tab",
        "name": "Mobile",
        "icon": "tablet",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6729a816d3d532b5",
        "type": "ui_group",
        "name": "Giếng khai thác KT03",
        "tab": "cdf830fa1b401426",
        "order": 3,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f3b4b427b3ddcb91",
        "type": "ui_group",
        "name": "Giếng khai thác KT08",
        "tab": "cdf830fa1b401426",
        "order": 6,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c8e5e73c6b6c38d6",
        "type": "ui_group",
        "name": "Giếng khai thác KT07",
        "tab": "cdf830fa1b401426",
        "order": 5,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "93ec55053f717475",
        "type": "ui_group",
        "name": "Giếng khai thác KT05",
        "tab": "cdf830fa1b401426",
        "order": 4,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f40c6bb51b026681",
        "type": "ui_group",
        "name": "Giếng khai thác KT02",
        "tab": "cdf830fa1b401426",
        "order": 2,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "84dc3a0a897c3f1c",
        "type": "ui_group",
        "name": "Giếng khai thác KT01",
        "tab": "cdf830fa1b401426",
        "order": 1,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0a3343425c9b53ca",
        "type": "ui_group",
        "name": "Giếng khai thác KT03",
        "tab": "e908ce7c2192e37b",
        "order": 3,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8de54ffe0f0fc049",
        "type": "ui_group",
        "name": "Giếng khai thác KT08",
        "tab": "e908ce7c2192e37b",
        "order": 6,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6497d0df00ba9f79",
        "type": "ui_group",
        "name": "Giếng khai thác KT07",
        "tab": "e908ce7c2192e37b",
        "order": 5,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c534907ad0340a41",
        "type": "ui_group",
        "name": "Giếng khai thác KT05",
        "tab": "e908ce7c2192e37b",
        "order": 4,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "89f90ae8144f4cc7",
        "type": "ui_group",
        "name": "Giếng khai thác KT02",
        "tab": "e908ce7c2192e37b",
        "order": 2,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d375dab203da6e86",
        "type": "ui_group",
        "name": "Giếng khai thác KT01",
        "tab": "e908ce7c2192e37b",
        "order": 1,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4b33ac0402b9bf1c",
        "type": "ui_group",
        "name": "Truy xuất dữ liệu",
        "tab": "9e767a9cf8fd5f34",
        "order": 2,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "9524bebe354aad1c",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "mydata2",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "1844cda23c08bfa8",
        "type": "ui_group",
        "name": "Biểu đồ mực nước",
        "tab": "9e767a9cf8fd5f34",
        "order": 3,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e6d887569d737aeb",
        "type": "ui_group",
        "name": "Biểu đồ lưu lượng",
        "tab": "9e767a9cf8fd5f34",
        "order": 4,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ebc955783b403a93",
        "type": "ui_group",
        "name": "Giá trị đo hiện tại",
        "tab": "9e767a9cf8fd5f34",
        "order": 1,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "90f7bf5f32e953e1",
        "type": "ui_group",
        "name": "Truy xuất dữ liệu",
        "tab": "a8af4ff1cd6f97ad",
        "order": 2,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "09ec39030a76f9e5",
        "type": "ui_group",
        "name": "Biểu đồ mực nước",
        "tab": "a8af4ff1cd6f97ad",
        "order": 3,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "7fb2d1f501b14f91",
        "type": "ui_group",
        "name": "Biều đồ lưu lượng",
        "tab": "a8af4ff1cd6f97ad",
        "order": 4,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3727ebb51dfdf6b0",
        "type": "ui_group",
        "name": "Giá trị đo hiện tại",
        "tab": "a8af4ff1cd6f97ad",
        "order": 1,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "20e99841a9498678",
        "type": "ui_group",
        "name": "Truy xuất dữ liệu",
        "tab": "99cc9af882d79e64",
        "order": 2,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ba7eab9ee13251de",
        "type": "ui_group",
        "name": "Biểu đồ mực nước",
        "tab": "99cc9af882d79e64",
        "order": 3,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "7adb0a7a68c0bc56",
        "type": "ui_group",
        "name": "Biểu đồ lưu lượng",
        "tab": "99cc9af882d79e64",
        "order": 4,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "efa70b9be1525f0b",
        "type": "ui_group",
        "name": "Giá trị đo hiện tại",
        "tab": "99cc9af882d79e64",
        "order": 1,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1bd5946093df5d7d",
        "type": "ui_group",
        "name": "Truy xuất dữ liệu",
        "tab": "3deb8c08f32af4ce",
        "order": 2,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "03cf973d42c5deaf",
        "type": "ui_group",
        "name": "Biểu đồ mực nước",
        "tab": "3deb8c08f32af4ce",
        "order": 3,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "966107d5fbba8c10",
        "type": "ui_group",
        "name": "Biểu đồ lưu lượng",
        "tab": "3deb8c08f32af4ce",
        "order": 4,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "81ce2336099cf087",
        "type": "ui_group",
        "name": "Giá trị đo hiện tại",
        "tab": "3deb8c08f32af4ce",
        "order": 1,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ee1b8739a8535b3b",
        "type": "ui_group",
        "name": "Truy xuất dữ liệu",
        "tab": "19845c32d877adf8",
        "order": 2,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ad228b4f29a23a65",
        "type": "ui_group",
        "name": "Biểu đồ mực nước",
        "tab": "19845c32d877adf8",
        "order": 3,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "55fb8aeb17719a4e",
        "type": "ui_group",
        "name": "Biểu đồ lưu lượng",
        "tab": "19845c32d877adf8",
        "order": 4,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c527f877f8017b48",
        "type": "ui_group",
        "name": "Giá trị đo hiện tại",
        "tab": "19845c32d877adf8",
        "order": 1,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "de838e4d0abca36d",
        "type": "ui_group",
        "name": "Truy xuất dữ liệu",
        "tab": "c6894317922b1dc4",
        "order": 2,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "962fa4861186b79e",
        "type": "ui_group",
        "name": "Biểu đồ mực nước",
        "tab": "c6894317922b1dc4",
        "order": 3,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c964c67a2a97bd20",
        "type": "ui_group",
        "name": "Biểu đồ lưu lượng",
        "tab": "c6894317922b1dc4",
        "order": 4,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "19f9d5238f267430",
        "type": "ui_group",
        "name": "Giá trị đo hiện tại",
        "tab": "c6894317922b1dc4",
        "order": 1,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b5d3eb285beaa20a",
        "type": "ui_group",
        "name": "Truy xuất dữ liệu",
        "tab": "e33fb2ba38583b7a",
        "order": 2,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a556a2a47da61ea7",
        "type": "ui_group",
        "name": "Biểu đồ mực nước",
        "tab": "e33fb2ba38583b7a",
        "order": 3,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f34913c21691d304",
        "type": "ui_group",
        "name": "Biểu đồ lưu lượng",
        "tab": "e33fb2ba38583b7a",
        "order": 4,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "dfc8284536ce79dc",
        "type": "ui_group",
        "name": "Giá trị đo hiện tại",
        "tab": "e33fb2ba38583b7a",
        "order": 1,
        "disp": true,
        "width": 3,
        "collapse": false,
        "className": ""
    },
    {
        "id": "9e767a9cf8fd5f34",
        "type": "ui_tab",
        "name": "Giếng khai thác KT10",
        "icon": "equalizer",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a8af4ff1cd6f97ad",
        "type": "ui_tab",
        "name": "Giếng khai thác KT03",
        "icon": "equalizer",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "99cc9af882d79e64",
        "type": "ui_tab",
        "name": "Giếng khai thác KT08",
        "icon": "equalizer",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3deb8c08f32af4ce",
        "type": "ui_tab",
        "name": "Giếng khai thác KT07",
        "icon": "equalizer",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "19845c32d877adf8",
        "type": "ui_tab",
        "name": "Giếng khai thác KT05",
        "icon": "equalizer",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c6894317922b1dc4",
        "type": "ui_tab",
        "name": "Giếng khai thác KT02",
        "icon": "equalizer",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e33fb2ba38583b7a",
        "type": "ui_tab",
        "name": "Giếng khai thác KT01",
        "icon": "equalizer",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7429b5c7b2d35760",
        "type": "ui_tab",
        "name": "Maps",
        "icon": "map",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d3d57a17707c3d03",
        "type": "ui_group",
        "name": "Dữ liệu đo trên Maps",
        "tab": "7429b5c7b2d35760",
        "order": 2,
        "disp": true,
        "width": 22,
        "collapse": false,
        "className": ""
    },
    {
        "id": "49f4204a709c0298",
        "type": "ui_group",
        "name": "Thông tin",
        "tab": "7429b5c7b2d35760",
        "order": 1,
        "disp": true,
        "width": 13,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4c11921c9db3b2fc",
        "type": "ui_group",
        "name": "Thông số",
        "tab": "8ce4e57513c080bf",
        "order": 1,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b84cda1145a40922",
        "type": "ui_group",
        "name": "Lịch sử dữ liệu",
        "tab": "8ce4e57513c080bf",
        "order": 2,
        "disp": true,
        "width": 25,
        "collapse": false,
        "className": ""
    },
    {
        "id": "8ce4e57513c080bf",
        "type": "ui_tab",
        "name": "Lưu lượng khai thác 24H",
        "icon": "dashboard",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2e1b0fe437ae8782",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "453627178f2bf110",
        "type": "ui_group",
        "name": "Tần số",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "fd9fdef099d6b898",
        "type": "ui_spacer",
        "z": "76b288a8884e6049",
        "name": "spacer",
        "group": "453627178f2bf110",
        "order": 3,
        "width": 8,
        "height": 1
    },
    {
        "id": "90f7815b583b77e9",
        "type": "ui_spacer",
        "z": "76b288a8884e6049",
        "name": "spacer",
        "group": "453627178f2bf110",
        "order": 6,
        "width": 8,
        "height": 1
    },
    {
        "id": "1f7073d405763513",
        "type": "ui_spacer",
        "z": "76b288a8884e6049",
        "name": "spacer",
        "group": "453627178f2bf110",
        "order": 9,
        "width": 8,
        "height": 1
    },
    {
        "id": "f9feb85b010a55bf",
        "type": "ui_spacer",
        "z": "76b288a8884e6049",
        "name": "spacer",
        "group": "453627178f2bf110",
        "order": 12,
        "width": 8,
        "height": 1
    },
    {
        "id": "ffaf650b8d93d0dd",
        "type": "ui_spacer",
        "z": "76b288a8884e6049",
        "name": "spacer",
        "group": "453627178f2bf110",
        "order": 15,
        "width": 8,
        "height": 1
    },
    {
        "id": "6f4ab5a1361f4102",
        "type": "ui_spacer",
        "z": "76b288a8884e6049",
        "name": "spacer",
        "group": "453627178f2bf110",
        "order": 18,
        "width": 8,
        "height": 1
    },
    {
        "id": "b3d9c3f9f6af4951",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "cd22576b9e453129",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "4b20ebb566df7398",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "cd22576b9e453129",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "0aa2bd97975633e4",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "0a3343425c9b53ca",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "a5de788268a7631f",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "0a3343425c9b53ca",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "ff6d176229490862",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "8de54ffe0f0fc049",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "dc10230828d82a93",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "8de54ffe0f0fc049",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "db145e51d6106a3b",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "6497d0df00ba9f79",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "50e5d18550f5c18e",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "6497d0df00ba9f79",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "dd2c2ef81cc63efd",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "c534907ad0340a41",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "bcf6bf9d6d967b8a",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "c534907ad0340a41",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "ab8550a38f6cb425",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "89f90ae8144f4cc7",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "4b87422b482a3427",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "89f90ae8144f4cc7",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "56a9f8e8776f22ff",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "d375dab203da6e86",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "803aa906d17a7e6a",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "d375dab203da6e86",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "4c58219f31dcb60d",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.0.120",
        "tcpPort": "502",
        "tcpType": "TCP-RTU-BUFFERED",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "8ac1dce4ed9f42fb",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "84dc3a0a897c3f1c",
        "order": 4,
        "width": 5,
        "height": 1
    },
    {
        "id": "5f82566b22d1feb6",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "84dc3a0a897c3f1c",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "1ea588e16a20b912",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "84dc3a0a897c3f1c",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "b58d7cf7784c462a",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "84dc3a0a897c3f1c",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "0f816d45e8b4a095",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "84dc3a0a897c3f1c",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "6d19d8f515644e95",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "84dc3a0a897c3f1c",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "0608a63ef36359c8",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "84dc3a0a897c3f1c",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "7639e1a92f42458d",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "84dc3a0a897c3f1c",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "d369a0eb4cbf4d42",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "84dc3a0a897c3f1c",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "51e42a91be9e26d3",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "84dc3a0a897c3f1c",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "04356b50cd8fad91",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "84dc3a0a897c3f1c",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "9a33d40159abd4ad",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "84dc3a0a897c3f1c",
        "order": 21,
        "width": 3,
        "height": 1
    },
    {
        "id": "70473105592dfbf7",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f40c6bb51b026681",
        "order": 4,
        "width": 5,
        "height": 1
    },
    {
        "id": "8e68d56ec128c6bc",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f40c6bb51b026681",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "8f0aa5efdfbd240a",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f40c6bb51b026681",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "d09662de084bb057",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f40c6bb51b026681",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "c550fc5231a5bfba",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f40c6bb51b026681",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "24cc0f7e5233e5e2",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f40c6bb51b026681",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "0b5ba11f33c74ae3",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f40c6bb51b026681",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "d53d0b905fae4060",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f40c6bb51b026681",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "fcb3ff092228eac3",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f40c6bb51b026681",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "d9e6d1f215e7698b",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f40c6bb51b026681",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "4316b00099df9a24",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f40c6bb51b026681",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "feba4744312fc6d7",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f40c6bb51b026681",
        "order": 21,
        "width": 3,
        "height": 1
    },
    {
        "id": "fe6bfdc1a779c1e8",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "6729a816d3d532b5",
        "order": 4,
        "width": 5,
        "height": 1
    },
    {
        "id": "8202ba2ccb7aa707",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "6729a816d3d532b5",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "3538c2f6d8fb09e8",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "6729a816d3d532b5",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "1f41f6b9d7529f6a",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "6729a816d3d532b5",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "cf2594fad8f89de4",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "6729a816d3d532b5",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "55d2ef0dcea2602e",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "6729a816d3d532b5",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "0a8823cab49fa6a3",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "6729a816d3d532b5",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "256b98ce690c255f",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "6729a816d3d532b5",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "14845568f2fe8b8b",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "6729a816d3d532b5",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "a946b72447f25df0",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "6729a816d3d532b5",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "ea72a129b9ef2fd2",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "6729a816d3d532b5",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "535f87f0d3c2a43a",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "6729a816d3d532b5",
        "order": 21,
        "width": 3,
        "height": 1
    },
    {
        "id": "e4c0cacf434e8fb1",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "93ec55053f717475",
        "order": 4,
        "width": 5,
        "height": 1
    },
    {
        "id": "be9268e35906e68d",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "93ec55053f717475",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "9496e06863e25773",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "93ec55053f717475",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "a9c37761e7cf7cd4",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "93ec55053f717475",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "07c59399887a2984",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "93ec55053f717475",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "5c83b0bf3e1c32a8",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "93ec55053f717475",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "fbb3b57b43abacb2",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "93ec55053f717475",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "2942621c329236aa",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "93ec55053f717475",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "b8f8ecc802e46f69",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "93ec55053f717475",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "9dbb5577d06ff3af",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "93ec55053f717475",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "bba2505946180abf",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "93ec55053f717475",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "5aadcd7a3ba484c4",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "93ec55053f717475",
        "order": 21,
        "width": 3,
        "height": 1
    },
    {
        "id": "413ee28d27b9f165",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "c8e5e73c6b6c38d6",
        "order": 4,
        "width": 5,
        "height": 1
    },
    {
        "id": "c48487f82edf030d",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "c8e5e73c6b6c38d6",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "74ca7c5a561f67c2",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "c8e5e73c6b6c38d6",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "203083faf4689e70",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "c8e5e73c6b6c38d6",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "2b4331dfdfb7a2c6",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "c8e5e73c6b6c38d6",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "4f286310f6c82cdb",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "c8e5e73c6b6c38d6",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "d9c58da67456e602",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "c8e5e73c6b6c38d6",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "a6d1d7ec14fa3a3e",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "c8e5e73c6b6c38d6",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "3d8bfc8eeeb77c62",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "c8e5e73c6b6c38d6",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "a72015ea19740e7f",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "c8e5e73c6b6c38d6",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "bd4f4036b387759a",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "c8e5e73c6b6c38d6",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "2e0266831127beb1",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "c8e5e73c6b6c38d6",
        "order": 21,
        "width": 3,
        "height": 1
    },
    {
        "id": "c4ede54127975b1d",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f3b4b427b3ddcb91",
        "order": 4,
        "width": 5,
        "height": 1
    },
    {
        "id": "0d27900b460d598f",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f3b4b427b3ddcb91",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "bc84c94718c194b8",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f3b4b427b3ddcb91",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "208102576d3d8c88",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f3b4b427b3ddcb91",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "6f46088899def348",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f3b4b427b3ddcb91",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "314a8126d3a13744",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f3b4b427b3ddcb91",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "acfca61ff845518c",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f3b4b427b3ddcb91",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "606cbd0e39c8ad17",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f3b4b427b3ddcb91",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "fa7c45a3c846fd3c",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f3b4b427b3ddcb91",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "7194a175ba2bb1a2",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f3b4b427b3ddcb91",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "fd608a5e6ec1f7f1",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f3b4b427b3ddcb91",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "90ad1cac4986ce7f",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "f3b4b427b3ddcb91",
        "order": 21,
        "width": 3,
        "height": 1
    },
    {
        "id": "18b434b5fb5de72b",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "953580f1c70bae15",
        "order": 4,
        "width": 5,
        "height": 1
    },
    {
        "id": "17a1b4c870aa83cb",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "953580f1c70bae15",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "beb7a6d21d7b8be2",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "953580f1c70bae15",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "f6bad8f7cbc7d85f",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "953580f1c70bae15",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "01bb534e829d5411",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "953580f1c70bae15",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "5194041a27fc3b62",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "953580f1c70bae15",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "34935fbd5c9f34ab",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "953580f1c70bae15",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "bed8f8199fb773bb",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "953580f1c70bae15",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "fa5e5d37570afe4b",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "953580f1c70bae15",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "e4c97ceb8dde798a",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "953580f1c70bae15",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "6a9f0a6b1c3b1640",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "953580f1c70bae15",
        "order": 20,
        "width": 1,
        "height": 1
    },
    {
        "id": "09ea2548780a7be7",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "953580f1c70bae15",
        "order": 21,
        "width": 3,
        "height": 1
    },
    {
        "id": "7deed1f5af191c85",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "49f4204a709c0298",
        "order": 4,
        "width": 13,
        "height": 1
    },
    {
        "id": "46eb699e0e77d4d8",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "49f4204a709c0298",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "15e5b1954a0e2e68",
        "type": "ui_spacer",
        "z": "bb7329521b9d0bbc",
        "name": "spacer",
        "group": "49f4204a709c0298",
        "order": 29,
        "width": 1,
        "height": 1
    },
    {
        "id": "142303fbd39758a3",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "4c11921c9db3b2fc",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "fe44062bf4a42d94",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "4c11921c9db3b2fc",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "e173717a19354572",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "4c11921c9db3b2fc",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "4501d8a3913b5f70",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "4c11921c9db3b2fc",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "35698ad987c51a3b",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "4c11921c9db3b2fc",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "d959aa9348bcd2c2",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "4c11921c9db3b2fc",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "d79fe794c429e34c",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "4c11921c9db3b2fc",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "c5c5f57dd2e23920",
        "type": "ui_spacer",
        "z": "aa2c5de576744bc5",
        "name": "spacer",
        "group": "b84cda1145a40922",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "5eb0bd6b.74b794",
        "type": "function",
        "z": "2924702c.b33a7",
        "name": "handle tableData",
        "func": "var status = {fill:\"red\",shape:\"dot\",text: \"payload \"};\nvar tableIndex = env.get(\"tableIndex\") || \"$topic\";\nvar tableDataProp = env.get(\"tableDataProp\") || \"row\";\nvar tableContext = env.get(\"tableContext\");\nvar dashboard = env.get(\"dashboard\");\nvar maxRows = env.get(\"maxRows\") || 0;\nvar maxStore = env.get(\"maxStore\") || 0;\n\nif (!tableContext.hasOwnProperty(\"tableData\") || !tableContext.hasOwnProperty(\"tableConfig\")) {\n    status.text=\"tableContext not defined\";\n    node.error(status.text);\n    return [{payload:status},null];\n}\n\n// context store to cache table data (memoryOnly prefered)\nvar tableData = flow.get(\"$parent.\"+tableContext.tableData.name,tableContext.tableData.storage);\nif (tableData===undefined) {\n    node.warn(\"[ui-table handler] tableData initialized!\");\n    tableData={};\n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n}\n\n// context Store to save table configuration (file)\nvar tableConfig = flow.get(\"$parent.\"+tableContext.tableConfig.name,tableContext.tableConfig.storage);\nif (tableConfig===undefined) {\n    node.warn(\"[ui-table handler] tableConfig initialized!\");\n    tableConfig={ResponsiveLayout:true};\n    flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n}\n\nif (tableConfig.hasOwnProperty(\"maxStore\")) maxStore=tableConfig.maxStore;\nif (tableConfig.hasOwnProperty(\"maxRows\")) maxRows=tableConfig.maxRows;\n\n// context Store to save table configuration (file)\nvar tableEdit;\nif (tableContext.hasOwnProperty(\"tableEdit\")) {\n    tableEdit = flow.get(\"$parent.\"+tableContext.tableEdit.name,tableContext.tableEdit.storage);\n    if (tableEdit===undefined) {\n        node.warn(\"[ui-table handler] tableEdit initialized!\");\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n}\n\n// function to merge partial data into existing table row\nvar mergeObject = function (destination, source, filter) {\n    for (let currentSource in source) {\n        if (source.hasOwnProperty(currentSource)) {\n            if (filter!==undefined && tableEdit && tableEdit.hasOwnProperty(filter) && tableEdit[filter].hasOwnProperty(currentSource)) {\n                destination[currentSource]= tableEdit[filter][currentSource];\n                source[currentSource]=tableEdit[filter][currentSource];\n            } else {\n                destination[currentSource]= source[currentSource];\n            }\n        }    \n    }\n    return source;\n};\n\n// merge edits into a destination object respecting _children\nvar mergeEdits = function(destination) {\n    \n    var mergeChildEdits = function(children) {\n        children.forEach(child => {\n            if (child.hasOwnProperty(tableIndex) && tableEdit.hasOwnProperty(child[tableIndex])) {\n//                node.warn([\"mergeChild\",child])\n                Object.keys(tableEdit[child[tableIndex]]).forEach(edit => {\n                    if (child.hasOwnProperty(edit)) {\n                        child[edit]=tableEdit[child[tableIndex]][edit];\n//                        node.warn([\"mergeChild edit \",edit,child[edit]])\n                    }\n                });\n            }\n            if (child.hasOwnProperty(\"_children\")) {\n                mergeChildEdits(child._children);\n            }\n        })\n    }\n    \n\n    Object.keys(destination).forEach(row => {\n        if (destination[row].hasOwnProperty(tableIndex)) {\n            if (tableEdit.hasOwnProperty(row)) {\n                Object.keys(tableEdit[row]).forEach(edit => {\n                    destination[row][edit]=tableEdit[row][edit];\n                });\n            }\n            if (destination[row].hasOwnProperty(\"_children\")) {\n                mergeChildEdits(destination[row]._children);\n            }\n       }\n    });\n}\n\n// deep search for a column including nested columns\nvar searchTabulatorColumn = function (columns,key,match) {\n    var result;\n    for (let column of columns) {\n        if (column.hasOwnProperty(\"columns\")) {\n            result = searchTabulatorColumn(column.columns,key,match);\n            if (result!==undefined) return result;\n        } else if (column.hasOwnProperty(key) && column[key]===match) {\n            return column;\n        }\n    }\n};\n\n// command message to update add or update data on ui-table\nvar msgToTable={};\nmsgToTable.payload={\n    \"command\":msg.tabulatorCommand || \"updateOrAddData\",\n    \"arguments\": [],\n    \"returnPromise\": false\n};\n\n// store data in tableData\nif (msg.hasOwnProperty(tableDataProp)) {\n    // store data for later recover\n    if (!msg.hasOwnProperty(\"topic\")) { // check if index existst\n        status.text=\"msg.topic not defined!\";\n        return [{payload:status},null];\n    }\n    if (!tableData.hasOwnProperty(msg.topic)){ // first seen\n        if (maxRows>0 && Object.keys(tableData).lenght===0) {\n            tableConfig.currentFirstRow=msg.topic;\n        }\n        tableData[msg.topic]={};\n        if (tableEdit && tableEdit.hasOwnProperty(msg.topic)) { // table edits available!\n            Object.keys(tableEdit[msg.topic]).forEach((key) => {\n                msg[tableDataProp][key]=tableEdit[msg.topic][key];\n                tableData[msg.topic][key]=tableEdit[msg.topic][key];\n            })\n        }\n        if (maxStore>0 && typeof msg.topic === \"number\") { // limit rows in tableData\n            let rowKeys = Object.keys(tableData);\n            if (rowKeys.length>maxStore) {\n                for (let i=0; i<(rowKeys.length-maxStore); i++) {\n                    delete tableData[rowKeys[i]];\n                }\n            }\n        }\n    }\n    if (!tableData[msg.topic].hasOwnProperty(tableIndex)) tableData[msg.topic][tableIndex]=msg.topic;\n    msg[tableDataProp]=mergeObject(tableData[msg.topic],msg[tableDataProp],msg.topic);\n    msg[tableDataProp][tableIndex]=msg.topic;\n    msgToTable.payload.arguments=[[msg[tableDataProp]]];\n    // add aditional parameters\n    if (msg.hasOwnProperty(\"tabulatorParameter\") && Array.isArray(msg.tabulatorParameter)) {\n        for (let arg in msg.tabulatorParameter) msgToTable.payload.arguments.push(arg);\n    }\n    // delete rows if rows exceed maxRows\n    /*\n    if (maxRows>0 && tableConfig.hasOwnProperty(\"currentFirstRow\") && typeof tableData[msg.topic][tableIndex]===\"number\") {\n        //node.warn([maxRows,tableConfig.hasOwnProperty(\"currentFirstRow\"),typeof tableData[msg.topic][tableIndex],tableConfig.currentFirstRow,tableData[msg.topic][tableIndex]-maxRows])\n        if (tableConfig.currentFirstRow<tableData[msg.topic][tableIndex]-maxRows) {\n            node.warn([\"maxRowExeeded\",tableConfig.currentFirstRow]);\n            node.send([null,{payload:{\"command\":\"deleteRow\",\"arguments\": [tableConfig.currentFirstRow],\"returnPromise\": false}},null]);\n            tableConfig.currentFirstRow++;\n        }\n    }*/\n    if (maxRows>0 && typeof tableData[msg.topic][tableIndex]===\"number\" && msg.topic-maxRows>0) {\n        node.send([null,{payload:{\"command\":\"deleteRow\",\"arguments\": [msg.topic-maxRows],\"returnPromise\": false}},null]);\n    }\n    status.fill=\"green\";\n    status.text=msg.topic+\" updated\";\n    return [{payload:status},msgToTable,null];\n} if (msg.payload===\"connect\" || (msg.payload===\"change\" && msg.name===dashboard) || (msg.hasOwnProperty(\"payload\") && msg.payload.hasOwnProperty(\"command\"))) { \n    if (!msg.hasOwnProperty(\"ui_control\")) {\n        msg.ui_control = env.get('tabulator');\n        status.text+=\" ui_control added\";\n    }\n    //process commands\n    //node.warn({\"command\":msg.payload.command,\"msg\":msg,\"object\":msg.payload.object})\n    if (msg.payload.hasOwnProperty(\"command\") && msg.payload.command!=='getTable') {\n        status.fill=\"blue\";\n        switch(msg.payload.command) {\n            case 'deleteTable':\n                flow.set(\"$parent.\"+tableContext.tableData.name,undefined,tableContext.tableData.storage);\n                tableData={};\n                status.text=\"tabledata deleted\";\n                node.warn(\"[ui-table handler] \"+\"tabledata deleted\");\n                break;\n            case 'deleteRow':\n            case 'deleteDevice':\n                var deleteRow = function(id) {\n                    // check if row is in root\n                    if (tableData.hasOwnProperty(id)) {\n                        delete tableData[id]\n                        return true;\n                    }\n                    // check if row is a child\n                    let deleteChildRow = function(children, id) {\n                        for(let i = 0; i < children.length; i++){\n                            if (children[i].hasOwnProperty(tableIndex) && children[i][tableIndex]===id) {\n                                children.splice(i, 1); \n                                return true; \n                            }\n                            if (children[i].hasOwnProperty(\"_children\")) {\n                                if (deleteChildRow(children[i]._children,id)) {\n                                    if (children[i]._children.length === 0) {\n                                        delete children[i]._children;\n                                    }\n                                    return true;\n                                }\n                            }\n                        }\n                        return false;\n                    };\n                    \n                    for (let row in tableData) {\n                        if (tableData[row].hasOwnProperty(\"_children\")) {\n                            if (deleteChildRow(tableData[row]._children,id)) return true;\n                        }\n                    }\n                    return false;\n                }\n                \n                if (deleteRow(msg.payload.object)) {\n                    status.text=msg.payload.object+\" deleted\";\n                } else {\n                    status.fill=\"yellow\";\n                    status.text=msg.payload.object+\" undefined\";\n                }\n                break;\n            case 'ignoreRow':\n            case 'ignoreDevice':\n                if (tableData.hasOwnProperty(msg.payload.object)) {\n                    delete tableData[msg.payload.object];\n                    status.text=msg.payload.object+\" will be ignored\";\n                    if (!tableConfig.hasOwnProperty('ignoreDevice')) tableConfig.ignoreDevice={};\n                    tableConfig.ignoreDevice[msg.payload.object]=true;\n                }\n                break;\n            case 'unIgnoreRow':\n            case 'unIgnoreDevice':\n                if (tableConfig.hasOwnProperty('ignoreDevice')) {\n                    delete tableConfig.ignoreDevice[msg.payload.object];\n                }\n                break;\n            case 'unIgnoreRows':\n            case 'unIgnoreDevices':\n                delete tableConfig.ignoreDevice;\n                break;\n            case 'updateData':\n                status.text=\"column \"+msg.payload.column+\" updated\";\n                delete msg.ui_control;\n                return [{payload:status},msg];\n            case 'updateTable':\n                status.text=msg.payload.command+\": \";\n                break;\n            case 'columnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=false;\n                break;\n            case 'columnUnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=true;\n                break;\n            case 'columnsUnHide':\n                for (let column in tableConfig.columnVisible) {\n                    if (tableConfig.columnVisible.hasOwnProperty(column)) tableConfig.columnVisible[column]=true;\n                }\n                break;\n            case 'refreshTable':\n                break;\n            case 'deleteColumnOrder':\n            case 'restoreColumnOrder':\n                delete tableConfig.columns;\n                break;\n            case 'deleteColumnWidth':\n            case 'resetColumnWidth':\n                delete tableConfig.columnWidths;\n                break;\n            case 'setResponsiveLayout':\n                tableConfig.ResponsiveLayout=!tableConfig.ResponsiveLayout;\n                break;\n            case 'deleteRowOrder':\n                delete tableConfig.rowOrder;\n                break;\n            case 'setMaxStore':\n                tableConfig.maxStore=msg.payload.object;\n                maxStore=msg.payload.object;\n                break;\n            case 'setMaxRows':\n                tableConfig.maxRows=msg.payload.object;\n                maxRows=msg.payload.object;\n                break;\n            default:\n                status.fill=\"red\";\n                status.text=\"unknown command \"+msg.payload.command;\n                node.warn(\"[ui-table handler] \"+status.text);\n                break;\n        }\n        flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n        node.send([{payload:status},null,null]);\n    }\n\n    // crawl through tabulator arrays and updated user defined values\n    var crawlTabulator = function (columns,match,config,property) {\n        for (let column of columns) {\n            if (column.hasOwnProperty(\"columns\")) {\n                crawlTabulator(column.columns,match,config,property);\n            } else if (config.hasOwnProperty(column[match])) column[property]=config[column.field];\n        }\n    };\n    \n    // restore custom column width\n    if (tableConfig.hasOwnProperty(\"columnWidths\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnWidths,\"width\");\n    }\n    \n    // restore custom column hide/show\n    if (tableConfig.hasOwnProperty(\"columnVisible\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnVisible,\"visible\");\n    }\n    \n    // restore custom responsive / standard view\n    if (tableConfig.hasOwnProperty(\"ResponsiveLayout\")) {\n        if (!tableConfig.ResponsiveLayout) {\n            msg.ui_control.tabulator.responsiveLayout=false;\n        }\n        msg.ui_control.tabulator.columns.forEach((column,index) => {\n            if (column.formatter===\"responsiveCollapse\") { // hide expand column on any position\n                column.visible=tableConfig.ResponsiveLayout;\n                return;\n            }\n        });\n    }\n\n    // sort columns\n    if (tableConfig.hasOwnProperty(\"columns\") && msg.hasOwnProperty(\"ui_control\") && msg.ui_control.hasOwnProperty(\"tabulator\")) {\n        var addedColumns = 0;\n        var sortColumnsByLayout = function (sortColumns, columnsLayout, targetColumns) {\n            for (var layoutColumn=0;  layoutColumn<columnsLayout.length; layoutColumn++) {\n                for (var sortColumn in sortColumns) {\n                    if (sortColumns[sortColumn].hasOwnProperty(\"columns\")) {\n                        targetColumns.push({\"title\":sortColumns[sortColumn].title, \"columns\":[]});\n                        sortColumnsByLayout(sortColumns[sortColumn].columns,columnsLayout,targetColumns[targetColumns.length-1].columns);\n                        layoutColumn=addedColumns; // jump forward after childes added\n                    } else {\n                        if (columnsLayout[layoutColumn].field===sortColumns[sortColumn].field){\n                            targetColumns.push(sortColumns[sortColumn]);\n                            addedColumns++;\n                            break;\n                        }\n                    }\n                }\n            }\n        };                 \n        var newColumns=[];\n        sortColumnsByLayout(msg.ui_control.tabulator.columns,tableConfig.columns,newColumns);\n        msg.ui_control.tabulator.columns=newColumns;\n    }\n\n    // restore stored lines after connect\n\n    let command = msg.payload.command;\n    var tableArray;\n    if (command===\"getTable\") {\n        msg.payload.tableArray=[];\n        tableArray=msg.payload.tableArray\n    } else {\n        msg.payload=[];\n        tableArray=msg.payload;\n    }\n    \n    var pushRowData = function(rowData) {\n        // ignore rows in ignoreRows array\n        if (tableConfig && tableConfig.hasOwnProperty(\"ignoreDevice\") && tableConfig.ignoreDevice[rowData]) {\n            // do nothing\n        } else {\n            // merge edits into table\n            if (tableEdit && tableEdit.hasOwnProperty(rowData)) {\n                let tableRow = RED.util.cloneMessage(tableData[rowData]);\n                Object.keys(tableEdit[rowData]).forEach((field) => {\n                    tableRow[field]=tableEdit[rowData][field];\n                });\n                tableArray.push(tableRow);\n            } else {\n                tableArray.push(tableData[rowData]);\n            }\n        }\n    }\n    \n    if (tableConfig.hasOwnProperty(\"rowOrder\")) {\n        // first check if new rows exits which are not in rowOrder\n        Object.keys(tableData).forEach((key) => {\n            if (tableConfig.rowOrder.indexOf(tableData[key][tableIndex])<0) {\n                tableConfig.rowOrder.push(tableData[key][tableIndex]); // add row to the end of rowOrder\n            }\n        });\n        tableConfig.rowOrder.forEach((value,index) => {\n            node.warn([\"pushRowOrder\",value,tableData.hasOwnProperty(value),tableData[value]]);\n            if (tableData.hasOwnProperty(value)) { // push rows in rowOrder sequence\n                pushRowData(value);\n            } else { // delete not existing rows from rowOrder\n                tableConfig.rowOrder.splice(index,1)\n            }\n       });\n    } else {\n        for (let rowData in tableData) {\n            pushRowData(rowData);\n        }\n    }\n    // store the first index if maxRows limits amount of displayed lines\n    if (maxRows>0 && tableData) {\n        let tableKeys=Object.keys(tableData);\n        if (tableKeys.length>0 && typeof tableData[tableKeys[0]][tableIndex] === \"number\") {\n            tableConfig.currentFirstRow=tableData[tableKeys[0]][tableIndex];\n        }\n    }\n    \n    if (command=='getTable'){\n        status.fill=\"blue\";\n        status.text+=\" \"+tableArray.length+\" rows emitted\";\n        return [{payload:status},null,msg];\n    } else {\n        status.fill=\"blue\";\n        status.text+=\" \"+tableArray.length+\" rows restored\";\n        return [{payload:status},msg,[{topic:\"maxRows\",payload:maxRows},{topic:\"maxStore\",payload:maxStore}]];\n    }\n} if (msg.hasOwnProperty(\"ui_control\")) {\n    // callback from tabulator\n    status.fill=\"blue\";\n    status.text=\"callback \"+msg.ui_control.callback;\n    switch(msg.ui_control.callback) {\n        case \"columnResized\": // save new column width\n            if (tableConfig.columnWidths===undefined) tableConfig.columnWidths={};\n            tableConfig.columnWidths[msg.ui_control.columnWidths.field]=msg.ui_control.columnWidths.width;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=msg.ui_control.columnWidths.field+\"=\"+msg.ui_control.columnWidths.width+\"px\";\n            break;\n        case \"columnMoved\": // save new column order\n            if (tableConfig.columns===undefined) tableConfig.columns=[];\n            tableConfig.columns=msg.ui_control.columns;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new column order\";\n            break;\n        case \"cellEdited\":\n            if (tableEdit) {\n                if (!tableEdit.hasOwnProperty(msg[tableIndex])) tableEdit[msg[tableIndex]]={};\n                tableEdit[msg[tableIndex]][msg.field] = msg.payload; // save data and mark as edited field\n                flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n                mergeEdits(tableData);\n                flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n                status.text=msg[tableIndex]+\" \"+msg.field+\" edited to \"+msg.payload;\n                msg[tableDataProp]={};\n                msg[tableDataProp][tableIndex]=msg[tableIndex];\n                msg[tableDataProp][msg.field]=msg.payload;\n                msgToTable.payload.arguments=[[msg[tableDataProp]]];\n                node.send([{payload:status},null,msg]); // was node.send([{payload:status},msgToTable,msg]);\n            } else {\n                node.error(\"[ui-table handler] no tableEdit store defined!\")\n            }\n            break;\n        case \"rowContext\":\n            msg.ignoredDevices=[];\n            for (let rowData in tableConfig.ignoreDevice) {\n                if (tableConfig.ignoreDevice.hasOwnProperty(rowData)) {\n                    msg.ignoredDevices.push({\"text\":rowData,\"icon\":\"fa fa-plug\",\"topic\":\"unIgnoreDevice\",\"payload\":rowData})  \n                }\n            }\n            break;\n        case \"headerContext\":\n            msg.hiddenColumns=[];\n            let tabulatorConfig = env.get('tabulator');\n            for (let column in tableConfig.columnVisible) {\n                if (tableConfig.columnVisible.hasOwnProperty(column) &&\n                    !tableConfig.columnVisible[column]) {\n                    let configColumn=searchTabulatorColumn(tabulatorConfig.tabulator.columns,\"field\",column);\n                    let icon;\n                    if (configColumn.hasOwnProperty('title') && configColumn.title.toLowerCase().includes('</i>')) {\n                        // <i class='fa fa-star-half-o'></i> State\n                        let start=configColumn.title.indexOf(\"'fa \");\n                        let end=configColumn.title.indexOf(\"'\",start+1);\n                        icon=configColumn.title.substring(start+4,end);\n                    }\n                    msg.hiddenColumns.push({\"text\":column,\"icon\":icon,\"topic\":\"columnUnHide\",\"payload\":configColumn.field})  \n                }\n            }\n            break;\n        case \"rowMoved\":\n            if (tableConfig.rowOrder===undefined) tableConfig.rowOrder={};\n            tableConfig.rowOrder=msg.ui_control.rowOrder;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new row order\";\n            break;\n        default:\n            // if rowIndex exists pass complete object\n            if (msg.hasOwnProperty(tableIndex)) {\n                msg.rowData=tableData[msg[tableIndex]];\n            }\n            status.text=\"pass message\";\n    }\n    return [{payload:status},null,msg];\n} \nif (Array.isArray(msg.payload)) {\n    tableData={};\n    \n    msg.payload.forEach((row) => {\n        if (row.hasOwnProperty(tableIndex)) {\n            tableData[row[tableIndex]]=row;\n        }\n    });\n    if (msg.keepEdits) {\n        mergeEdits(tableData);\n    }\n\n    \n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n    if (tableContext.hasOwnProperty(\"tableEdit\") && !msg.keepEdits) {\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n    status.fill=\"blue\"\n    status.text=\"table replaced \"+msg.payload.length+\" rows\";\n    return [{payload:status},msg,null];\n}    \n    \n// nothing to do bejond this point\nstatus.text+=\" [\"+msg.payload+\"]\";\nreturn [{payload:status},null];\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 220,
        "wires": [
            [],
            [],
            []
        ],
        "icon": "font-awesome/fa-table"
    },
    {
        "id": "9709b9f87fef300e",
        "type": "function",
        "z": "ee3f1e510df2584d",
        "name": "handle tableData",
        "func": "var status = {fill:\"red\",shape:\"dot\",text: \"payload \"};\nvar tableIndex = env.get(\"tableIndex\") || \"$topic\";\nvar tableDataProp = env.get(\"tableDataProp\") || \"row\";\nvar tableContext = env.get(\"tableContext\");\nvar dashboard = env.get(\"dashboard\");\nvar maxRows = env.get(\"maxRows\") || 0;\nvar maxStore = env.get(\"maxStore\") || 0;\n\nif (!tableContext.hasOwnProperty(\"tableData\") || !tableContext.hasOwnProperty(\"tableConfig\")) {\n    status.text=\"tableContext not defined\";\n    node.error(status.text);\n    return [{payload:status},null];\n}\n\n// context store to cache table data (memoryOnly prefered)\nvar tableData = flow.get(\"$parent.\"+tableContext.tableData.name,tableContext.tableData.storage);\nif (tableData===undefined) {\n    node.warn(\"[ui-table handler] tableData initialized!\");\n    tableData={};\n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n}\n\n// context Store to save table configuration (file)\nvar tableConfig = flow.get(\"$parent.\"+tableContext.tableConfig.name,tableContext.tableConfig.storage);\nif (tableConfig===undefined) {\n    node.warn(\"[ui-table handler] tableConfig initialized!\");\n    tableConfig={ResponsiveLayout:true};\n    flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n}\n\nif (tableConfig.hasOwnProperty(\"maxStore\")) maxStore=tableConfig.maxStore;\nif (tableConfig.hasOwnProperty(\"maxRows\")) maxRows=tableConfig.maxRows;\n\n// context Store to save table configuration (file)\nvar tableEdit;\nif (tableContext.hasOwnProperty(\"tableEdit\")) {\n    tableEdit = flow.get(\"$parent.\"+tableContext.tableEdit.name,tableContext.tableEdit.storage);\n    if (tableEdit===undefined) {\n        node.warn(\"[ui-table handler] tableEdit initialized!\");\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n}\n\n// function to merge partial data into existing table row\nvar mergeObject = function (destination, source, filter) {\n    for (let currentSource in source) {\n        if (source.hasOwnProperty(currentSource)) {\n            if (filter!==undefined && tableEdit && tableEdit.hasOwnProperty(filter) && tableEdit[filter].hasOwnProperty(currentSource)) {\n                destination[currentSource]= tableEdit[filter][currentSource];\n                source[currentSource]=tableEdit[filter][currentSource];\n            } else {\n                destination[currentSource]= source[currentSource];\n            }\n        }    \n    }\n    return source;\n};\n\n// merge edits into a destination object respecting _children\nvar mergeEdits = function(destination) {\n    \n    var mergeChildEdits = function(children) {\n        children.forEach(child => {\n            if (child.hasOwnProperty(tableIndex) && tableEdit.hasOwnProperty(child[tableIndex])) {\n//                node.warn([\"mergeChild\",child])\n                Object.keys(tableEdit[child[tableIndex]]).forEach(edit => {\n                    if (child.hasOwnProperty(edit)) {\n                        child[edit]=tableEdit[child[tableIndex]][edit];\n//                        node.warn([\"mergeChild edit \",edit,child[edit]])\n                    }\n                });\n            }\n            if (child.hasOwnProperty(\"_children\")) {\n                mergeChildEdits(child._children);\n            }\n        })\n    }\n    \n\n    Object.keys(destination).forEach(row => {\n        if (destination[row].hasOwnProperty(tableIndex)) {\n            if (tableEdit.hasOwnProperty(row)) {\n                Object.keys(tableEdit[row]).forEach(edit => {\n                    destination[row][edit]=tableEdit[row][edit];\n                });\n            }\n            if (destination[row].hasOwnProperty(\"_children\")) {\n                mergeChildEdits(destination[row]._children);\n            }\n       }\n    });\n}\n\n// deep search for a column including nested columns\nvar searchTabulatorColumn = function (columns,key,match) {\n    var result;\n    for (let column of columns) {\n        if (column.hasOwnProperty(\"columns\")) {\n            result = searchTabulatorColumn(column.columns,key,match);\n            if (result!==undefined) return result;\n        } else if (column.hasOwnProperty(key) && column[key]===match) {\n            return column;\n        }\n    }\n};\n\n// command message to update add or update data on ui-table\nvar msgToTable={};\nmsgToTable.payload={\n    \"command\":msg.tabulatorCommand || \"updateOrAddData\",\n    \"arguments\": [],\n    \"returnPromise\": false\n};\n\n// store data in tableData\nif (msg.hasOwnProperty(tableDataProp)) {\n    // store data for later recover\n    if (!msg.hasOwnProperty(\"topic\")) { // check if index existst\n        status.text=\"msg.topic not defined!\";\n        return [{payload:status},null];\n    }\n    if (!tableData.hasOwnProperty(msg.topic)){ // first seen\n        if (maxRows>0 && Object.keys(tableData).lenght===0) {\n            tableConfig.currentFirstRow=msg.topic;\n        }\n        tableData[msg.topic]={};\n        if (tableEdit && tableEdit.hasOwnProperty(msg.topic)) { // table edits available!\n            Object.keys(tableEdit[msg.topic]).forEach((key) => {\n                msg[tableDataProp][key]=tableEdit[msg.topic][key];\n                tableData[msg.topic][key]=tableEdit[msg.topic][key];\n            })\n        }\n        if (maxStore>0 && typeof msg.topic === \"number\") { // limit rows in tableData\n            let rowKeys = Object.keys(tableData);\n            if (rowKeys.length>maxStore) {\n                for (let i=0; i<(rowKeys.length-maxStore); i++) {\n                    delete tableData[rowKeys[i]];\n                }\n            }\n        }\n    }\n    if (!tableData[msg.topic].hasOwnProperty(tableIndex)) tableData[msg.topic][tableIndex]=msg.topic;\n    msg[tableDataProp]=mergeObject(tableData[msg.topic],msg[tableDataProp],msg.topic);\n    msg[tableDataProp][tableIndex]=msg.topic;\n    msgToTable.payload.arguments=[[msg[tableDataProp]]];\n    // add aditional parameters\n    if (msg.hasOwnProperty(\"tabulatorParameter\") && Array.isArray(msg.tabulatorParameter)) {\n        for (let arg in msg.tabulatorParameter) msgToTable.payload.arguments.push(arg);\n    }\n    // delete rows if rows exceed maxRows\n    /*\n    if (maxRows>0 && tableConfig.hasOwnProperty(\"currentFirstRow\") && typeof tableData[msg.topic][tableIndex]===\"number\") {\n        //node.warn([maxRows,tableConfig.hasOwnProperty(\"currentFirstRow\"),typeof tableData[msg.topic][tableIndex],tableConfig.currentFirstRow,tableData[msg.topic][tableIndex]-maxRows])\n        if (tableConfig.currentFirstRow<tableData[msg.topic][tableIndex]-maxRows) {\n            node.warn([\"maxRowExeeded\",tableConfig.currentFirstRow]);\n            node.send([null,{payload:{\"command\":\"deleteRow\",\"arguments\": [tableConfig.currentFirstRow],\"returnPromise\": false}},null]);\n            tableConfig.currentFirstRow++;\n        }\n    }*/\n    if (maxRows>0 && typeof tableData[msg.topic][tableIndex]===\"number\" && msg.topic-maxRows>0) {\n        node.send([null,{payload:{\"command\":\"deleteRow\",\"arguments\": [msg.topic-maxRows],\"returnPromise\": false}},null]);\n    }\n    status.fill=\"green\";\n    status.text=msg.topic+\" updated\";\n    return [{payload:status},msgToTable,null];\n} if (msg.payload===\"connect\" || (msg.payload===\"change\" && msg.name===dashboard) || (msg.hasOwnProperty(\"payload\") && msg.payload.hasOwnProperty(\"command\"))) { \n    if (!msg.hasOwnProperty(\"ui_control\")) {\n        msg.ui_control = env.get('tabulator');\n        status.text+=\" ui_control added\";\n    }\n    //process commands\n    //node.warn({\"command\":msg.payload.command,\"msg\":msg,\"object\":msg.payload.object})\n    if (msg.payload.hasOwnProperty(\"command\") && msg.payload.command!=='getTable') {\n        status.fill=\"blue\";\n        switch(msg.payload.command) {\n            case 'deleteTable':\n                flow.set(\"$parent.\"+tableContext.tableData.name,undefined,tableContext.tableData.storage);\n                tableData={};\n                status.text=\"tabledata deleted\";\n                node.warn(\"[ui-table handler] \"+\"tabledata deleted\");\n                break;\n            case 'deleteRow':\n            case 'deleteDevice':\n                var deleteRow = function(id) {\n                    // check if row is in root\n                    if (tableData.hasOwnProperty(id)) {\n                        delete tableData[id]\n                        return true;\n                    }\n                    // check if row is a child\n                    let deleteChildRow = function(children, id) {\n                        for(let i = 0; i < children.length; i++){\n                            if (children[i].hasOwnProperty(tableIndex) && children[i][tableIndex]===id) {\n                                children.splice(i, 1); \n                                return true; \n                            }\n                            if (children[i].hasOwnProperty(\"_children\")) {\n                                if (deleteChildRow(children[i]._children,id)) {\n                                    if (children[i]._children.length === 0) {\n                                        delete children[i]._children;\n                                    }\n                                    return true;\n                                }\n                            }\n                        }\n                        return false;\n                    };\n                    \n                    for (let row in tableData) {\n                        if (tableData[row].hasOwnProperty(\"_children\")) {\n                            if (deleteChildRow(tableData[row]._children,id)) return true;\n                        }\n                    }\n                    return false;\n                }\n                \n                if (deleteRow(msg.payload.object)) {\n                    status.text=msg.payload.object+\" deleted\";\n                } else {\n                    status.fill=\"yellow\";\n                    status.text=msg.payload.object+\" undefined\";\n                }\n                break;\n            case 'ignoreRow':\n            case 'ignoreDevice':\n                if (tableData.hasOwnProperty(msg.payload.object)) {\n                    delete tableData[msg.payload.object];\n                    status.text=msg.payload.object+\" will be ignored\";\n                    if (!tableConfig.hasOwnProperty('ignoreDevice')) tableConfig.ignoreDevice={};\n                    tableConfig.ignoreDevice[msg.payload.object]=true;\n                }\n                break;\n            case 'unIgnoreRow':\n            case 'unIgnoreDevice':\n                if (tableConfig.hasOwnProperty('ignoreDevice')) {\n                    delete tableConfig.ignoreDevice[msg.payload.object];\n                }\n                break;\n            case 'unIgnoreRows':\n            case 'unIgnoreDevices':\n                delete tableConfig.ignoreDevice;\n                break;\n            case 'updateData':\n                status.text=\"column \"+msg.payload.column+\" updated\";\n                delete msg.ui_control;\n                return [{payload:status},msg];\n            case 'updateTable':\n                status.text=msg.payload.command+\": \";\n                break;\n            case 'columnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=false;\n                break;\n            case 'columnUnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=true;\n                break;\n            case 'columnsUnHide':\n                for (let column in tableConfig.columnVisible) {\n                    if (tableConfig.columnVisible.hasOwnProperty(column)) tableConfig.columnVisible[column]=true;\n                }\n                break;\n            case 'refreshTable':\n                break;\n            case 'deleteColumnOrder':\n            case 'restoreColumnOrder':\n                delete tableConfig.columns;\n                break;\n            case 'deleteColumnWidth':\n            case 'resetColumnWidth':\n                delete tableConfig.columnWidths;\n                break;\n            case 'setResponsiveLayout':\n                tableConfig.ResponsiveLayout=!tableConfig.ResponsiveLayout;\n                break;\n            case 'deleteRowOrder':\n                delete tableConfig.rowOrder;\n                break;\n            case 'setMaxStore':\n                tableConfig.maxStore=msg.payload.object;\n                maxStore=msg.payload.object;\n                break;\n            case 'setMaxRows':\n                tableConfig.maxRows=msg.payload.object;\n                maxRows=msg.payload.object;\n                break;\n            default:\n                status.fill=\"red\";\n                status.text=\"unknown command \"+msg.payload.command;\n                node.warn(\"[ui-table handler] \"+status.text);\n                break;\n        }\n        flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n        node.send([{payload:status},null,null]);\n    }\n\n    // crawl through tabulator arrays and updated user defined values\n    var crawlTabulator = function (columns,match,config,property) {\n        for (let column of columns) {\n            if (column.hasOwnProperty(\"columns\")) {\n                crawlTabulator(column.columns,match,config,property);\n            } else if (config.hasOwnProperty(column[match])) column[property]=config[column.field];\n        }\n    };\n    \n    // restore custom column width\n    if (tableConfig.hasOwnProperty(\"columnWidths\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnWidths,\"width\");\n    }\n    \n    // restore custom column hide/show\n    if (tableConfig.hasOwnProperty(\"columnVisible\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnVisible,\"visible\");\n    }\n    \n    // restore custom responsive / standard view\n    if (tableConfig.hasOwnProperty(\"ResponsiveLayout\")) {\n        if (!tableConfig.ResponsiveLayout) {\n            msg.ui_control.tabulator.responsiveLayout=false;\n        }\n        msg.ui_control.tabulator.columns.forEach((column,index) => {\n            if (column.formatter===\"responsiveCollapse\") { // hide expand column on any position\n                column.visible=tableConfig.ResponsiveLayout;\n                return;\n            }\n        });\n    }\n\n    // sort columns\n    if (tableConfig.hasOwnProperty(\"columns\") && msg.hasOwnProperty(\"ui_control\") && msg.ui_control.hasOwnProperty(\"tabulator\")) {\n        var addedColumns = 0;\n        var sortColumnsByLayout = function (sortColumns, columnsLayout, targetColumns) {\n            for (var layoutColumn=0;  layoutColumn<columnsLayout.length; layoutColumn++) {\n                for (var sortColumn in sortColumns) {\n                    if (sortColumns[sortColumn].hasOwnProperty(\"columns\")) {\n                        targetColumns.push({\"title\":sortColumns[sortColumn].title, \"columns\":[]});\n                        sortColumnsByLayout(sortColumns[sortColumn].columns,columnsLayout,targetColumns[targetColumns.length-1].columns);\n                        layoutColumn=addedColumns; // jump forward after childes added\n                    } else {\n                        if (columnsLayout[layoutColumn].field===sortColumns[sortColumn].field){\n                            targetColumns.push(sortColumns[sortColumn]);\n                            addedColumns++;\n                            break;\n                        }\n                    }\n                }\n            }\n        };                 \n        var newColumns=[];\n        sortColumnsByLayout(msg.ui_control.tabulator.columns,tableConfig.columns,newColumns);\n        msg.ui_control.tabulator.columns=newColumns;\n    }\n\n    // restore stored lines after connect\n\n    let command = msg.payload.command;\n    var tableArray;\n    if (command===\"getTable\") {\n        msg.payload.tableArray=[];\n        tableArray=msg.payload.tableArray\n    } else {\n        msg.payload=[];\n        tableArray=msg.payload;\n    }\n    \n    var pushRowData = function(rowData) {\n        // ignore rows in ignoreRows array\n        if (tableConfig && tableConfig.hasOwnProperty(\"ignoreDevice\") && tableConfig.ignoreDevice[rowData]) {\n            // do nothing\n        } else {\n            // merge edits into table\n            if (tableEdit && tableEdit.hasOwnProperty(rowData)) {\n                let tableRow = RED.util.cloneMessage(tableData[rowData]);\n                Object.keys(tableEdit[rowData]).forEach((field) => {\n                    tableRow[field]=tableEdit[rowData][field];\n                });\n                tableArray.push(tableRow);\n            } else {\n                tableArray.push(tableData[rowData]);\n            }\n        }\n    }\n    \n    if (tableConfig.hasOwnProperty(\"rowOrder\")) {\n        // first check if new rows exits which are not in rowOrder\n        Object.keys(tableData).forEach((key) => {\n            if (tableConfig.rowOrder.indexOf(tableData[key][tableIndex])<0) {\n                tableConfig.rowOrder.push(tableData[key][tableIndex]); // add row to the end of rowOrder\n            }\n        });\n        tableConfig.rowOrder.forEach((value,index) => {\n            node.warn([\"pushRowOrder\",value,tableData.hasOwnProperty(value),tableData[value]]);\n            if (tableData.hasOwnProperty(value)) { // push rows in rowOrder sequence\n                pushRowData(value);\n            } else { // delete not existing rows from rowOrder\n                tableConfig.rowOrder.splice(index,1)\n            }\n       });\n    } else {\n        for (let rowData in tableData) {\n            pushRowData(rowData);\n        }\n    }\n    // store the first index if maxRows limits amount of displayed lines\n    if (maxRows>0 && tableData) {\n        let tableKeys=Object.keys(tableData);\n        if (tableKeys.length>0 && typeof tableData[tableKeys[0]][tableIndex] === \"number\") {\n            tableConfig.currentFirstRow=tableData[tableKeys[0]][tableIndex];\n        }\n    }\n    \n    if (command=='getTable'){\n        status.fill=\"blue\";\n        status.text+=\" \"+tableArray.length+\" rows emitted\";\n        return [{payload:status},null,msg];\n    } else {\n        status.fill=\"blue\";\n        status.text+=\" \"+tableArray.length+\" rows restored\";\n        return [{payload:status},msg,[{topic:\"maxRows\",payload:maxRows},{topic:\"maxStore\",payload:maxStore}]];\n    }\n} if (msg.hasOwnProperty(\"ui_control\")) {\n    // callback from tabulator\n    status.fill=\"blue\";\n    status.text=\"callback \"+msg.ui_control.callback;\n    switch(msg.ui_control.callback) {\n        case \"columnResized\": // save new column width\n            if (tableConfig.columnWidths===undefined) tableConfig.columnWidths={};\n            tableConfig.columnWidths[msg.ui_control.columnWidths.field]=msg.ui_control.columnWidths.width;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=msg.ui_control.columnWidths.field+\"=\"+msg.ui_control.columnWidths.width+\"px\";\n            break;\n        case \"columnMoved\": // save new column order\n            if (tableConfig.columns===undefined) tableConfig.columns=[];\n            tableConfig.columns=msg.ui_control.columns;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new column order\";\n            break;\n        case \"cellEdited\":\n            if (tableEdit) {\n                if (!tableEdit.hasOwnProperty(msg[tableIndex])) tableEdit[msg[tableIndex]]={};\n                tableEdit[msg[tableIndex]][msg.field] = msg.payload; // save data and mark as edited field\n                flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n                mergeEdits(tableData);\n                flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n                status.text=msg[tableIndex]+\" \"+msg.field+\" edited to \"+msg.payload;\n                msg[tableDataProp]={};\n                msg[tableDataProp][tableIndex]=msg[tableIndex];\n                msg[tableDataProp][msg.field]=msg.payload;\n                msgToTable.payload.arguments=[[msg[tableDataProp]]];\n                node.send([{payload:status},null,msg]); // was node.send([{payload:status},msgToTable,msg]);\n            } else {\n                node.error(\"[ui-table handler] no tableEdit store defined!\")\n            }\n            break;\n        case \"rowContext\":\n            msg.ignoredDevices=[];\n            for (let rowData in tableConfig.ignoreDevice) {\n                if (tableConfig.ignoreDevice.hasOwnProperty(rowData)) {\n                    msg.ignoredDevices.push({\"text\":rowData,\"icon\":\"fa fa-plug\",\"topic\":\"unIgnoreDevice\",\"payload\":rowData})  \n                }\n            }\n            break;\n        case \"headerContext\":\n            msg.hiddenColumns=[];\n            let tabulatorConfig = env.get('tabulator');\n            for (let column in tableConfig.columnVisible) {\n                if (tableConfig.columnVisible.hasOwnProperty(column) &&\n                    !tableConfig.columnVisible[column]) {\n                    let configColumn=searchTabulatorColumn(tabulatorConfig.tabulator.columns,\"field\",column);\n                    let icon;\n                    if (configColumn.hasOwnProperty('title') && configColumn.title.toLowerCase().includes('</i>')) {\n                        // <i class='fa fa-star-half-o'></i> State\n                        let start=configColumn.title.indexOf(\"'fa \");\n                        let end=configColumn.title.indexOf(\"'\",start+1);\n                        icon=configColumn.title.substring(start+4,end);\n                    }\n                    msg.hiddenColumns.push({\"text\":column,\"icon\":icon,\"topic\":\"columnUnHide\",\"payload\":configColumn.field})  \n                }\n            }\n            break;\n        case \"rowMoved\":\n            if (tableConfig.rowOrder===undefined) tableConfig.rowOrder={};\n            tableConfig.rowOrder=msg.ui_control.rowOrder;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new row order\";\n            break;\n        default:\n            // if rowIndex exists pass complete object\n            if (msg.hasOwnProperty(tableIndex)) {\n                msg.rowData=tableData[msg[tableIndex]];\n            }\n            status.text=\"pass message\";\n    }\n    return [{payload:status},null,msg];\n} \nif (Array.isArray(msg.payload)) {\n    tableData={};\n    \n    msg.payload.forEach((row) => {\n        if (row.hasOwnProperty(tableIndex)) {\n            tableData[row[tableIndex]]=row;\n        }\n    });\n    if (msg.keepEdits) {\n        mergeEdits(tableData);\n    }\n\n    \n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n    if (tableContext.hasOwnProperty(\"tableEdit\") && !msg.keepEdits) {\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n    status.fill=\"blue\"\n    status.text=\"table replaced \"+msg.payload.length+\" rows\";\n    return [{payload:status},msg,null];\n}    \n    \n// nothing to do bejond this point\nstatus.text+=\" [\"+msg.payload+\"]\";\nreturn [{payload:status},null];\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 220,
        "wires": [
            [],
            [],
            []
        ],
        "icon": "font-awesome/fa-table"
    },
    {
        "id": "b6fac309082a67f3",
        "type": "mqtt in",
        "z": "aa2c5de576744bc5",
        "name": "",
        "topic": "/G1/",
        "qos": "2",
        "datatype": "auto",
        "broker": "41370e1941ec34b4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 300,
        "wires": [
            [
                "680935e99b8eb274",
                "8f2c4d1797a19b67"
            ]
        ]
    },
    {
        "id": "680935e99b8eb274",
        "type": "json",
        "z": "aa2c5de576744bc5",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 270,
        "y": 300,
        "wires": [
            [
                "07c22eb59c7278e6",
                "8d2531530bf06df7"
            ]
        ]
    },
    {
        "id": "8d2531530bf06df7",
        "type": "debug",
        "z": "aa2c5de576744bc5",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 340,
        "wires": []
    },
    {
        "id": "5e6ffc9d52b7ebe1",
        "type": "ui_led",
        "z": "aa2c5de576744bc5",
        "order": 22,
        "group": "953580f1c70bae15",
        "width": 2,
        "height": 1,
        "label": "<font color=\"blue\"><b>Phao:",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "#ff0000",
                "value": "1",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "status phao",
        "x": 690,
        "y": 780,
        "wires": []
    },
    {
        "id": "4b06fe7cd8825afb",
        "type": "function",
        "z": "aa2c5de576744bc5",
        "name": "check ss phao",
        "func": "var status = global.get(\"status_phao_1\");\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 780,
        "wires": [
            [
                "5e6ffc9d52b7ebe1"
            ]
        ]
    },
    {
        "id": "21b07daf7080121e",
        "type": "function",
        "z": "aa2c5de576744bc5",
        "name": "display",
        "func": "var payload = msg.payload;\nvar muc_nuoc = global.get(\"level_1\");\nvar luu_luong = global.get(\"flow_1\");\nvar luu_luong_tong = global.get(\"total_1\");\nvar status_flow = global.get(\"status_flow_1\");\nvar status_level = global.get(\"status_level_1\");\nvar tong_ngay = global.get(\"tong_ngay_1\");\nvar pv_hz = global.get(\"pv_hz_1\");\nvar phao = global.get(\"status_phao_1\");\nif (muc_nuoc == null || muc_nuoc == undefined) \n{\n    muc_nuoc = 0;\n}\nif (luu_luong == null || luu_luong == undefined) \n{\n    luu_luong = 0;\n}\nif (luu_luong_tong == null || luu_luong_tong == undefined) \n{\n    luu_luong_tong = 0;\n}\nif (status_flow == null || status_flow == undefined) \n{\n    status_flow = 2;\n}\nif (status_level == null || status_level == undefined) \n{\n    status_level = 2;\n}\nif (tong_ngay == null || tong_ngay == undefined) \n{\n    tong_ngay = 0;\n}\nif (pv_hz == null || pv_hz == undefined) \n{\n    pv_hz = 0;\n}\nif (phao == null || phao == undefined) \n{\n    phao = 0;\n}\nmsg = {};\nmsg.muc_nuoc = muc_nuoc;\nmsg.luu_luong = luu_luong;\nmsg.luu_luong_tong = luu_luong_tong;\nmsg.status_flow = status_flow;\nmsg.status_level = status_level;\nmsg.tong_ngay = tong_ngay;\nmsg.pv_hz = pv_hz;\nmsg.phao = phao;\nreturn msg;\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 660,
        "wires": [
            [
                "d6d5bf93482aef77",
                "413b7d6d97cdeb13",
                "b372ba0626f662d3",
                "835caff45e03e574",
                "44a76803d4b009b1",
                "fd2d638cd992a7a9",
                "c3c8955e972f0afc",
                "859a0c8f0e17e746",
                "ad3545e25d9b8c8b"
            ]
        ]
    },
    {
        "id": "d6d5bf93482aef77",
        "type": "ui_gauge",
        "z": "aa2c5de576744bc5",
        "name": "level",
        "group": "953580f1c70bae15",
        "order": 5,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "<font color=\"blue\"><i class=\"fa fa-line-chart\" aria-hidden=\"true\"> Mực nước (max 14.5m)",
        "label": "",
        "format": "{{msg.muc_nuoc}}",
        "min": "0",
        "max": "14.6",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "10",
        "seg2": "14.5",
        "diff": false,
        "className": "",
        "x": 470,
        "y": 580,
        "wires": []
    },
    {
        "id": "413b7d6d97cdeb13",
        "type": "ui_gauge",
        "z": "aa2c5de576744bc5",
        "name": "flow",
        "group": "953580f1c70bae15",
        "order": 9,
        "width": 4,
        "height": 3,
        "gtype": "wave",
        "title": "<font color=\"blue\"><i class=\"fa fa-bar-chart\" aria-hidden=\"true\"> Lưu lượng (m3/h)",
        "label": "",
        "format": "{{msg.luu_luong}}",
        "min": "0",
        "max": "50",
        "colors": [
            "#e6e600",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "10",
        "seg2": "50",
        "diff": false,
        "className": "",
        "x": 470,
        "y": 620,
        "wires": []
    },
    {
        "id": "b372ba0626f662d3",
        "type": "ui_gauge",
        "z": "aa2c5de576744bc5",
        "name": "total",
        "group": "953580f1c70bae15",
        "order": 17,
        "width": 4,
        "height": 3,
        "gtype": "wave",
        "title": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\">Tổng (m3)",
        "label": "",
        "format": "{{msg.luu_luong_tong}}",
        "min": "0",
        "max": "99999999",
        "colors": [
            "#e6e600",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "6",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 470,
        "y": 660,
        "wires": []
    },
    {
        "id": "835caff45e03e574",
        "type": "ui_gauge",
        "z": "aa2c5de576744bc5",
        "name": "total day",
        "group": "953580f1c70bae15",
        "order": 13,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "<font color=\"blue\"> Tổng 24h (max 421.43m3)",
        "label": "",
        "format": "{{msg.tong_ngay}}",
        "min": "0",
        "max": "423",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "400",
        "seg2": "422",
        "diff": false,
        "className": "",
        "x": 480,
        "y": 700,
        "wires": []
    },
    {
        "id": "44a76803d4b009b1",
        "type": "link out",
        "z": "aa2c5de576744bc5",
        "name": "kt1",
        "mode": "link",
        "links": [
            "060c69e991d483c5"
        ],
        "x": 435,
        "y": 540,
        "wires": []
    },
    {
        "id": "fd2d638cd992a7a9",
        "type": "ui_text",
        "z": "aa2c5de576744bc5",
        "group": "cd22576b9e453129",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "level_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-line-chart\" aria-hidden=\"true\"> Mực nước (m): ",
        "format": "{{msg.muc_nuoc}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 690,
        "y": 580,
        "wires": []
    },
    {
        "id": "c3c8955e972f0afc",
        "type": "ui_text",
        "z": "aa2c5de576744bc5",
        "group": "cd22576b9e453129",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "flow_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-bar-chart\" aria-hidden=\"true\"> Lưu lượng tức thời (m3/h):",
        "format": "{{msg.luu_luong}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 690,
        "y": 620,
        "wires": []
    },
    {
        "id": "859a0c8f0e17e746",
        "type": "ui_text",
        "z": "aa2c5de576744bc5",
        "group": "cd22576b9e453129",
        "order": 11,
        "width": 6,
        "height": 1,
        "name": "total_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\"> Tổng lưu lượng (m3):",
        "format": "{{msg.luu_luong_tong}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 690,
        "y": 660,
        "wires": []
    },
    {
        "id": "ad3545e25d9b8c8b",
        "type": "ui_text",
        "z": "aa2c5de576744bc5",
        "group": "cd22576b9e453129",
        "order": 9,
        "width": 6,
        "height": 1,
        "name": "total day_mobile ",
        "label": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\">Tổng 24h (m3):",
        "format": "{{msg.tong_ngay}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 700,
        "y": 700,
        "wires": []
    },
    {
        "id": "5d45c76b1ef32c49",
        "type": "ui_text",
        "z": "aa2c5de576744bc5",
        "group": "cd22576b9e453129",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "check connect_mobile",
        "label": "<font color=\"blue\">Trạng thái kết nối với Datalogger:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 380,
        "y": 500,
        "wires": []
    },
    {
        "id": "7bd0775e6eb67f4f",
        "type": "ui_text",
        "z": "aa2c5de576744bc5",
        "group": "953580f1c70bae15",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "check connect",
        "label": "<font color=\"blue\"><b>Kết nối với Datalogger:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 360,
        "y": 460,
        "wires": []
    },
    {
        "id": "6f760a67eee3162e",
        "type": "function",
        "z": "aa2c5de576744bc5",
        "name": "check connect g1",
        "func": "var connect = global.get(\"counter_g1\");\nif (connect  < 2)\n{\n    msg.payload = false;\n}\nelse\n{\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 420,
        "wires": [
            [
                "37e6c543d4780fa7",
                "c91f4615513c7a1c"
            ]
        ]
    },
    {
        "id": "c74b7bc2549242f9",
        "type": "delay",
        "z": "aa2c5de576744bc5",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 380,
        "wires": [
            [
                "c0ce86d6665283ea"
            ]
        ]
    },
    {
        "id": "c0ce86d6665283ea",
        "type": "function",
        "z": "aa2c5de576744bc5",
        "name": "reset counter",
        "func": "global.set(\"counter_g1\", 0);\n//global.set(\"counter_g2\", 0);\n//global.set(\"counter_g3\", 0);\n//global.set(\"counter_g4\", 0);\n//global.set(\"counter_g5\", 0);\n//global.set(\"counter_g6\", 0);\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "37e6c543d4780fa7",
        "type": "ui_led",
        "z": "aa2c5de576744bc5",
        "order": 2,
        "group": "953580f1c70bae15",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect",
        "x": 590,
        "y": 420,
        "wires": []
    },
    {
        "id": "c91f4615513c7a1c",
        "type": "ui_led",
        "z": "aa2c5de576744bc5",
        "order": 2,
        "group": "cd22576b9e453129",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect_mobile",
        "x": 610,
        "y": 460,
        "wires": []
    },
    {
        "id": "1e601e685168d920",
        "type": "cronplus",
        "z": "aa2c5de576744bc5",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */5 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 180,
        "y": 400,
        "wires": [
            [
                "c74b7bc2549242f9",
                "6f760a67eee3162e"
            ]
        ]
    },
    {
        "id": "04166e0d4fc9ecf8",
        "type": "function",
        "z": "aa2c5de576744bc5",
        "name": "get total day",
        "func": "//var payload = msg.payload;\nvar check_tong0h_g1 = global.get(\"tong_0h_g1_sql\");\nvar tong_now_g1 = global.get(\"total_1\");\nvar tong_ngay_0h_g1 = (tong_now_g1 - check_tong0h_g1);\nglobal.set(\"tong_ngay_1\", tong_ngay_0h_g1);\n\n\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "7ee7a41916521cba",
        "type": "function",
        "z": "aa2c5de576744bc5",
        "name": "check ss level ",
        "func": "var status_level = global.get(\"status_level_1\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 840,
        "wires": [
            [
                "1c0eb228028db5c6",
                "5225ef6dac0ea38f"
            ]
        ]
    },
    {
        "id": "1c0eb228028db5c6",
        "type": "ui_led",
        "z": "aa2c5de576744bc5",
        "order": 7,
        "group": "953580f1c70bae15",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss level",
        "x": 700,
        "y": 840,
        "wires": []
    },
    {
        "id": "48415a01dea37325",
        "type": "function",
        "z": "aa2c5de576744bc5",
        "name": "check ss flow",
        "func": "var status_level = global.get(\"status_flow_1\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 880,
        "wires": [
            [
                "01adcf7a6e4d6260",
                "b82f543e6cbf4652"
            ]
        ]
    },
    {
        "id": "01adcf7a6e4d6260",
        "type": "ui_led",
        "z": "aa2c5de576744bc5",
        "order": 11,
        "group": "953580f1c70bae15",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss flow",
        "x": 690,
        "y": 880,
        "wires": []
    },
    {
        "id": "5225ef6dac0ea38f",
        "type": "ui_led",
        "z": "aa2c5de576744bc5",
        "order": 6,
        "group": "cd22576b9e453129",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss level_mobile",
        "x": 880,
        "y": 840,
        "wires": []
    },
    {
        "id": "b82f543e6cbf4652",
        "type": "ui_led",
        "z": "aa2c5de576744bc5",
        "order": 8,
        "group": "cd22576b9e453129",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss flow_mobile",
        "x": 880,
        "y": 880,
        "wires": []
    },
    {
        "id": "e5680e9d53af7ba7",
        "type": "ui_led",
        "z": "aa2c5de576744bc5",
        "order": 4,
        "group": "cd22576b9e453129",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "#008000",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "#ff0000",
                "value": "2",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "status inverter_mobile",
        "x": 500,
        "y": 80,
        "wires": []
    },
    {
        "id": "07c22eb59c7278e6",
        "type": "function",
        "z": "aa2c5de576744bc5",
        "name": "function 1",
        "func": "var payload = msg.payload;\n//global.set(\"level_1\", payload.Level);\nglobal.set(\"flow_1\", payload.Flow);\nif (payload.Total != 0)\n{\n    global.set(\"total_1\", payload.Total);\n} \nglobal.set(\"status_flow_1\", payload.Status_Flow);\n//global.set(\"status_level_1\", payload.Status_Level);\nglobal.set(\"status_level_1\", 0);\nglobal.set(\"pv_hz_1\", payload.PV_Hz);\nglobal.set(\"status_inverter_1\", payload.Status_Inverter);\nglobal.set(\"status_phao_1\", payload.Status_Phao);\nvar status = global.get(\"status_inverter_1\");\nif (status == 0)\n{\n    global.set(\"level_1\", global.get(\"a_level_1\"));\n}\nif (status == 1)\n{\n    global.set(\"level_1\", global.get(\"b_level_1\"));\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "7d7247a6bcf97355",
        "type": "ui_button",
        "z": "aa2c5de576744bc5",
        "name": "on inverter",
        "group": "953580f1c70bae15",
        "order": 23,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>BẬT BƠM",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "6f8c538b26c53760"
            ]
        ]
    },
    {
        "id": "a4e11b72cac3bfaf",
        "type": "function",
        "z": "aa2c5de576744bc5",
        "name": "function 78",
        "func": "msg.payload = {\"On_INV\": global.get(\"on_inv_1\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 120,
        "wires": [
            [
                "793f99f62826ab38",
                "33581a29429fd0a8"
            ]
        ]
    },
    {
        "id": "793f99f62826ab38",
        "type": "mqtt out",
        "z": "aa2c5de576744bc5",
        "name": "",
        "topic": "/O1/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 930,
        "y": 120,
        "wires": []
    },
    {
        "id": "6f8c538b26c53760",
        "type": "function",
        "z": "aa2c5de576744bc5",
        "name": "function 85",
        "func": "global.set(\"on_inv_1\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 120,
        "wires": [
            [
                "a4e11b72cac3bfaf"
            ]
        ]
    },
    {
        "id": "33581a29429fd0a8",
        "type": "debug",
        "z": "aa2c5de576744bc5",
        "name": "debug 36",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 60,
        "wires": []
    },
    {
        "id": "d948120ff416c6de",
        "type": "inject",
        "z": "aa2c5de576744bc5",
        "name": "",
        "props": [],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 780,
        "wires": [
            [
                "21b07daf7080121e",
                "4b06fe7cd8825afb",
                "7ee7a41916521cba",
                "48415a01dea37325",
                "04166e0d4fc9ecf8"
            ]
        ]
    },
    {
        "id": "5b26e6f93e7ac583",
        "type": "inject",
        "z": "aa2c5de576744bc5",
        "name": "",
        "props": [],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 80,
        "wires": [
            [
                "39c3a671c92b1643",
                "89d1e0abd8aba15d"
            ]
        ]
    },
    {
        "id": "39c3a671c92b1643",
        "type": "function",
        "z": "aa2c5de576744bc5",
        "name": "function 111",
        "func": "//var status = msg.payload;\nvar status = global.get(\"status_inverter_1\");\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 40,
        "wires": [
            [
                "e5680e9d53af7ba7"
            ]
        ]
    },
    {
        "id": "89d1e0abd8aba15d",
        "type": "function",
        "z": "aa2c5de576744bc5",
        "name": "function 112",
        "func": "//var status = msg.payload;\nvar status = global.get(\"status_inverter_1\");\nif (status == 1)\n{\n    msg.color = \"black\";\n}\nif (status == 0) \n{\n    msg.color = \"lime\";\n}\nif (status == 2) \n{\n    msg.color = \"red\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 220,
        "wires": [
            [
                "f6f1ea4c0191915f"
            ]
        ]
    },
    {
        "id": "d65fef985143d6ea",
        "type": "ui_button",
        "z": "aa2c5de576744bc5",
        "name": "off inverter",
        "group": "953580f1c70bae15",
        "order": 25,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>TẮT BƠM",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 180,
        "wires": [
            [
                "45fda9e3ad3fe352"
            ]
        ]
    },
    {
        "id": "45fda9e3ad3fe352",
        "type": "function",
        "z": "aa2c5de576744bc5",
        "name": "function 113",
        "func": "global.set(\"on_inv_1\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 180,
        "wires": [
            [
                "59cdb13ab25315a0"
            ]
        ]
    },
    {
        "id": "59cdb13ab25315a0",
        "type": "function",
        "z": "aa2c5de576744bc5",
        "name": "function 114",
        "func": "msg.payload = {\"On_INV\": global.get(\"on_inv_1\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 180,
        "wires": [
            [
                "bbf0e66812174929",
                "97f1582a499242cf"
            ]
        ]
    },
    {
        "id": "bbf0e66812174929",
        "type": "mqtt out",
        "z": "aa2c5de576744bc5",
        "name": "",
        "topic": "/O1/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 930,
        "y": 180,
        "wires": []
    },
    {
        "id": "97f1582a499242cf",
        "type": "debug",
        "z": "aa2c5de576744bc5",
        "name": "debug 43",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 240,
        "wires": []
    },
    {
        "id": "8f2c4d1797a19b67",
        "type": "function",
        "z": "aa2c5de576744bc5",
        "name": "counter connect g1",
        "func": "var counter_g1 = global.get(\"counter_g1\");\ncounter_g1 ++;  \nglobal.set(\"counter_g1\", counter_g1);\nmsg.payload = counter_g1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "f6f1ea4c0191915f",
        "type": "ui_button",
        "z": "aa2c5de576744bc5",
        "name": "status inverter",
        "group": "953580f1c70bae15",
        "order": 24,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 380,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "b57d0bafaa8bbb7e",
        "type": "random",
        "z": "aa2c5de576744bc5",
        "name": "flow",
        "low": "5.5",
        "high": "6.0",
        "inte": "false",
        "property": "payload",
        "x": 610,
        "y": 260,
        "wires": [
            [
                "a84748ac075505cd"
            ]
        ]
    },
    {
        "id": "97c04aa3971f4847",
        "type": "random",
        "z": "aa2c5de576744bc5",
        "name": "no flow",
        "low": "0.8",
        "high": "1.4",
        "inte": "false",
        "property": "payload",
        "x": 620,
        "y": 300,
        "wires": [
            [
                "4db11f52b346c268"
            ]
        ]
    },
    {
        "id": "a84748ac075505cd",
        "type": "function",
        "z": "aa2c5de576744bc5",
        "name": "function 133",
        "func": "global.set(\"a_level_1\",roundToTwo(msg.payload));\nreturn msg;\nfunction roundToTwo(num) {\n    return +(Math.round(num + \"e+2\") + \"e-2\");\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "4db11f52b346c268",
        "type": "function",
        "z": "aa2c5de576744bc5",
        "name": "function 134",
        "func": "global.set(\"b_level_1\",roundToTwo(msg.payload));\nreturn msg;\nfunction roundToTwo(num) {\n    return +(Math.round(num + \"e+2\") + \"e-2\");\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "48402f180d219853",
        "type": "inject",
        "z": "aa2c5de576744bc5",
        "name": "",
        "props": [],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 790,
        "y": 340,
        "wires": [
            [
                "b57d0bafaa8bbb7e",
                "97c04aa3971f4847"
            ]
        ]
    },
    {
        "id": "d0d9641260a2e6e9",
        "type": "mqtt in",
        "z": "0dbea037c38ddf9e",
        "name": "",
        "topic": "/G2/",
        "qos": "2",
        "datatype": "auto",
        "broker": "41370e1941ec34b4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 340,
        "wires": [
            [
                "b8af8c8b0b96bfb1",
                "a36a915a3dd77a2d"
            ]
        ]
    },
    {
        "id": "b8af8c8b0b96bfb1",
        "type": "json",
        "z": "0dbea037c38ddf9e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 340,
        "wires": [
            [
                "2fb758d23a20e378",
                "93b5802921ed21dd"
            ]
        ]
    },
    {
        "id": "b74aed77bb595098",
        "type": "ui_led",
        "z": "0dbea037c38ddf9e",
        "order": 22,
        "group": "6729a816d3d532b5",
        "width": 2,
        "height": 1,
        "label": "<font color=\"blue\"><b>Phao:",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "#ff0000",
                "value": "1",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "status phao",
        "x": 730,
        "y": 820,
        "wires": []
    },
    {
        "id": "7b6dfa25f911470b",
        "type": "function",
        "z": "0dbea037c38ddf9e",
        "name": "display ",
        "func": "var payload = msg.payload;\nvar muc_nuoc = global.get(\"level_2\");\nvar luu_luong = global.get(\"flow_2\");\nvar luu_luong_tong = global.get(\"total_2\");\nvar status_flow = global.get(\"status_flow_2\");\nvar status_level = global.get(\"status_level_2\");\nvar tong_ngay = global.get(\"tong_ngay_2\");\nvar pv_hz = global.get(\"pv_hz_2\");\nvar phao = global.get(\"status_phao_2\");\nif (muc_nuoc == null || muc_nuoc == undefined) \n{\n    muc_nuoc = 0;\n}\nif (luu_luong == null || luu_luong == undefined) \n{\n    luu_luong = 0;\n}\nif (luu_luong_tong == null || luu_luong_tong == undefined) \n{\n    luu_luong_tong = 0;\n}\nif (status_flow == null || status_flow == undefined) \n{\n    status_flow = 2;\n}\nif (status_level == null || status_level == undefined) \n{\n    status_level = 2;\n}\nif (tong_ngay == null || tong_ngay == undefined) \n{\n    tong_ngay = 0;\n}\nif (pv_hz == null || pv_hz == undefined) \n{\n    pv_hz = 0;\n}\nif (phao == null || phao == undefined) \n{\n    phao = 0;\n}\nmsg = {};\nmsg.muc_nuoc = muc_nuoc;\nmsg.luu_luong = luu_luong;\nmsg.luu_luong_tong = luu_luong_tong;\nmsg.status_flow = status_flow;\nmsg.status_level = status_level;\nmsg.tong_ngay = tong_ngay;\nmsg.pv_hz = pv_hz;\nmsg.phao = phao;\nreturn msg;\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 660,
        "wires": [
            [
                "a96c568617328a14",
                "e60c5212478e6937",
                "31ddbd9a73a86900",
                "8988e2620d63fac6",
                "efc629b531a80c75",
                "6bf248ff28fea183",
                "2e34a38b1026ef5e",
                "d1e3a39d88f564b8",
                "e910841dea7a6793"
            ]
        ]
    },
    {
        "id": "a96c568617328a14",
        "type": "ui_gauge",
        "z": "0dbea037c38ddf9e",
        "name": "level",
        "group": "6729a816d3d532b5",
        "order": 5,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "<font color=\"blue\"><i class=\"fa fa-line-chart\" aria-hidden=\"true\"> Mực nước (max 1.5m)",
        "label": "",
        "format": "{{msg.muc_nuoc}}",
        "min": "0",
        "max": "1.6",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "1",
        "seg2": "1.5",
        "diff": false,
        "className": "",
        "x": 510,
        "y": 620,
        "wires": []
    },
    {
        "id": "e60c5212478e6937",
        "type": "ui_gauge",
        "z": "0dbea037c38ddf9e",
        "name": "flow",
        "group": "6729a816d3d532b5",
        "order": 9,
        "width": 4,
        "height": 3,
        "gtype": "wave",
        "title": "<font color=\"blue\"><i class=\"fa fa-bar-chart\" aria-hidden=\"true\"> Lưu lượng (m3/h)",
        "label": "",
        "format": "{{msg.luu_luong}}",
        "min": "0",
        "max": "50",
        "colors": [
            "#e6e600",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "10",
        "seg2": "50",
        "diff": false,
        "className": "",
        "x": 510,
        "y": 660,
        "wires": []
    },
    {
        "id": "31ddbd9a73a86900",
        "type": "ui_gauge",
        "z": "0dbea037c38ddf9e",
        "name": "total",
        "group": "6729a816d3d532b5",
        "order": 17,
        "width": 4,
        "height": 3,
        "gtype": "wave",
        "title": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\">Tổng (m3)",
        "label": "",
        "format": "{{msg.luu_luong_tong}}",
        "min": "0",
        "max": "99999999",
        "colors": [
            "#e6e600",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "6",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 510,
        "y": 700,
        "wires": []
    },
    {
        "id": "8988e2620d63fac6",
        "type": "ui_gauge",
        "z": "0dbea037c38ddf9e",
        "name": "total day",
        "group": "6729a816d3d532b5",
        "order": 13,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "<font color=\"blue\"> Tổng 24h (max 421.43m3)",
        "label": "",
        "format": "{{msg.tong_ngay}}",
        "min": "0",
        "max": "423",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "400",
        "seg2": "422",
        "diff": false,
        "className": "",
        "x": 520,
        "y": 740,
        "wires": []
    },
    {
        "id": "efc629b531a80c75",
        "type": "link out",
        "z": "0dbea037c38ddf9e",
        "name": "kt2",
        "mode": "link",
        "links": [
            "cd2ad35a33f67bc7"
        ],
        "x": 475,
        "y": 580,
        "wires": []
    },
    {
        "id": "6bf248ff28fea183",
        "type": "ui_text",
        "z": "0dbea037c38ddf9e",
        "group": "0a3343425c9b53ca",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "level_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-line-chart\" aria-hidden=\"true\"> Mực nước (m): ",
        "format": "{{msg.muc_nuoc}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 620,
        "wires": []
    },
    {
        "id": "2e34a38b1026ef5e",
        "type": "ui_text",
        "z": "0dbea037c38ddf9e",
        "group": "0a3343425c9b53ca",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "flow_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-bar-chart\" aria-hidden=\"true\"> Lưu lượng tức thời (m3/h):",
        "format": "{{msg.luu_luong}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 660,
        "wires": []
    },
    {
        "id": "d1e3a39d88f564b8",
        "type": "ui_text",
        "z": "0dbea037c38ddf9e",
        "group": "0a3343425c9b53ca",
        "order": 11,
        "width": 6,
        "height": 1,
        "name": "total_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\"> Tổng lưu lượng (m3):",
        "format": "{{msg.luu_luong_tong}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 730,
        "y": 700,
        "wires": []
    },
    {
        "id": "e910841dea7a6793",
        "type": "ui_text",
        "z": "0dbea037c38ddf9e",
        "group": "0a3343425c9b53ca",
        "order": 9,
        "width": 6,
        "height": 1,
        "name": "total day_mobile ",
        "label": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\">Tổng 24h (m3):",
        "format": "{{msg.tong_ngay}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 740,
        "y": 740,
        "wires": []
    },
    {
        "id": "3981994ee0ae2556",
        "type": "ui_text",
        "z": "0dbea037c38ddf9e",
        "group": "0a3343425c9b53ca",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "check connect_mobile",
        "label": "<font color=\"blue\">Trạng thái kết nối với Datalogger:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 420,
        "y": 540,
        "wires": []
    },
    {
        "id": "81e37bbcea9dc22f",
        "type": "ui_text",
        "z": "0dbea037c38ddf9e",
        "group": "6729a816d3d532b5",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "check connect",
        "label": "<font color=\"blue\"><b>Kết nối với Datalogger:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 400,
        "y": 500,
        "wires": []
    },
    {
        "id": "d51bc5ba65f52dad",
        "type": "function",
        "z": "0dbea037c38ddf9e",
        "name": "check connect g2",
        "func": "var connect = global.get(\"counter_g2\");\nif (connect  < 2)\n{\n    msg.payload = false;\n}\nelse\n{\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 460,
        "wires": [
            [
                "46c963ade726c9c6",
                "efacf3a802867c7a"
            ]
        ]
    },
    {
        "id": "608ddd4051a3a183",
        "type": "delay",
        "z": "0dbea037c38ddf9e",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 420,
        "wires": [
            [
                "dcbc0e70daf721b0"
            ]
        ]
    },
    {
        "id": "dcbc0e70daf721b0",
        "type": "function",
        "z": "0dbea037c38ddf9e",
        "name": "reset counter",
        "func": "global.set(\"counter_g2\", 0);\n//global.set(\"counter_g2\", 0);\n//global.set(\"counter_g3\", 0);\n//global.set(\"counter_g4\", 0);\n//global.set(\"counter_g5\", 0);\n//global.set(\"counter_g6\", 0);\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "46c963ade726c9c6",
        "type": "ui_led",
        "z": "0dbea037c38ddf9e",
        "order": 2,
        "group": "6729a816d3d532b5",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect",
        "x": 630,
        "y": 460,
        "wires": []
    },
    {
        "id": "efacf3a802867c7a",
        "type": "ui_led",
        "z": "0dbea037c38ddf9e",
        "order": 2,
        "group": "0a3343425c9b53ca",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect_mobile",
        "x": 650,
        "y": 500,
        "wires": []
    },
    {
        "id": "e10bca214195ffac",
        "type": "cronplus",
        "z": "0dbea037c38ddf9e",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */5 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 140,
        "y": 440,
        "wires": [
            [
                "608ddd4051a3a183",
                "d51bc5ba65f52dad"
            ]
        ]
    },
    {
        "id": "61d4bb05a1e780e1",
        "type": "function",
        "z": "0dbea037c38ddf9e",
        "name": "get total day",
        "func": "//var payload = msg.payload;\nvar check_tong0h_g2 = global.get(\"tong_0h_g2_sql\");\nvar tong_now_g2 = global.get(\"total_2\");\nvar tong_ngay_0h_g2 = (tong_now_g2 - check_tong0h_g2);\nglobal.set(\"tong_ngay_2\", tong_ngay_0h_g2);\n\n\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "a5339ede2aa43b91",
        "type": "function",
        "z": "0dbea037c38ddf9e",
        "name": "check ss level",
        "func": "var status_level = global.get(\"status_level_2\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 880,
        "wires": [
            [
                "7ad09e2cc6d0ae8b",
                "4e1046e9ba3ad6ee"
            ]
        ]
    },
    {
        "id": "7ad09e2cc6d0ae8b",
        "type": "ui_led",
        "z": "0dbea037c38ddf9e",
        "order": 7,
        "group": "6729a816d3d532b5",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss level",
        "x": 720,
        "y": 880,
        "wires": []
    },
    {
        "id": "4f5e9f892013944a",
        "type": "function",
        "z": "0dbea037c38ddf9e",
        "name": "check ss flow",
        "func": "var status_level = global.get(\"status_flow_2\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 920,
        "wires": [
            [
                "69cfec11792293a3",
                "60ac40fe6e9c7ec4"
            ]
        ]
    },
    {
        "id": "69cfec11792293a3",
        "type": "ui_led",
        "z": "0dbea037c38ddf9e",
        "order": 11,
        "group": "6729a816d3d532b5",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss flow",
        "x": 710,
        "y": 920,
        "wires": []
    },
    {
        "id": "4e1046e9ba3ad6ee",
        "type": "ui_led",
        "z": "0dbea037c38ddf9e",
        "order": 6,
        "group": "0a3343425c9b53ca",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss level_mobile",
        "x": 920,
        "y": 880,
        "wires": []
    },
    {
        "id": "60ac40fe6e9c7ec4",
        "type": "ui_led",
        "z": "0dbea037c38ddf9e",
        "order": 8,
        "group": "0a3343425c9b53ca",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss flow_mobile",
        "x": 920,
        "y": 920,
        "wires": []
    },
    {
        "id": "33b8fa9502f4f4c0",
        "type": "function",
        "z": "0dbea037c38ddf9e",
        "name": "check ss phao",
        "func": "var status = global.get(\"status_phao_2\");\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 820,
        "wires": [
            [
                "b74aed77bb595098"
            ]
        ]
    },
    {
        "id": "783375a7ba8e7b90",
        "type": "ui_led",
        "z": "0dbea037c38ddf9e",
        "order": 4,
        "group": "0a3343425c9b53ca",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "#008000",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "#ff0000",
                "value": "2",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "status inverter_mobile",
        "x": 560,
        "y": 120,
        "wires": []
    },
    {
        "id": "2fb758d23a20e378",
        "type": "function",
        "z": "0dbea037c38ddf9e",
        "name": "function 71",
        "func": "var payload = msg.payload;\nglobal.set(\"level_2\", payload.Level);\nglobal.set(\"flow_2\", payload.Flow);\nif (payload.Total != 0)\n{\n    global.set(\"total_2\", payload.Total);\n} \nglobal.set(\"status_flow_2\", payload.Status_Flow);\nglobal.set(\"status_level_2\", payload.Status_Level);\nglobal.set(\"pv_hz_2\", payload.PV_Hz);\nglobal.set(\"status_inverter_2\", payload.Status_Inverter);\nglobal.set(\"status_phao_2\", payload.Status_Phao);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "93b5802921ed21dd",
        "type": "debug",
        "z": "0dbea037c38ddf9e",
        "name": "debug 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 380,
        "wires": []
    },
    {
        "id": "27a862a9543f567b",
        "type": "ui_button",
        "z": "0dbea037c38ddf9e",
        "name": "on inverter",
        "group": "6729a816d3d532b5",
        "order": 23,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>BẬT BƠM",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 210,
        "y": 200,
        "wires": [
            [
                "a122e254fc14d517"
            ]
        ]
    },
    {
        "id": "6d235b4d4e8f5674",
        "type": "mqtt out",
        "z": "0dbea037c38ddf9e",
        "name": "",
        "topic": "/O2/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 770,
        "y": 200,
        "wires": []
    },
    {
        "id": "e2628fa386e93766",
        "type": "inject",
        "z": "0dbea037c38ddf9e",
        "name": "",
        "props": [],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 820,
        "wires": [
            [
                "7b6dfa25f911470b",
                "33b8fa9502f4f4c0",
                "a5339ede2aa43b91",
                "4f5e9f892013944a",
                "61d4bb05a1e780e1"
            ]
        ]
    },
    {
        "id": "cbf7a789d52a0611",
        "type": "inject",
        "z": "0dbea037c38ddf9e",
        "name": "",
        "props": [],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "4d2b57dea1a77dce",
                "ddf026019d6ada2e"
            ]
        ]
    },
    {
        "id": "a122e254fc14d517",
        "type": "function",
        "z": "0dbea037c38ddf9e",
        "name": "function 88",
        "func": "global.set(\"on_inv_2\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 200,
        "wires": [
            [
                "214bb6edc3c64876"
            ]
        ]
    },
    {
        "id": "9cadcf10a3bb2411",
        "type": "debug",
        "z": "0dbea037c38ddf9e",
        "name": "debug 38",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 160,
        "wires": []
    },
    {
        "id": "214bb6edc3c64876",
        "type": "function",
        "z": "0dbea037c38ddf9e",
        "name": "function 89",
        "func": "msg.payload = {\"On_INV\": global.get(\"on_inv_2\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 200,
        "wires": [
            [
                "6d235b4d4e8f5674",
                "9cadcf10a3bb2411"
            ]
        ]
    },
    {
        "id": "4d2b57dea1a77dce",
        "type": "function",
        "z": "0dbea037c38ddf9e",
        "name": "function 110",
        "func": "//var status = msg.payload;\nvar status = global.get(\"status_inverter_2\");\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 120,
        "wires": [
            [
                "783375a7ba8e7b90"
            ]
        ]
    },
    {
        "id": "cd5b21d31e99655d",
        "type": "ui_button",
        "z": "0dbea037c38ddf9e",
        "name": "off inverter",
        "group": "6729a816d3d532b5",
        "order": 25,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>TẮT BƠM",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 210,
        "y": 260,
        "wires": [
            [
                "881b1043408653e0"
            ]
        ]
    },
    {
        "id": "8738e7ed8a0fc275",
        "type": "mqtt out",
        "z": "0dbea037c38ddf9e",
        "name": "",
        "topic": "/O2/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 770,
        "y": 260,
        "wires": []
    },
    {
        "id": "881b1043408653e0",
        "type": "function",
        "z": "0dbea037c38ddf9e",
        "name": "function 115",
        "func": "global.set(\"on_inv_2\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 260,
        "wires": [
            [
                "ee716883d9ad2b0c"
            ]
        ]
    },
    {
        "id": "a97807fac9238ca9",
        "type": "debug",
        "z": "0dbea037c38ddf9e",
        "name": "debug 44",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 320,
        "wires": []
    },
    {
        "id": "ee716883d9ad2b0c",
        "type": "function",
        "z": "0dbea037c38ddf9e",
        "name": "function 116",
        "func": "msg.payload = {\"On_INV\": global.get(\"on_inv_2\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 260,
        "wires": [
            [
                "8738e7ed8a0fc275",
                "a97807fac9238ca9"
            ]
        ]
    },
    {
        "id": "a36a915a3dd77a2d",
        "type": "function",
        "z": "0dbea037c38ddf9e",
        "name": "counter connect g2",
        "func": "var counter_g2 = global.get(\"counter_g2\");\ncounter_g2 ++;  \nglobal.set(\"counter_g2\", counter_g2);\nmsg.payload = counter_g2;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "ddf026019d6ada2e",
        "type": "function",
        "z": "0dbea037c38ddf9e",
        "name": "function 127",
        "func": "//var status = msg.payload;\nvar status = global.get(\"status_inverter_2\");\nif (status == 1)\n{\n    msg.color = \"black\";\n}\nif (status == 0) \n{\n    msg.color = \"lime\";\n}\nif (status == 2) \n{\n    msg.color = \"red\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 40,
        "wires": [
            [
                "4b430087f99c569f"
            ]
        ]
    },
    {
        "id": "4b430087f99c569f",
        "type": "ui_button",
        "z": "0dbea037c38ddf9e",
        "name": "status inverter",
        "group": "6729a816d3d532b5",
        "order": 24,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 540,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "9aa928d2d8ad9728",
        "type": "mqtt in",
        "z": "1f40e0817509f9dc",
        "name": "",
        "topic": "/G3/",
        "qos": "2",
        "datatype": "auto",
        "broker": "41370e1941ec34b4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 320,
        "wires": [
            [
                "95ed9648a09e45f8",
                "8c7f19721a1f95f6"
            ]
        ]
    },
    {
        "id": "95ed9648a09e45f8",
        "type": "json",
        "z": "1f40e0817509f9dc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 320,
        "wires": [
            [
                "b13dd550f7555f6a",
                "b9cc346223162d4b"
            ]
        ]
    },
    {
        "id": "bb465e4a5c988d29",
        "type": "ui_led",
        "z": "1f40e0817509f9dc",
        "order": 22,
        "group": "f3b4b427b3ddcb91",
        "width": 2,
        "height": 1,
        "label": "<font color=\"blue\"><b>Phao:",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "#ff0000",
                "value": "1",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "status phao",
        "x": 750,
        "y": 800,
        "wires": []
    },
    {
        "id": "a4507c1617f1d1b6",
        "type": "function",
        "z": "1f40e0817509f9dc",
        "name": "check ss phao",
        "func": "var status = global.get(\"status_phao_3\");\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 800,
        "wires": [
            [
                "bb465e4a5c988d29"
            ]
        ]
    },
    {
        "id": "ba9f3f79d4086de5",
        "type": "function",
        "z": "1f40e0817509f9dc",
        "name": "display ",
        "func": "var payload = msg.payload;\nvar muc_nuoc = global.get(\"level_3\");\nvar luu_luong = global.get(\"flow_3\");\nvar luu_luong_tong = global.get(\"total_3\");\nvar status_flow = global.get(\"status_flow_3\");\nvar status_level = global.get(\"status_level_3\");\nvar tong_ngay = global.get(\"tong_ngay_3\");\nvar pv_hz = global.get(\"pv_hz_3\");\nvar phao = global.get(\"status_phao_3\");\nif (muc_nuoc == null || muc_nuoc == undefined) \n{\n    muc_nuoc = 0;\n}\nif (luu_luong == null || luu_luong == undefined) \n{\n    luu_luong = 0;\n}\nif (luu_luong_tong == null || luu_luong_tong == undefined) \n{\n    luu_luong_tong = 0;\n}\nif (status_flow == null || status_flow == undefined) \n{\n    status_flow = 2;\n}\nif (status_level == null || status_level == undefined) \n{\n    status_level = 2;\n}\nif (tong_ngay == null || tong_ngay == undefined) \n{\n    tong_ngay = 0;\n}\nif (pv_hz == null || pv_hz == undefined) \n{\n    pv_hz = 0;\n}\nif (phao == null || phao == undefined) \n{\n    phao = 0;\n}\nmsg = {};\nmsg.muc_nuoc = muc_nuoc;\nmsg.luu_luong = luu_luong;\nmsg.luu_luong_tong = luu_luong_tong;\nmsg.status_flow = status_flow;\nmsg.status_level = status_level;\nmsg.tong_ngay = tong_ngay;\nmsg.pv_hz = pv_hz;\nmsg.phao = phao;\nreturn msg;\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 640,
        "wires": [
            [
                "a03cc7a433a3d5a9",
                "4d4a5b61cfb5ae61",
                "6a3f09f3275f68f4",
                "88916d77f17dc521",
                "38c2694caf4ab0b4",
                "c81d25b725b562f2",
                "ca94aefb91db49f2",
                "f1a32d8fece9c00b",
                "8a336ab12c4f0a02"
            ]
        ]
    },
    {
        "id": "a03cc7a433a3d5a9",
        "type": "ui_gauge",
        "z": "1f40e0817509f9dc",
        "name": "level",
        "group": "f3b4b427b3ddcb91",
        "order": 5,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "<font color=\"blue\"><i class=\"fa fa-line-chart\" aria-hidden=\"true\"> Mực nước (max 17m)",
        "label": "",
        "format": "{{msg.muc_nuoc}}",
        "min": "0",
        "max": "17.1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "12",
        "seg2": "17",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 600,
        "wires": []
    },
    {
        "id": "4d4a5b61cfb5ae61",
        "type": "ui_gauge",
        "z": "1f40e0817509f9dc",
        "name": "flow",
        "group": "f3b4b427b3ddcb91",
        "order": 9,
        "width": 4,
        "height": 3,
        "gtype": "wave",
        "title": "<font color=\"blue\"><i class=\"fa fa-bar-chart\" aria-hidden=\"true\"> Lưu lượng (m3/h)",
        "label": "",
        "format": "{{msg.luu_luong}}",
        "min": "0",
        "max": "50",
        "colors": [
            "#e6e600",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "10",
        "seg2": "50",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 640,
        "wires": []
    },
    {
        "id": "6a3f09f3275f68f4",
        "type": "ui_gauge",
        "z": "1f40e0817509f9dc",
        "name": "total",
        "group": "f3b4b427b3ddcb91",
        "order": 17,
        "width": 4,
        "height": 3,
        "gtype": "wave",
        "title": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\">Tổng (m3)",
        "label": "",
        "format": "{{msg.luu_luong_tong}}",
        "min": "0",
        "max": "99999999",
        "colors": [
            "#e6e600",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "6",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 680,
        "wires": []
    },
    {
        "id": "88916d77f17dc521",
        "type": "ui_gauge",
        "z": "1f40e0817509f9dc",
        "name": "total day",
        "group": "f3b4b427b3ddcb91",
        "order": 13,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "<font color=\"blue\"> Tổng 24h (max 421.43m3)",
        "label": "",
        "format": "{{msg.tong_ngay}}",
        "min": "0",
        "max": "423",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "400",
        "seg2": "422",
        "diff": false,
        "className": "",
        "x": 540,
        "y": 720,
        "wires": []
    },
    {
        "id": "38c2694caf4ab0b4",
        "type": "link out",
        "z": "1f40e0817509f9dc",
        "name": "kt3",
        "mode": "link",
        "links": [
            "cf0f9b1cefb40066"
        ],
        "x": 495,
        "y": 560,
        "wires": []
    },
    {
        "id": "c81d25b725b562f2",
        "type": "ui_text",
        "z": "1f40e0817509f9dc",
        "group": "8de54ffe0f0fc049",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "level_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-line-chart\" aria-hidden=\"true\"> Mực nước (m): ",
        "format": "{{msg.muc_nuoc}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 750,
        "y": 600,
        "wires": []
    },
    {
        "id": "ca94aefb91db49f2",
        "type": "ui_text",
        "z": "1f40e0817509f9dc",
        "group": "8de54ffe0f0fc049",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "flow_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-bar-chart\" aria-hidden=\"true\"> Lưu lượng tức thời (m3/h):",
        "format": "{{msg.luu_luong}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 750,
        "y": 640,
        "wires": []
    },
    {
        "id": "f1a32d8fece9c00b",
        "type": "ui_text",
        "z": "1f40e0817509f9dc",
        "group": "8de54ffe0f0fc049",
        "order": 11,
        "width": 6,
        "height": 1,
        "name": "total_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\"> Tổng lưu lượng (m3):",
        "format": "{{msg.luu_luong_tong}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 750,
        "y": 680,
        "wires": []
    },
    {
        "id": "8a336ab12c4f0a02",
        "type": "ui_text",
        "z": "1f40e0817509f9dc",
        "group": "8de54ffe0f0fc049",
        "order": 9,
        "width": 6,
        "height": 1,
        "name": "total day_mobile ",
        "label": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\">Tổng 24h (m3):",
        "format": "{{msg.tong_ngay}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 760,
        "y": 720,
        "wires": []
    },
    {
        "id": "0b9199d83b9ccfb4",
        "type": "ui_text",
        "z": "1f40e0817509f9dc",
        "group": "8de54ffe0f0fc049",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "check connect_mobile",
        "label": "<font color=\"blue\">Trạng thái kết nối với Datalogger:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 440,
        "y": 520,
        "wires": []
    },
    {
        "id": "6d50a7c89dad7e47",
        "type": "ui_text",
        "z": "1f40e0817509f9dc",
        "group": "f3b4b427b3ddcb91",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "check connect",
        "label": "<font color=\"blue\"><b>Kết nối với Datalogger:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 420,
        "y": 480,
        "wires": []
    },
    {
        "id": "c4bc683e90aee8ce",
        "type": "function",
        "z": "1f40e0817509f9dc",
        "name": "check connect",
        "func": "var connect = global.get(\"counter_g3\");\nif (connect  < 2)\n{\n    msg.payload = false;\n}\nelse\n{\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 440,
        "wires": [
            [
                "3c7440056d91e123",
                "55a8c094e8454aa3"
            ]
        ]
    },
    {
        "id": "b86a50aea4370d99",
        "type": "delay",
        "z": "1f40e0817509f9dc",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 400,
        "y": 400,
        "wires": [
            [
                "e8a1438bb3c65fba"
            ]
        ]
    },
    {
        "id": "e8a1438bb3c65fba",
        "type": "function",
        "z": "1f40e0817509f9dc",
        "name": "reset counter",
        "func": "global.set(\"counter_g3\", 0);\n//global.set(\"counter_g2\", 0);\n//global.set(\"counter_g3\", 0);\n//global.set(\"counter_g4\", 0);\n//global.set(\"counter_g5\", 0);\n//global.set(\"counter_g6\", 0);\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "3c7440056d91e123",
        "type": "ui_led",
        "z": "1f40e0817509f9dc",
        "order": 2,
        "group": "f3b4b427b3ddcb91",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect",
        "x": 650,
        "y": 440,
        "wires": []
    },
    {
        "id": "55a8c094e8454aa3",
        "type": "ui_led",
        "z": "1f40e0817509f9dc",
        "order": 2,
        "group": "8de54ffe0f0fc049",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect_mobile",
        "x": 670,
        "y": 480,
        "wires": []
    },
    {
        "id": "fb587107bc340635",
        "type": "cronplus",
        "z": "1f40e0817509f9dc",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */5 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 240,
        "y": 420,
        "wires": [
            [
                "b86a50aea4370d99",
                "c4bc683e90aee8ce"
            ]
        ]
    },
    {
        "id": "ddf3a4858d017fde",
        "type": "function",
        "z": "1f40e0817509f9dc",
        "name": "get total day",
        "func": "//var payload = msg.payload;\nvar check_tong0h_g3 = global.get(\"tong_0h_g3_sql\");\nvar tong_now_g3 = global.get(\"total_3\");\nvar tong_ngay_0h_g3 = (tong_now_g3 - check_tong0h_g3);\nglobal.set(\"tong_ngay_3\", tong_ngay_0h_g3);\n\n\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "da2c603ecdf7d8d2",
        "type": "function",
        "z": "1f40e0817509f9dc",
        "name": "check ss level",
        "func": "var status_level = global.get(\"status_level_3\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 840,
        "wires": [
            [
                "8f3e8971ad1a01df",
                "9612d16f94ce7655"
            ]
        ]
    },
    {
        "id": "8f3e8971ad1a01df",
        "type": "ui_led",
        "z": "1f40e0817509f9dc",
        "order": 7,
        "group": "f3b4b427b3ddcb91",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss level",
        "x": 740,
        "y": 840,
        "wires": []
    },
    {
        "id": "c49baf7de4f279b9",
        "type": "function",
        "z": "1f40e0817509f9dc",
        "name": "check ss flow",
        "func": "var status_level = global.get(\"status_flow_3\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 880,
        "wires": [
            [
                "235cc048b90fa6ae",
                "612466e6ca070cca"
            ]
        ]
    },
    {
        "id": "235cc048b90fa6ae",
        "type": "ui_led",
        "z": "1f40e0817509f9dc",
        "order": 11,
        "group": "f3b4b427b3ddcb91",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss flow",
        "x": 730,
        "y": 880,
        "wires": []
    },
    {
        "id": "9612d16f94ce7655",
        "type": "ui_led",
        "z": "1f40e0817509f9dc",
        "order": 6,
        "group": "8de54ffe0f0fc049",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss level_mobile",
        "x": 940,
        "y": 840,
        "wires": []
    },
    {
        "id": "612466e6ca070cca",
        "type": "ui_led",
        "z": "1f40e0817509f9dc",
        "order": 8,
        "group": "8de54ffe0f0fc049",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss flow_mobile",
        "x": 940,
        "y": 880,
        "wires": []
    },
    {
        "id": "2df074b8f8fbb850",
        "type": "ui_led",
        "z": "1f40e0817509f9dc",
        "order": 4,
        "group": "8de54ffe0f0fc049",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "#008000",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "#ff0000",
                "value": "2",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "status inverter_mobile",
        "x": 580,
        "y": 100,
        "wires": []
    },
    {
        "id": "b13dd550f7555f6a",
        "type": "function",
        "z": "1f40e0817509f9dc",
        "name": "function 72",
        "func": "var payload = msg.payload;\nglobal.set(\"level_3\", payload.Level);\nglobal.set(\"flow_3\", payload.Flow);\nif (payload.Total != 0)\n{\n    global.set(\"total_3\", payload.Total);\n} \nglobal.set(\"status_flow_3\", payload.Status_Flow);\nglobal.set(\"status_level_3\", payload.Status_Level);\nglobal.set(\"pv_hz_3\", payload.PV_Hz);\nglobal.set(\"status_inverter_3\", payload.Status_Inverter);\nglobal.set(\"status_phao_3\", payload.Status_Phao);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "b9cc346223162d4b",
        "type": "debug",
        "z": "1f40e0817509f9dc",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 360,
        "wires": []
    },
    {
        "id": "3ed3f8ee49e95116",
        "type": "ui_button",
        "z": "1f40e0817509f9dc",
        "name": "on inverter",
        "group": "f3b4b427b3ddcb91",
        "order": 23,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>BẬT BƠM",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 160,
        "wires": [
            [
                "999499bbb8a38888"
            ]
        ]
    },
    {
        "id": "e63f320ac605a5c8",
        "type": "mqtt out",
        "z": "1f40e0817509f9dc",
        "name": "",
        "topic": "/O3/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 790,
        "y": 160,
        "wires": []
    },
    {
        "id": "9b8db2c49c7aaa36",
        "type": "inject",
        "z": "1f40e0817509f9dc",
        "name": "",
        "props": [],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 800,
        "wires": [
            [
                "ba9f3f79d4086de5",
                "a4507c1617f1d1b6",
                "da2c603ecdf7d8d2",
                "c49baf7de4f279b9",
                "ddf3a4858d017fde"
            ]
        ]
    },
    {
        "id": "0d85f0730f100355",
        "type": "inject",
        "z": "1f40e0817509f9dc",
        "name": "",
        "props": [],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 100,
        "wires": [
            [
                "326bb5ab089fd1a5",
                "12373919a542ebe2"
            ]
        ]
    },
    {
        "id": "999499bbb8a38888",
        "type": "function",
        "z": "1f40e0817509f9dc",
        "name": "function 91",
        "func": "global.set(\"on_inv_3\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 160,
        "wires": [
            [
                "5cd92fdf8254570f"
            ]
        ]
    },
    {
        "id": "5cd92fdf8254570f",
        "type": "function",
        "z": "1f40e0817509f9dc",
        "name": "function 92",
        "func": "msg.payload = {\"On_INV\": global.get(\"on_inv_3\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 160,
        "wires": [
            [
                "e63f320ac605a5c8",
                "30c5a8715cbe158c"
            ]
        ]
    },
    {
        "id": "326bb5ab089fd1a5",
        "type": "function",
        "z": "1f40e0817509f9dc",
        "name": "function 109",
        "func": "//var status = msg.payload;\nvar status = global.get(\"status_inverter_3\");\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 100,
        "wires": [
            [
                "2df074b8f8fbb850"
            ]
        ]
    },
    {
        "id": "30c5a8715cbe158c",
        "type": "debug",
        "z": "1f40e0817509f9dc",
        "name": "debug 45",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 120,
        "wires": []
    },
    {
        "id": "0a45ee060a8bc0ac",
        "type": "ui_button",
        "z": "1f40e0817509f9dc",
        "name": "off inverter",
        "group": "f3b4b427b3ddcb91",
        "order": 25,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>TẮT BƠM",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 220,
        "wires": [
            [
                "7b7d4b478db9a126"
            ]
        ]
    },
    {
        "id": "40415d0ee66c2469",
        "type": "mqtt out",
        "z": "1f40e0817509f9dc",
        "name": "",
        "topic": "/O3/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 790,
        "y": 220,
        "wires": []
    },
    {
        "id": "7b7d4b478db9a126",
        "type": "function",
        "z": "1f40e0817509f9dc",
        "name": "function 117",
        "func": "global.set(\"on_inv_3\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 220,
        "wires": [
            [
                "fa61e3c30a3e0646"
            ]
        ]
    },
    {
        "id": "fa61e3c30a3e0646",
        "type": "function",
        "z": "1f40e0817509f9dc",
        "name": "function 118",
        "func": "msg.payload = {\"On_INV\": global.get(\"on_inv_3\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 220,
        "wires": [
            [
                "40415d0ee66c2469",
                "8f42585add2d21fa"
            ]
        ]
    },
    {
        "id": "8f42585add2d21fa",
        "type": "debug",
        "z": "1f40e0817509f9dc",
        "name": "debug 46",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 260,
        "wires": []
    },
    {
        "id": "8c7f19721a1f95f6",
        "type": "function",
        "z": "1f40e0817509f9dc",
        "name": "counter connect g3",
        "func": "var counter_g3 = global.get(\"counter_g3\");\ncounter_g3 ++;  \nglobal.set(\"counter_g3\", counter_g3);\nmsg.payload = counter_g3;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "12373919a542ebe2",
        "type": "function",
        "z": "1f40e0817509f9dc",
        "name": "function 128",
        "func": "//var status = msg.payload;\nvar status = global.get(\"status_inverter_3\");\nif (status == 1)\n{\n    msg.color = \"black\";\n}\nif (status == 0) \n{\n    msg.color = \"lime\";\n}\nif (status == 2) \n{\n    msg.color = \"red\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 60,
        "wires": [
            [
                "70fe073bac97965e"
            ]
        ]
    },
    {
        "id": "70fe073bac97965e",
        "type": "ui_button",
        "z": "1f40e0817509f9dc",
        "name": "status inverter",
        "group": "f3b4b427b3ddcb91",
        "order": 24,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 560,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "c66dce7ce1657048",
        "type": "mqtt in",
        "z": "60b4b547618dda01",
        "name": "",
        "topic": "/G4/",
        "qos": "2",
        "datatype": "auto",
        "broker": "41370e1941ec34b4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 320,
        "wires": [
            [
                "d88c8e4a5d1bb0e2",
                "fbcc022f8390ee8b"
            ]
        ]
    },
    {
        "id": "d88c8e4a5d1bb0e2",
        "type": "json",
        "z": "60b4b547618dda01",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 320,
        "wires": [
            [
                "44092e6795986735",
                "ac5663c8b93b336e"
            ]
        ]
    },
    {
        "id": "8d3780507a62101a",
        "type": "ui_led",
        "z": "60b4b547618dda01",
        "order": 22,
        "group": "c8e5e73c6b6c38d6",
        "width": 2,
        "height": 1,
        "label": "<font color=\"blue\"><b>Phao:",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "#ff0000",
                "value": "1",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "status phao",
        "x": 810,
        "y": 800,
        "wires": []
    },
    {
        "id": "e9ef7380e54f14a3",
        "type": "function",
        "z": "60b4b547618dda01",
        "name": "check ss phao",
        "func": "var status = global.get(\"status_phao_4\");\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 800,
        "wires": [
            [
                "8d3780507a62101a"
            ]
        ]
    },
    {
        "id": "573f70dfe44979b5",
        "type": "function",
        "z": "60b4b547618dda01",
        "name": "display ",
        "func": "var payload = msg.payload;\nvar muc_nuoc = global.get(\"level_4\");\nvar luu_luong = global.get(\"flow_4\");\nvar luu_luong_tong = global.get(\"total_4\");\nvar status_flow = global.get(\"status_flow_4\");\nvar status_level = global.get(\"status_level_4\");\nvar tong_ngay = global.get(\"tong_ngay_4\");\nvar pv_hz = global.get(\"pv_hz_4\");\nvar phao = global.get(\"status_phao_4\");\nif (muc_nuoc == null || muc_nuoc == undefined) \n{\n    muc_nuoc = 0;\n}\nif (luu_luong == null || luu_luong == undefined) \n{\n    luu_luong = 0;\n}\nif (luu_luong_tong == null || luu_luong_tong == undefined) \n{\n    luu_luong_tong = 0;\n}\nif (status_flow == null || status_flow == undefined) \n{\n    status_flow = 2;\n}\nif (status_level == null || status_level == undefined) \n{\n    status_level = 2;\n}\nif (tong_ngay == null || tong_ngay == undefined) \n{\n    tong_ngay = 0;\n}\nif (pv_hz == null || pv_hz == undefined) \n{\n    pv_hz = 0;\n}\nif (phao == null || phao == undefined) \n{\n    phao = 0;\n}\nmsg = {};\nmsg.muc_nuoc = muc_nuoc;\nmsg.luu_luong = luu_luong;\nmsg.luu_luong_tong = luu_luong_tong;\nmsg.status_flow = status_flow;\nmsg.status_level = status_level;\nmsg.tong_ngay = tong_ngay;\nmsg.pv_hz = pv_hz;\nmsg.phao = phao;\nreturn msg;\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 640,
        "wires": [
            [
                "f013a18e2124099f",
                "dc4c834ee16a240e",
                "55e4832c6dd02b63",
                "e216907e49a1e763",
                "110e2d81b2d2ceab",
                "c7a3cb25c107faf0",
                "43ed472433797502",
                "a438cef193c030f4",
                "e41056cd453d09c9"
            ]
        ]
    },
    {
        "id": "f013a18e2124099f",
        "type": "ui_gauge",
        "z": "60b4b547618dda01",
        "name": "level",
        "group": "c8e5e73c6b6c38d6",
        "order": 5,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "<font color=\"blue\"><i class=\"fa fa-line-chart\" aria-hidden=\"true\"> Mực nước (max 7m)",
        "label": "",
        "format": "{{msg.muc_nuoc}}",
        "min": "0",
        "max": "7.1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "5",
        "seg2": "7",
        "diff": false,
        "className": "",
        "x": 590,
        "y": 600,
        "wires": []
    },
    {
        "id": "dc4c834ee16a240e",
        "type": "ui_gauge",
        "z": "60b4b547618dda01",
        "name": "flow",
        "group": "c8e5e73c6b6c38d6",
        "order": 9,
        "width": 4,
        "height": 3,
        "gtype": "wave",
        "title": "<font color=\"blue\"><i class=\"fa fa-bar-chart\" aria-hidden=\"true\"> Lưu lượng (m3/h)",
        "label": "",
        "format": "{{msg.luu_luong}}",
        "min": "0",
        "max": "50",
        "colors": [
            "#e6e600",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "10",
        "seg2": "50",
        "diff": false,
        "className": "",
        "x": 590,
        "y": 640,
        "wires": []
    },
    {
        "id": "55e4832c6dd02b63",
        "type": "ui_gauge",
        "z": "60b4b547618dda01",
        "name": "total",
        "group": "c8e5e73c6b6c38d6",
        "order": 17,
        "width": 4,
        "height": 3,
        "gtype": "wave",
        "title": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\">Tổng (m3)",
        "label": "",
        "format": "{{msg.luu_luong_tong}}",
        "min": "0",
        "max": "99999999",
        "colors": [
            "#e6e600",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "6",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 590,
        "y": 680,
        "wires": []
    },
    {
        "id": "e216907e49a1e763",
        "type": "ui_gauge",
        "z": "60b4b547618dda01",
        "name": "total day",
        "group": "c8e5e73c6b6c38d6",
        "order": 13,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "<font color=\"blue\"> Tổng 24h (max 421.43m3)",
        "label": "",
        "format": "{{msg.tong_ngay}}",
        "min": "0",
        "max": "423",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "400",
        "seg2": "422",
        "diff": false,
        "className": "",
        "x": 600,
        "y": 720,
        "wires": []
    },
    {
        "id": "110e2d81b2d2ceab",
        "type": "link out",
        "z": "60b4b547618dda01",
        "name": "kt5",
        "mode": "link",
        "links": [
            "426ace57ba95c4ac"
        ],
        "x": 555,
        "y": 560,
        "wires": []
    },
    {
        "id": "c7a3cb25c107faf0",
        "type": "ui_text",
        "z": "60b4b547618dda01",
        "group": "6497d0df00ba9f79",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "level_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-line-chart\" aria-hidden=\"true\"> Mực nước (m): ",
        "format": "{{msg.muc_nuoc}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 810,
        "y": 600,
        "wires": []
    },
    {
        "id": "43ed472433797502",
        "type": "ui_text",
        "z": "60b4b547618dda01",
        "group": "6497d0df00ba9f79",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "flow_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-bar-chart\" aria-hidden=\"true\"> Lưu lượng tức thời (m3/h):",
        "format": "{{msg.luu_luong}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 810,
        "y": 640,
        "wires": []
    },
    {
        "id": "a438cef193c030f4",
        "type": "ui_text",
        "z": "60b4b547618dda01",
        "group": "6497d0df00ba9f79",
        "order": 11,
        "width": 6,
        "height": 1,
        "name": "total_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\"> Tổng lưu lượng (m3):",
        "format": "{{msg.luu_luong_tong}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 810,
        "y": 680,
        "wires": []
    },
    {
        "id": "e41056cd453d09c9",
        "type": "ui_text",
        "z": "60b4b547618dda01",
        "group": "6497d0df00ba9f79",
        "order": 9,
        "width": 6,
        "height": 1,
        "name": "total day_mobile ",
        "label": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\">Tổng 24h (m3):",
        "format": "{{msg.tong_ngay}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 820,
        "y": 720,
        "wires": []
    },
    {
        "id": "71ba0ab4b77128ef",
        "type": "ui_text",
        "z": "60b4b547618dda01",
        "group": "6497d0df00ba9f79",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "check connect_mobile",
        "label": "<font color=\"blue\">Trạng thái kết nối với Datalogger:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 500,
        "y": 520,
        "wires": []
    },
    {
        "id": "6fedeb308b8069a9",
        "type": "ui_text",
        "z": "60b4b547618dda01",
        "group": "c8e5e73c6b6c38d6",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "check connect",
        "label": "<font color=\"blue\"><b>Kết nối với Datalogger:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 480,
        "y": 480,
        "wires": []
    },
    {
        "id": "da908b179bcbf362",
        "type": "function",
        "z": "60b4b547618dda01",
        "name": "check connect",
        "func": "var connect = global.get(\"counter_g4\");\nif (connect  < 2)\n{\n    msg.payload = false;\n}\nelse\n{\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 440,
        "wires": [
            [
                "3905c05908b9bf7c",
                "997f40ade65011ea"
            ]
        ]
    },
    {
        "id": "a552dd8a7681872d",
        "type": "delay",
        "z": "60b4b547618dda01",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 400,
        "wires": [
            [
                "59df14d02e6a1655"
            ]
        ]
    },
    {
        "id": "59df14d02e6a1655",
        "type": "function",
        "z": "60b4b547618dda01",
        "name": "reset counter",
        "func": "global.set(\"counter_g4\", 0);\n//global.set(\"counter_g2\", 0);\n//global.set(\"counter_g3\", 0);\n//global.set(\"counter_g4\", 0);\n//global.set(\"counter_g5\", 0);\n//global.set(\"counter_g6\", 0);\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "3905c05908b9bf7c",
        "type": "ui_led",
        "z": "60b4b547618dda01",
        "order": 2,
        "group": "c8e5e73c6b6c38d6",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect",
        "x": 710,
        "y": 440,
        "wires": []
    },
    {
        "id": "997f40ade65011ea",
        "type": "ui_led",
        "z": "60b4b547618dda01",
        "order": 2,
        "group": "6497d0df00ba9f79",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect_mobile",
        "x": 730,
        "y": 480,
        "wires": []
    },
    {
        "id": "aee45495e54e2030",
        "type": "cronplus",
        "z": "60b4b547618dda01",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */5 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 300,
        "y": 420,
        "wires": [
            [
                "a552dd8a7681872d",
                "da908b179bcbf362"
            ]
        ]
    },
    {
        "id": "c8c8cf6b6aa6a5ea",
        "type": "function",
        "z": "60b4b547618dda01",
        "name": "get total day",
        "func": "//var payload = msg.payload;\nvar check_tong0h_g4 = global.get(\"tong_0h_g4_sql\");\nvar tong_now_g4 = global.get(\"total_4\");\nvar tong_ngay_0h_g4 = (tong_now_g4- check_tong0h_g4);\nglobal.set(\"tong_ngay_4\", tong_ngay_0h_g4);\n\n\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "a16b41a96b89b801",
        "type": "function",
        "z": "60b4b547618dda01",
        "name": "check ss level",
        "func": "var status_level = global.get(\"status_level_4\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 840,
        "wires": [
            [
                "99f19de25ac82a75",
                "5fd796fdf8b34a14"
            ]
        ]
    },
    {
        "id": "99f19de25ac82a75",
        "type": "ui_led",
        "z": "60b4b547618dda01",
        "order": 7,
        "group": "c8e5e73c6b6c38d6",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss level",
        "x": 800,
        "y": 840,
        "wires": []
    },
    {
        "id": "f4e8b506c37490ec",
        "type": "function",
        "z": "60b4b547618dda01",
        "name": "check ss flow",
        "func": "var status_level = global.get(\"status_flow_4\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 880,
        "wires": [
            [
                "455a2b1497e92d32",
                "091164ee7e2b8f86"
            ]
        ]
    },
    {
        "id": "455a2b1497e92d32",
        "type": "ui_led",
        "z": "60b4b547618dda01",
        "order": 11,
        "group": "c8e5e73c6b6c38d6",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss flow",
        "x": 790,
        "y": 880,
        "wires": []
    },
    {
        "id": "5fd796fdf8b34a14",
        "type": "ui_led",
        "z": "60b4b547618dda01",
        "order": 6,
        "group": "6497d0df00ba9f79",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss level_mobile",
        "x": 1000,
        "y": 840,
        "wires": []
    },
    {
        "id": "091164ee7e2b8f86",
        "type": "ui_led",
        "z": "60b4b547618dda01",
        "order": 8,
        "group": "6497d0df00ba9f79",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss flow_mobile",
        "x": 1000,
        "y": 880,
        "wires": []
    },
    {
        "id": "196319b61c688b29",
        "type": "ui_led",
        "z": "60b4b547618dda01",
        "order": 4,
        "group": "6497d0df00ba9f79",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "#008000",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "#ff0000",
                "value": "2",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "status inverter_mobile",
        "x": 620,
        "y": 80,
        "wires": []
    },
    {
        "id": "44092e6795986735",
        "type": "function",
        "z": "60b4b547618dda01",
        "name": "function 73",
        "func": "var payload = msg.payload;\nglobal.set(\"level_4\", payload.Level);\nglobal.set(\"flow_4\", payload.Flow);\nif (payload.Total != 0)\n{\n    global.set(\"total_4\", payload.Total);\n} \nglobal.set(\"status_flow_4\", payload.Status_Flow);\nglobal.set(\"status_level_4\", payload.Status_Level);\nglobal.set(\"pv_hz_4\", payload.PV_Hz);\nglobal.set(\"status_inverter_4\", payload.Status_Inverter);\nglobal.set(\"status_phao_4\", payload.Status_Phao);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "ac5663c8b93b336e",
        "type": "debug",
        "z": "60b4b547618dda01",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 360,
        "wires": []
    },
    {
        "id": "a08a16cd930c6258",
        "type": "ui_button",
        "z": "60b4b547618dda01",
        "name": "on inverter",
        "group": "c8e5e73c6b6c38d6",
        "order": 23,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>BẬT BƠM",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 140,
        "wires": [
            [
                "4e4d72ec25338842"
            ]
        ]
    },
    {
        "id": "acdf5f43a12d6207",
        "type": "mqtt out",
        "z": "60b4b547618dda01",
        "name": "",
        "topic": "/O4/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 810,
        "y": 140,
        "wires": []
    },
    {
        "id": "22040b3cccbfa82a",
        "type": "inject",
        "z": "60b4b547618dda01",
        "name": "",
        "props": [],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 800,
        "wires": [
            [
                "573f70dfe44979b5",
                "e9ef7380e54f14a3",
                "a16b41a96b89b801",
                "f4e8b506c37490ec",
                "c8c8cf6b6aa6a5ea"
            ]
        ]
    },
    {
        "id": "f25e2a782f9ad359",
        "type": "inject",
        "z": "60b4b547618dda01",
        "name": "",
        "props": [],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "f7a081dd675050ad",
                "8b29f964180cd035"
            ]
        ]
    },
    {
        "id": "4e4d72ec25338842",
        "type": "function",
        "z": "60b4b547618dda01",
        "name": "function 94",
        "func": "global.set(\"on_inv_4\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 140,
        "wires": [
            [
                "f827f834f7a9e2fe"
            ]
        ]
    },
    {
        "id": "f827f834f7a9e2fe",
        "type": "function",
        "z": "60b4b547618dda01",
        "name": "function 95",
        "func": "msg.payload = {\"On_INV\": global.get(\"on_inv_4\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 140,
        "wires": [
            [
                "acdf5f43a12d6207",
                "f0782bf099112fde"
            ]
        ]
    },
    {
        "id": "f0782bf099112fde",
        "type": "debug",
        "z": "60b4b547618dda01",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 100,
        "wires": []
    },
    {
        "id": "f7a081dd675050ad",
        "type": "function",
        "z": "60b4b547618dda01",
        "name": "function 108",
        "func": "//var status = msg.payload;\nvar status = global.get(\"status_inverter_4\");\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 80,
        "wires": [
            [
                "196319b61c688b29"
            ]
        ]
    },
    {
        "id": "c214bc8c3a06ca61",
        "type": "ui_button",
        "z": "60b4b547618dda01",
        "name": "off inverter",
        "group": "c8e5e73c6b6c38d6",
        "order": 25,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>TẮT BƠM",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 200,
        "wires": [
            [
                "52c6392033959ab5"
            ]
        ]
    },
    {
        "id": "85e6ead4589922bc",
        "type": "mqtt out",
        "z": "60b4b547618dda01",
        "name": "",
        "topic": "/O4/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 810,
        "y": 200,
        "wires": []
    },
    {
        "id": "52c6392033959ab5",
        "type": "function",
        "z": "60b4b547618dda01",
        "name": "function 119",
        "func": "global.set(\"on_inv_4\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 200,
        "wires": [
            [
                "c511e41e572ae792"
            ]
        ]
    },
    {
        "id": "c511e41e572ae792",
        "type": "function",
        "z": "60b4b547618dda01",
        "name": "function 120",
        "func": "msg.payload = {\"On_INV\": global.get(\"on_inv_4\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 200,
        "wires": [
            [
                "85e6ead4589922bc",
                "b3210b639b82bd7f"
            ]
        ]
    },
    {
        "id": "b3210b639b82bd7f",
        "type": "debug",
        "z": "60b4b547618dda01",
        "name": "debug 47",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 240,
        "wires": []
    },
    {
        "id": "fbcc022f8390ee8b",
        "type": "function",
        "z": "60b4b547618dda01",
        "name": "counter connect g4",
        "func": "var counter_g4 = global.get(\"counter_g4\");\ncounter_g4 ++;  \nglobal.set(\"counter_g4\", counter_g4);\nmsg.payload = counter_g4;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "8b29f964180cd035",
        "type": "function",
        "z": "60b4b547618dda01",
        "name": "function 129",
        "func": "//var status = msg.payload;\nvar status = global.get(\"status_inverter_4\");\nif (status == 1)\n{\n    msg.color = \"black\";\n}\nif (status == 0) \n{\n    msg.color = \"lime\";\n}\nif (status == 2) \n{\n    msg.color = \"red\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 40,
        "wires": [
            [
                "0efcbb03f27c14c8"
            ]
        ]
    },
    {
        "id": "0efcbb03f27c14c8",
        "type": "ui_button",
        "z": "60b4b547618dda01",
        "name": "status inverter",
        "group": "c8e5e73c6b6c38d6",
        "order": 24,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 580,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "f983c00964156d09",
        "type": "mqtt in",
        "z": "0a4f1b3c819cc1eb",
        "name": "",
        "topic": "/G5/",
        "qos": "2",
        "datatype": "auto",
        "broker": "41370e1941ec34b4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 320,
        "wires": [
            [
                "bbd6996dc3677eae",
                "6037be6372d3e035"
            ]
        ]
    },
    {
        "id": "bbd6996dc3677eae",
        "type": "json",
        "z": "0a4f1b3c819cc1eb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 320,
        "wires": [
            [
                "21794c3ba107c491",
                "cc4a069e5ffe3702"
            ]
        ]
    },
    {
        "id": "fccf1ac1ba0da99f",
        "type": "ui_led",
        "z": "0a4f1b3c819cc1eb",
        "order": 22,
        "group": "93ec55053f717475",
        "width": 2,
        "height": 1,
        "label": "<font color=\"blue\"><b>Phao:",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "#ff0000",
                "value": "1",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "status phao",
        "x": 790,
        "y": 820,
        "wires": []
    },
    {
        "id": "d2c4d7508cd3622d",
        "type": "function",
        "z": "0a4f1b3c819cc1eb",
        "name": "check ss phao",
        "func": "var status = global.get(\"status_phao_5\");\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 820,
        "wires": [
            [
                "fccf1ac1ba0da99f"
            ]
        ]
    },
    {
        "id": "b349a9f3ecbc0f73",
        "type": "function",
        "z": "0a4f1b3c819cc1eb",
        "name": "display ",
        "func": "var payload = msg.payload;\nvar muc_nuoc = global.get(\"level_5\");\nvar luu_luong = global.get(\"flow_5\");\nvar luu_luong_tong = global.get(\"total_5\");\nvar status_flow = global.get(\"status_flow_5\");\nvar status_level = global.get(\"status_level_5\");\nvar tong_ngay = global.get(\"tong_ngay_5\");\nvar pv_hz = global.get(\"pv_hz_5\");\nvar phao = global.get(\"status_phao_5\");\nif (muc_nuoc == null || muc_nuoc == undefined) \n{\n    muc_nuoc = 0;\n}\nif (luu_luong == null || luu_luong == undefined) \n{\n    luu_luong = 0;\n}\nif (luu_luong_tong == null || luu_luong_tong == undefined) \n{\n    luu_luong_tong = 0;\n}\nif (status_flow == null || status_flow == undefined) \n{\n    status_flow = 2;\n}\nif (status_level == null || status_level == undefined) \n{\n    status_level = 2;\n}\nif (tong_ngay == null || tong_ngay == undefined) \n{\n    tong_ngay = 0;\n}\nif (pv_hz == null || pv_hz == undefined) \n{\n    pv_hz = 0;\n}\nif (phao == null || phao == undefined) \n{\n    phao = 0;\n}\nmsg = {};\nmsg.muc_nuoc = muc_nuoc;\nmsg.luu_luong = luu_luong;\nmsg.luu_luong_tong = luu_luong_tong;\nmsg.status_flow = status_flow;\nmsg.status_level = status_level;\nmsg.tong_ngay = tong_ngay;\nmsg.pv_hz = pv_hz;\nmsg.phao = phao;\nreturn msg;\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 660,
        "wires": [
            [
                "2cef3021bcdf4e6b",
                "247df559f002a298",
                "90b1fea417805615",
                "b2f97048a265f750",
                "34ba7075d57a1d8e",
                "1ec5588ef17d479c",
                "1daaab9d8435fa7d",
                "2ca04a9bccbb7f9c",
                "284ee4cdd4e7c989"
            ]
        ]
    },
    {
        "id": "2cef3021bcdf4e6b",
        "type": "ui_gauge",
        "z": "0a4f1b3c819cc1eb",
        "name": "level",
        "group": "93ec55053f717475",
        "order": 5,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "<font color=\"blue\"><i class=\"fa fa-line-chart\" aria-hidden=\"true\"> Mực nước (max 10m)",
        "label": "",
        "format": "{{msg.muc_nuoc}}",
        "min": "0",
        "max": "10.1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "8",
        "seg2": "10",
        "diff": false,
        "className": "",
        "x": 570,
        "y": 620,
        "wires": []
    },
    {
        "id": "247df559f002a298",
        "type": "ui_gauge",
        "z": "0a4f1b3c819cc1eb",
        "name": "flow",
        "group": "93ec55053f717475",
        "order": 9,
        "width": 4,
        "height": 3,
        "gtype": "wave",
        "title": "<font color=\"blue\"><i class=\"fa fa-bar-chart\" aria-hidden=\"true\"> Lưu lượng (m3/h)",
        "label": "",
        "format": "{{msg.luu_luong}}",
        "min": "0",
        "max": "50",
        "colors": [
            "#e6e600",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "10",
        "seg2": "50",
        "diff": false,
        "className": "",
        "x": 570,
        "y": 660,
        "wires": []
    },
    {
        "id": "90b1fea417805615",
        "type": "ui_gauge",
        "z": "0a4f1b3c819cc1eb",
        "name": "total",
        "group": "93ec55053f717475",
        "order": 17,
        "width": 4,
        "height": 3,
        "gtype": "wave",
        "title": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\">Tổng (m3)",
        "label": "",
        "format": "{{msg.luu_luong_tong}}",
        "min": "0",
        "max": "99999999",
        "colors": [
            "#e6e600",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "6",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 570,
        "y": 700,
        "wires": []
    },
    {
        "id": "b2f97048a265f750",
        "type": "ui_gauge",
        "z": "0a4f1b3c819cc1eb",
        "name": "total day",
        "group": "93ec55053f717475",
        "order": 13,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "<font color=\"blue\"> Tổng 24h (max 421.43m3)",
        "label": "",
        "format": "{{msg.tong_ngay}}",
        "min": "0",
        "max": "423",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "400",
        "seg2": "422",
        "diff": false,
        "className": "",
        "x": 580,
        "y": 740,
        "wires": []
    },
    {
        "id": "34ba7075d57a1d8e",
        "type": "link out",
        "z": "0a4f1b3c819cc1eb",
        "name": "kt7",
        "mode": "link",
        "links": [
            "a216fd289ad89afc"
        ],
        "x": 535,
        "y": 580,
        "wires": []
    },
    {
        "id": "1ec5588ef17d479c",
        "type": "ui_text",
        "z": "0a4f1b3c819cc1eb",
        "group": "c534907ad0340a41",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "level_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-line-chart\" aria-hidden=\"true\"> Mực nước (m): ",
        "format": "{{msg.muc_nuoc}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 620,
        "wires": []
    },
    {
        "id": "1daaab9d8435fa7d",
        "type": "ui_text",
        "z": "0a4f1b3c819cc1eb",
        "group": "c534907ad0340a41",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "flow_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-bar-chart\" aria-hidden=\"true\"> Lưu lượng tức thời (m3/h):",
        "format": "{{msg.luu_luong}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 660,
        "wires": []
    },
    {
        "id": "2ca04a9bccbb7f9c",
        "type": "ui_text",
        "z": "0a4f1b3c819cc1eb",
        "group": "c534907ad0340a41",
        "order": 11,
        "width": 6,
        "height": 1,
        "name": "total_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\"> Tổng lưu lượng (m3):",
        "format": "{{msg.luu_luong_tong}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 700,
        "wires": []
    },
    {
        "id": "284ee4cdd4e7c989",
        "type": "ui_text",
        "z": "0a4f1b3c819cc1eb",
        "group": "c534907ad0340a41",
        "order": 9,
        "width": 6,
        "height": 1,
        "name": "total day_mobile ",
        "label": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\">Tổng 24h (m3):",
        "format": "{{msg.tong_ngay}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 800,
        "y": 740,
        "wires": []
    },
    {
        "id": "54493023c3076129",
        "type": "ui_text",
        "z": "0a4f1b3c819cc1eb",
        "group": "c534907ad0340a41",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "check connect_mobile",
        "label": "<font color=\"blue\">Trạng thái kết nối với Datalogger:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 480,
        "y": 540,
        "wires": []
    },
    {
        "id": "1332b39eef439bcd",
        "type": "ui_text",
        "z": "0a4f1b3c819cc1eb",
        "group": "93ec55053f717475",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "check connect",
        "label": "<font color=\"blue\"><b>Kết nối với Datalogger:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 460,
        "y": 500,
        "wires": []
    },
    {
        "id": "6769740f79b62eaa",
        "type": "function",
        "z": "0a4f1b3c819cc1eb",
        "name": "check connect",
        "func": "var connect = global.get(\"counter_g5\");\nif (connect  < 2)\n{\n    msg.payload = false;\n}\nelse\n{\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 460,
        "wires": [
            [
                "e1483b502fd425e7",
                "4cb83f02554a21ac"
            ]
        ]
    },
    {
        "id": "4aa8a9af9da3893c",
        "type": "delay",
        "z": "0a4f1b3c819cc1eb",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 440,
        "y": 420,
        "wires": [
            [
                "e6ab59b04d3c6c36"
            ]
        ]
    },
    {
        "id": "e6ab59b04d3c6c36",
        "type": "function",
        "z": "0a4f1b3c819cc1eb",
        "name": "reset counter",
        "func": "global.set(\"counter_g5\", 0);\n//global.set(\"counter_g2\", 0);\n//global.set(\"counter_g3\", 0);\n//global.set(\"counter_g4\", 0);\n//global.set(\"counter_g5\", 0);\n//global.set(\"counter_g6\", 0);\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "e1483b502fd425e7",
        "type": "ui_led",
        "z": "0a4f1b3c819cc1eb",
        "order": 2,
        "group": "93ec55053f717475",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect",
        "x": 690,
        "y": 460,
        "wires": []
    },
    {
        "id": "4cb83f02554a21ac",
        "type": "ui_led",
        "z": "0a4f1b3c819cc1eb",
        "order": 2,
        "group": "c534907ad0340a41",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect_mobile",
        "x": 710,
        "y": 500,
        "wires": []
    },
    {
        "id": "0e7f3cca1802ccb3",
        "type": "cronplus",
        "z": "0a4f1b3c819cc1eb",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */5 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 280,
        "y": 440,
        "wires": [
            [
                "4aa8a9af9da3893c",
                "6769740f79b62eaa"
            ]
        ]
    },
    {
        "id": "dbb663849f2cd40e",
        "type": "function",
        "z": "0a4f1b3c819cc1eb",
        "name": "get total day",
        "func": "//var payload = msg.payload;\nvar check_tong0h_g5 = global.get(\"tong_0h_g5_sql\");\nvar tong_now_g5 = global.get(\"total_5\");\nvar tong_ngay_0h_g5 = (tong_now_g5 - check_tong0h_g5);\nglobal.set(\"tong_ngay_5\", tong_ngay_0h_g5);\n\n\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "7a2ca3e39941ec98",
        "type": "function",
        "z": "0a4f1b3c819cc1eb",
        "name": "check ss level",
        "func": "var status_level = global.get(\"status_level_5\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 860,
        "wires": [
            [
                "61dde9525717a191",
                "21166dcaee834990"
            ]
        ]
    },
    {
        "id": "61dde9525717a191",
        "type": "ui_led",
        "z": "0a4f1b3c819cc1eb",
        "order": 7,
        "group": "93ec55053f717475",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss level",
        "x": 780,
        "y": 860,
        "wires": []
    },
    {
        "id": "20d66e075e88afc8",
        "type": "function",
        "z": "0a4f1b3c819cc1eb",
        "name": "check ss flow",
        "func": "var status_level = global.get(\"status_flow_5\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 900,
        "wires": [
            [
                "f0464b12cc3315c7",
                "458a344ed0447cd2"
            ]
        ]
    },
    {
        "id": "f0464b12cc3315c7",
        "type": "ui_led",
        "z": "0a4f1b3c819cc1eb",
        "order": 11,
        "group": "93ec55053f717475",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss flow",
        "x": 770,
        "y": 900,
        "wires": []
    },
    {
        "id": "21166dcaee834990",
        "type": "ui_led",
        "z": "0a4f1b3c819cc1eb",
        "order": 6,
        "group": "c534907ad0340a41",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss level_mobile",
        "x": 980,
        "y": 860,
        "wires": []
    },
    {
        "id": "458a344ed0447cd2",
        "type": "ui_led",
        "z": "0a4f1b3c819cc1eb",
        "order": 8,
        "group": "c534907ad0340a41",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss flow_mobile",
        "x": 980,
        "y": 900,
        "wires": []
    },
    {
        "id": "64243952a54b888f",
        "type": "ui_led",
        "z": "0a4f1b3c819cc1eb",
        "order": 4,
        "group": "c534907ad0340a41",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "#008000",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "#ff0000",
                "value": "2",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "status inverter_mobile",
        "x": 560,
        "y": 80,
        "wires": []
    },
    {
        "id": "21794c3ba107c491",
        "type": "function",
        "z": "0a4f1b3c819cc1eb",
        "name": "function 74",
        "func": "var payload = msg.payload;\nglobal.set(\"level_5\", payload.Level);\nglobal.set(\"flow_5\", payload.Flow);\nif (payload.Total != 0)\n{\n    global.set(\"total_5\", payload.Total);\n} \nglobal.set(\"status_flow_5\", payload.Status_Flow);\nglobal.set(\"status_level_5\", payload.Status_Level);\nglobal.set(\"pv_hz_5\", payload.PV_Hz);\nglobal.set(\"status_inverter_5\", payload.Status_Inverter);\nglobal.set(\"status_phao_5\", payload.Status_Phao);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "cc4a069e5ffe3702",
        "type": "debug",
        "z": "0a4f1b3c819cc1eb",
        "name": "debug 26",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 360,
        "wires": []
    },
    {
        "id": "5b2f33f4907ec0b7",
        "type": "ui_button",
        "z": "0a4f1b3c819cc1eb",
        "name": "on inverter",
        "group": "93ec55053f717475",
        "order": 23,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>BẬT BƠM",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 140,
        "wires": [
            [
                "7cfba3c970a6763f"
            ]
        ]
    },
    {
        "id": "3353ad8f0f294a6d",
        "type": "mqtt out",
        "z": "0a4f1b3c819cc1eb",
        "name": "",
        "topic": "/O5/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 810,
        "y": 140,
        "wires": []
    },
    {
        "id": "eb7adfa5bc81fd68",
        "type": "inject",
        "z": "0a4f1b3c819cc1eb",
        "name": "",
        "props": [],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 820,
        "wires": [
            [
                "b349a9f3ecbc0f73",
                "d2c4d7508cd3622d",
                "7a2ca3e39941ec98",
                "20d66e075e88afc8",
                "dbb663849f2cd40e"
            ]
        ]
    },
    {
        "id": "c2c50c2ebac4d1f2",
        "type": "inject",
        "z": "0a4f1b3c819cc1eb",
        "name": "",
        "props": [],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 80,
        "wires": [
            [
                "09652af7afe2b77d",
                "f5b534c6a549d942"
            ]
        ]
    },
    {
        "id": "7cfba3c970a6763f",
        "type": "function",
        "z": "0a4f1b3c819cc1eb",
        "name": "function 97",
        "func": "global.set(\"on_inv_5\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 140,
        "wires": [
            [
                "45b043813a6bf31d"
            ]
        ]
    },
    {
        "id": "45b043813a6bf31d",
        "type": "function",
        "z": "0a4f1b3c819cc1eb",
        "name": "function 98",
        "func": "msg.payload = {\"On_INV\": global.get(\"on_inv_5\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 140,
        "wires": [
            [
                "3775a5361dc6aec6",
                "3353ad8f0f294a6d"
            ]
        ]
    },
    {
        "id": "3775a5361dc6aec6",
        "type": "debug",
        "z": "0a4f1b3c819cc1eb",
        "name": "debug 40",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 100,
        "wires": []
    },
    {
        "id": "09652af7afe2b77d",
        "type": "function",
        "z": "0a4f1b3c819cc1eb",
        "name": "function 107",
        "func": "//var status = msg.payload;\nvar status = global.get(\"status_inverter_5\");\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 80,
        "wires": [
            [
                "64243952a54b888f"
            ]
        ]
    },
    {
        "id": "d5b5071985da1bba",
        "type": "ui_button",
        "z": "0a4f1b3c819cc1eb",
        "name": "off inverter",
        "group": "93ec55053f717475",
        "order": 25,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>TẮT BƠM",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 200,
        "wires": [
            [
                "54daa8637ce1d1df"
            ]
        ]
    },
    {
        "id": "ebde6b60119540ab",
        "type": "mqtt out",
        "z": "0a4f1b3c819cc1eb",
        "name": "",
        "topic": "/O5/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 810,
        "y": 200,
        "wires": []
    },
    {
        "id": "54daa8637ce1d1df",
        "type": "function",
        "z": "0a4f1b3c819cc1eb",
        "name": "function 121",
        "func": "global.set(\"on_inv_5\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 200,
        "wires": [
            [
                "060b1a996004eeb5"
            ]
        ]
    },
    {
        "id": "060b1a996004eeb5",
        "type": "function",
        "z": "0a4f1b3c819cc1eb",
        "name": "function 122",
        "func": "msg.payload = {\"On_INV\": global.get(\"on_inv_5\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 200,
        "wires": [
            [
                "d118db66f119af0d",
                "ebde6b60119540ab"
            ]
        ]
    },
    {
        "id": "d118db66f119af0d",
        "type": "debug",
        "z": "0a4f1b3c819cc1eb",
        "name": "debug 48",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 240,
        "wires": []
    },
    {
        "id": "6037be6372d3e035",
        "type": "function",
        "z": "0a4f1b3c819cc1eb",
        "name": "counter connect g5",
        "func": "var counter_g5 = global.get(\"counter_g5\");\ncounter_g5 ++;  \nglobal.set(\"counter_g5\", counter_g5);\nmsg.payload = counter_g5;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "f5b534c6a549d942",
        "type": "function",
        "z": "0a4f1b3c819cc1eb",
        "name": "function 130",
        "func": "//var status = msg.payload;\nvar status = global.get(\"status_inverter_5\");\nif (status == 1)\n{\n    msg.color = \"black\";\n}\nif (status == 0) \n{\n    msg.color = \"lime\";\n}\nif (status == 2) \n{\n    msg.color = \"red\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 40,
        "wires": [
            [
                "85abe90237aa2b11"
            ]
        ]
    },
    {
        "id": "85abe90237aa2b11",
        "type": "ui_button",
        "z": "0a4f1b3c819cc1eb",
        "name": "status inverter",
        "group": "93ec55053f717475",
        "order": 24,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 540,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "bc9790eeee74bed2",
        "type": "mqtt in",
        "z": "1799f9f924596a28",
        "name": "",
        "topic": "/G6/",
        "qos": "2",
        "datatype": "auto",
        "broker": "41370e1941ec34b4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 320,
        "wires": [
            [
                "a801a5a09ad884b1",
                "ba4995693de5be10"
            ]
        ]
    },
    {
        "id": "a801a5a09ad884b1",
        "type": "json",
        "z": "1799f9f924596a28",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 320,
        "wires": [
            [
                "186974196ed9c036",
                "5514de7f240bfcff"
            ]
        ]
    },
    {
        "id": "cbc54f54a2394474",
        "type": "ui_led",
        "z": "1799f9f924596a28",
        "order": 22,
        "group": "f40c6bb51b026681",
        "width": 2,
        "height": 1,
        "label": "<font color=\"blue\"><b>Phao:",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "#ff0000",
                "value": "1",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "status phao",
        "x": 790,
        "y": 800,
        "wires": []
    },
    {
        "id": "25199caf9e3feade",
        "type": "function",
        "z": "1799f9f924596a28",
        "name": "check ss phao",
        "func": "var status = global.get(\"status_phao_6\");\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 800,
        "wires": [
            [
                "cbc54f54a2394474"
            ]
        ]
    },
    {
        "id": "5d3180153af0cefd",
        "type": "function",
        "z": "1799f9f924596a28",
        "name": "display ",
        "func": "var payload = msg.payload;\nvar muc_nuoc = global.get(\"level_6\");\nvar luu_luong = global.get(\"flow_6\");\nvar luu_luong_tong = global.get(\"total_6\");\nvar status_flow = global.get(\"status_flow_6\");\nvar status_level = global.get(\"status_level_6\");\nvar tong_ngay = global.get(\"tong_ngay_6\");\nvar pv_hz = global.get(\"pv_hz_6\");\nvar phao = global.get(\"status_phao_6\");\nif (muc_nuoc == null || muc_nuoc == undefined) \n{\n    muc_nuoc = 0;\n}\nif (luu_luong == null || luu_luong == undefined) \n{\n    luu_luong = 0;\n}\nif (luu_luong_tong == null || luu_luong_tong == undefined) \n{\n    luu_luong_tong = 0;\n}\nif (status_flow == null || status_flow == undefined) \n{\n    status_flow = 2;\n}\nif (status_level == null || status_level == undefined) \n{\n    status_level = 2;\n}\nif (tong_ngay == null || tong_ngay == undefined) \n{\n    tong_ngay = 0;\n}\nif (pv_hz == null || pv_hz == undefined) \n{\n    pv_hz = 0;\n}\nif (phao == null || phao == undefined) \n{\n    phao = 0;\n}\nmsg = {};\nmsg.muc_nuoc = muc_nuoc;\nmsg.luu_luong = luu_luong;\nmsg.luu_luong_tong = luu_luong_tong;\nmsg.status_flow = status_flow;\nmsg.status_level = status_level;\nmsg.tong_ngay = tong_ngay;\nmsg.pv_hz = pv_hz;\nmsg.phao = phao;\nreturn msg;\n \n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 660,
        "wires": [
            [
                "cb7a642e6c06931d",
                "b8ed2c190c233795",
                "399f82cd6d3fe8f8",
                "9bc6cd737f086f63",
                "bd358723ec3a9b18",
                "c48d04632fc0d7e7",
                "5d431b372936e047",
                "1b06499876ddf648",
                "b20c8852e56818cd"
            ]
        ]
    },
    {
        "id": "cb7a642e6c06931d",
        "type": "ui_gauge",
        "z": "1799f9f924596a28",
        "name": "level",
        "group": "f40c6bb51b026681",
        "order": 5,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "<font color=\"blue\"><i class=\"fa fa-line-chart\" aria-hidden=\"true\"> Mực nước (max 10m)",
        "label": "",
        "format": "{{msg.muc_nuoc}}",
        "min": "0",
        "max": "10.1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "8",
        "seg2": "10",
        "diff": false,
        "className": "",
        "x": 570,
        "y": 600,
        "wires": []
    },
    {
        "id": "b8ed2c190c233795",
        "type": "ui_gauge",
        "z": "1799f9f924596a28",
        "name": "flow",
        "group": "f40c6bb51b026681",
        "order": 9,
        "width": 4,
        "height": 3,
        "gtype": "wave",
        "title": "<font color=\"blue\"><i class=\"fa fa-bar-chart\" aria-hidden=\"true\"> Lưu lượng (m3/h)",
        "label": "",
        "format": "{{msg.luu_luong}}",
        "min": "0",
        "max": "50",
        "colors": [
            "#e6e600",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "10",
        "seg2": "50",
        "diff": false,
        "className": "",
        "x": 570,
        "y": 640,
        "wires": []
    },
    {
        "id": "399f82cd6d3fe8f8",
        "type": "ui_gauge",
        "z": "1799f9f924596a28",
        "name": "total",
        "group": "f40c6bb51b026681",
        "order": 17,
        "width": 4,
        "height": 3,
        "gtype": "wave",
        "title": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\">Tổng (m3)",
        "label": "",
        "format": "{{msg.luu_luong_tong}}",
        "min": "0",
        "max": "99999999",
        "colors": [
            "#e6e600",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "6",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 570,
        "y": 680,
        "wires": []
    },
    {
        "id": "9bc6cd737f086f63",
        "type": "ui_gauge",
        "z": "1799f9f924596a28",
        "name": "total day",
        "group": "f40c6bb51b026681",
        "order": 13,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "<font color=\"blue\"> Tổng 24h (max 421.43m3)",
        "label": "",
        "format": "{{msg.tong_ngay}}",
        "min": "0",
        "max": "423",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "400",
        "seg2": "422",
        "diff": false,
        "className": "",
        "x": 580,
        "y": 720,
        "wires": []
    },
    {
        "id": "bd358723ec3a9b18",
        "type": "link out",
        "z": "1799f9f924596a28",
        "name": "kt8",
        "mode": "link",
        "links": [
            "2831ad3f59f5807d"
        ],
        "x": 535,
        "y": 560,
        "wires": []
    },
    {
        "id": "c48d04632fc0d7e7",
        "type": "ui_text",
        "z": "1799f9f924596a28",
        "group": "89f90ae8144f4cc7",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "level_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-line-chart\" aria-hidden=\"true\"> Mực nước (m): ",
        "format": "{{msg.muc_nuoc}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 600,
        "wires": []
    },
    {
        "id": "5d431b372936e047",
        "type": "ui_text",
        "z": "1799f9f924596a28",
        "group": "89f90ae8144f4cc7",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "flow_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-bar-chart\" aria-hidden=\"true\"> Lưu lượng tức thời (m3/h):",
        "format": "{{msg.luu_luong}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 640,
        "wires": []
    },
    {
        "id": "1b06499876ddf648",
        "type": "ui_text",
        "z": "1799f9f924596a28",
        "group": "89f90ae8144f4cc7",
        "order": 11,
        "width": 6,
        "height": 1,
        "name": "total_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\"> Tổng lưu lượng (m3):",
        "format": "{{msg.luu_luong_tong}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 680,
        "wires": []
    },
    {
        "id": "b20c8852e56818cd",
        "type": "ui_text",
        "z": "1799f9f924596a28",
        "group": "89f90ae8144f4cc7",
        "order": 9,
        "width": 6,
        "height": 1,
        "name": "total day_mobile ",
        "label": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\">Tổng 24h (m3):",
        "format": "{{msg.tong_ngay}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 800,
        "y": 720,
        "wires": []
    },
    {
        "id": "ce6d45bd51a7512c",
        "type": "ui_text",
        "z": "1799f9f924596a28",
        "group": "89f90ae8144f4cc7",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "check connect_mobile",
        "label": "<font color=\"blue\">Trạng thái kết nối với Datalogger:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 480,
        "y": 520,
        "wires": []
    },
    {
        "id": "37e44257350aab80",
        "type": "ui_text",
        "z": "1799f9f924596a28",
        "group": "f40c6bb51b026681",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "check connect",
        "label": "<font color=\"blue\"><b>Kết nối với Datalogger:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 460,
        "y": 480,
        "wires": []
    },
    {
        "id": "24273c388aa78c12",
        "type": "function",
        "z": "1799f9f924596a28",
        "name": "check connect g1",
        "func": "var connect = global.get(\"counter_g6\");\nif (connect  < 2)\n{\n    msg.payload = false;\n}\nelse\n{\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 440,
        "wires": [
            [
                "6a87aec5af9fd1e3",
                "b69252baf3ec554f"
            ]
        ]
    },
    {
        "id": "2689af5629faf39e",
        "type": "delay",
        "z": "1799f9f924596a28",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 440,
        "y": 400,
        "wires": [
            [
                "1492cf41ecee9dcd"
            ]
        ]
    },
    {
        "id": "1492cf41ecee9dcd",
        "type": "function",
        "z": "1799f9f924596a28",
        "name": "reset counter",
        "func": "global.set(\"counter_g6\", 0);\n//global.set(\"counter_g2\", 0);\n//global.set(\"counter_g3\", 0);\n//global.set(\"counter_g4\", 0);\n//global.set(\"counter_g5\", 0);\n//global.set(\"counter_g6\", 0);\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "6a87aec5af9fd1e3",
        "type": "ui_led",
        "z": "1799f9f924596a28",
        "order": 2,
        "group": "f40c6bb51b026681",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect",
        "x": 690,
        "y": 440,
        "wires": []
    },
    {
        "id": "b69252baf3ec554f",
        "type": "ui_led",
        "z": "1799f9f924596a28",
        "order": 2,
        "group": "89f90ae8144f4cc7",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect_mobile",
        "x": 710,
        "y": 480,
        "wires": []
    },
    {
        "id": "1312d5c812c16408",
        "type": "cronplus",
        "z": "1799f9f924596a28",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */5 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 280,
        "y": 420,
        "wires": [
            [
                "2689af5629faf39e",
                "24273c388aa78c12"
            ]
        ]
    },
    {
        "id": "aa9f1187d321fbda",
        "type": "function",
        "z": "1799f9f924596a28",
        "name": "get total day",
        "func": "//var payload = msg.payload;\nvar check_tong0h_g6 = global.get(\"tong_0h_g6_sql\");\nvar tong_now_g6 = global.get(\"total_6\");\nvar tong_ngay_0h_g6 = (tong_now_g6 - check_tong0h_g6);\nglobal.set(\"tong_ngay_6\", tong_ngay_0h_g6);\n\n\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "b02535aa9d7cdfd3",
        "type": "function",
        "z": "1799f9f924596a28",
        "name": "check ss level",
        "func": "var status_level = global.get(\"status_level_6\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 840,
        "wires": [
            [
                "87b0572d1e4e2383",
                "c6b2f5085433de29"
            ]
        ]
    },
    {
        "id": "87b0572d1e4e2383",
        "type": "ui_led",
        "z": "1799f9f924596a28",
        "order": 7,
        "group": "f40c6bb51b026681",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss level",
        "x": 780,
        "y": 840,
        "wires": []
    },
    {
        "id": "8de5416a9766547c",
        "type": "function",
        "z": "1799f9f924596a28",
        "name": "check ss flow ",
        "func": "var status_level = global.get(\"status_flow_6\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 880,
        "wires": [
            [
                "eb36d1e37e9af101",
                "ac5655da9e35d702"
            ]
        ]
    },
    {
        "id": "eb36d1e37e9af101",
        "type": "ui_led",
        "z": "1799f9f924596a28",
        "order": 11,
        "group": "f40c6bb51b026681",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss flow",
        "x": 770,
        "y": 880,
        "wires": []
    },
    {
        "id": "c6b2f5085433de29",
        "type": "ui_led",
        "z": "1799f9f924596a28",
        "order": 6,
        "group": "89f90ae8144f4cc7",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss level_mobile",
        "x": 980,
        "y": 840,
        "wires": []
    },
    {
        "id": "ac5655da9e35d702",
        "type": "ui_led",
        "z": "1799f9f924596a28",
        "order": 8,
        "group": "89f90ae8144f4cc7",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss flow_mobile",
        "x": 980,
        "y": 880,
        "wires": []
    },
    {
        "id": "18b7f96a0cbbb1a8",
        "type": "ui_led",
        "z": "1799f9f924596a28",
        "order": 4,
        "group": "89f90ae8144f4cc7",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "#008000",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "#ff0000",
                "value": "2",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "status inverter_mobile",
        "x": 540,
        "y": 100,
        "wires": []
    },
    {
        "id": "186974196ed9c036",
        "type": "function",
        "z": "1799f9f924596a28",
        "name": "function 75",
        "func": "var payload = msg.payload;\nglobal.set(\"level_6\", payload.Level);\nglobal.set(\"flow_6\", payload.Flow);\nif (payload.Total != 0)\n{\n    global.set(\"total_6\", payload.Total);\n} \nglobal.set(\"status_flow_6\", payload.Status_Flow);\nglobal.set(\"status_level_6\", payload.Status_Level);\nglobal.set(\"pv_hz_6\", payload.PV_Hz);\nglobal.set(\"status_inverter_6\", payload.Status_Inverter);\nglobal.set(\"status_phao_6\", payload.Status_Phao);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "5514de7f240bfcff",
        "type": "debug",
        "z": "1799f9f924596a28",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 360,
        "wires": []
    },
    {
        "id": "f622acd1442a98b3",
        "type": "ui_button",
        "z": "1799f9f924596a28",
        "name": "on inverter",
        "group": "f40c6bb51b026681",
        "order": 23,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>BẬT BƠM",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 160,
        "wires": [
            [
                "21f079ac01d791e0"
            ]
        ]
    },
    {
        "id": "98d2766d0b1a8570",
        "type": "mqtt out",
        "z": "1799f9f924596a28",
        "name": "",
        "topic": "/O6/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 830,
        "y": 160,
        "wires": []
    },
    {
        "id": "c7be388f811ac5fa",
        "type": "inject",
        "z": "1799f9f924596a28",
        "name": "",
        "props": [],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 800,
        "wires": [
            [
                "5d3180153af0cefd",
                "25199caf9e3feade",
                "b02535aa9d7cdfd3",
                "8de5416a9766547c",
                "aa9f1187d321fbda"
            ]
        ]
    },
    {
        "id": "a7a62863065e5012",
        "type": "inject",
        "z": "1799f9f924596a28",
        "name": "",
        "props": [],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "83acfae2e969ea53",
                "fea1f9043f88c1d6"
            ]
        ]
    },
    {
        "id": "21f079ac01d791e0",
        "type": "function",
        "z": "1799f9f924596a28",
        "name": "function 100",
        "func": "global.set(\"on_inv_6\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 160,
        "wires": [
            [
                "e3fd192e85b53552"
            ]
        ]
    },
    {
        "id": "e3fd192e85b53552",
        "type": "function",
        "z": "1799f9f924596a28",
        "name": "function 101",
        "func": "msg.payload = {\"On_INV\": global.get(\"on_inv_6\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 160,
        "wires": [
            [
                "29c6d31c940b7d44",
                "98d2766d0b1a8570"
            ]
        ]
    },
    {
        "id": "29c6d31c940b7d44",
        "type": "debug",
        "z": "1799f9f924596a28",
        "name": "debug 41",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 120,
        "wires": []
    },
    {
        "id": "83acfae2e969ea53",
        "type": "function",
        "z": "1799f9f924596a28",
        "name": "function 106",
        "func": "//var status = msg.payload;\nvar status = global.get(\"status_inverter_6\");\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 100,
        "wires": [
            [
                "18b7f96a0cbbb1a8"
            ]
        ]
    },
    {
        "id": "aa51ec414976c74d",
        "type": "ui_button",
        "z": "1799f9f924596a28",
        "name": "off inverter",
        "group": "f40c6bb51b026681",
        "order": 25,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>TẮT BƠM",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 220,
        "wires": [
            [
                "5a572591e2dbe785"
            ]
        ]
    },
    {
        "id": "cfa71dd117c8c2f0",
        "type": "mqtt out",
        "z": "1799f9f924596a28",
        "name": "",
        "topic": "/O6/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 830,
        "y": 220,
        "wires": []
    },
    {
        "id": "5a572591e2dbe785",
        "type": "function",
        "z": "1799f9f924596a28",
        "name": "function 123",
        "func": "global.set(\"on_inv_6\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 220,
        "wires": [
            [
                "d113e7e080598550"
            ]
        ]
    },
    {
        "id": "d113e7e080598550",
        "type": "function",
        "z": "1799f9f924596a28",
        "name": "function 124",
        "func": "msg.payload = {\"On_INV\": global.get(\"on_inv_6\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 220,
        "wires": [
            [
                "7bea05d42c79a849",
                "cfa71dd117c8c2f0"
            ]
        ]
    },
    {
        "id": "7bea05d42c79a849",
        "type": "debug",
        "z": "1799f9f924596a28",
        "name": "debug 49",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 260,
        "wires": []
    },
    {
        "id": "ba4995693de5be10",
        "type": "function",
        "z": "1799f9f924596a28",
        "name": "counter connect g6",
        "func": "var counter_g6 = global.get(\"counter_g6\");\ncounter_g6 ++;  \nglobal.set(\"counter_g6\", counter_g6);\nmsg.payload = counter_g6;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "fea1f9043f88c1d6",
        "type": "function",
        "z": "1799f9f924596a28",
        "name": "function 131",
        "func": "//var status = msg.payload;\nvar status = global.get(\"status_inverter_6\");\nif (status == 1)\n{\n    msg.color = \"black\";\n}\nif (status == 0) \n{\n    msg.color = \"lime\";\n}\nif (status == 2) \n{\n    msg.color = \"red\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 60,
        "wires": [
            [
                "08ab8bfdc2334570"
            ]
        ]
    },
    {
        "id": "08ab8bfdc2334570",
        "type": "ui_button",
        "z": "1799f9f924596a28",
        "name": "status inverter",
        "group": "f40c6bb51b026681",
        "order": 24,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 520,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "28400ce7896e1c05",
        "type": "mqtt in",
        "z": "cf86c899003b8ec7",
        "name": "",
        "topic": "/G7/",
        "qos": "2",
        "datatype": "auto",
        "broker": "41370e1941ec34b4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 340,
        "wires": [
            [
                "fd06c7c438a1e016",
                "c5f2031e0b2aab0a"
            ]
        ]
    },
    {
        "id": "fd06c7c438a1e016",
        "type": "json",
        "z": "cf86c899003b8ec7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 340,
        "wires": [
            [
                "be7a6bf295ea1603",
                "b7065412d53e5bb5"
            ]
        ]
    },
    {
        "id": "ccda44f404759ecc",
        "type": "ui_led",
        "z": "cf86c899003b8ec7",
        "order": 22,
        "group": "84dc3a0a897c3f1c",
        "width": 2,
        "height": 1,
        "label": "<font color=\"blue\"><b>Phao:",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "#ff0000",
                "value": "1",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "status phao",
        "x": 790,
        "y": 820,
        "wires": []
    },
    {
        "id": "8f5f6d07133cc59d",
        "type": "function",
        "z": "cf86c899003b8ec7",
        "name": "check ss phao",
        "func": "var status = global.get(\"status_phao_7\");\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 820,
        "wires": [
            [
                "ccda44f404759ecc"
            ]
        ]
    },
    {
        "id": "9b7cfae118eeb067",
        "type": "function",
        "z": "cf86c899003b8ec7",
        "name": "display ",
        "func": "var payload = msg.payload;\nvar muc_nuoc = global.get(\"level_7\");\nvar luu_luong = global.get(\"flow_7\");\nvar luu_luong_tong = global.get(\"total_7\");\nvar status_flow = global.get(\"status_flow_7\");\nvar status_level = global.get(\"status_level_7\");\nvar tong_ngay = global.get(\"tong_ngay_7\");\nvar pv_hz = global.get(\"pv_hz_7\");\nvar phao = global.get(\"status_phao_7\");\nif (muc_nuoc == null || muc_nuoc == undefined) \n{\n    muc_nuoc = 0;\n}\nif (luu_luong == null || luu_luong == undefined) \n{\n    luu_luong = 0;\n}\nif (luu_luong_tong == null || luu_luong_tong == undefined) \n{\n    luu_luong_tong = 0;\n}\nif (status_flow == null || status_flow == undefined) \n{\n    status_flow = 2;\n}\nif (status_level == null || status_level == undefined) \n{\n    status_level = 2;\n}\nif (tong_ngay == null || tong_ngay == undefined) \n{\n    tong_ngay = 0;\n}\nif (pv_hz == null || pv_hz == undefined) \n{\n    pv_hz = 0;\n}\nif (phao == null || phao == undefined) \n{\n    phao = 0;\n}\nmsg = {};\nmsg.muc_nuoc = muc_nuoc;\nmsg.luu_luong = luu_luong;\nmsg.luu_luong_tong = luu_luong_tong;\nmsg.status_flow = status_flow;\nmsg.status_level = status_level;\nmsg.tong_ngay = tong_ngay;\nmsg.pv_hz = pv_hz;\nmsg.phao = phao;\nreturn msg;\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 660,
        "wires": [
            [
                "3e10508746d0e5b9",
                "2824c5fac8152417",
                "3e037e1f541cc2be",
                "3ef276c5f8b2098e",
                "ca7da970d6a604c6",
                "fee2ccd7fa9ae886",
                "279e6de1b9d527e9",
                "314320fdd29848e5",
                "ebb1324cb94f9c6d"
            ]
        ]
    },
    {
        "id": "3e10508746d0e5b9",
        "type": "ui_gauge",
        "z": "cf86c899003b8ec7",
        "name": "level",
        "group": "84dc3a0a897c3f1c",
        "order": 5,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "<font color=\"blue\"><i class=\"fa fa-line-chart\" aria-hidden=\"true\"> Mực nước (max 7m)",
        "label": "",
        "format": "{{msg.muc_nuoc}}",
        "min": "0",
        "max": "7.1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "5",
        "seg2": "7",
        "diff": false,
        "className": "",
        "x": 570,
        "y": 620,
        "wires": []
    },
    {
        "id": "2824c5fac8152417",
        "type": "ui_gauge",
        "z": "cf86c899003b8ec7",
        "name": "flow",
        "group": "84dc3a0a897c3f1c",
        "order": 9,
        "width": 4,
        "height": 3,
        "gtype": "wave",
        "title": "<font color=\"blue\"><i class=\"fa fa-bar-chart\" aria-hidden=\"true\"> Lưu lượng (m3/h)",
        "label": "",
        "format": "{{msg.luu_luong}}",
        "min": "0",
        "max": "50",
        "colors": [
            "#e6e600",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "10",
        "seg2": "50",
        "diff": false,
        "className": "",
        "x": 570,
        "y": 660,
        "wires": []
    },
    {
        "id": "3e037e1f541cc2be",
        "type": "ui_gauge",
        "z": "cf86c899003b8ec7",
        "name": "total",
        "group": "84dc3a0a897c3f1c",
        "order": 17,
        "width": 4,
        "height": 3,
        "gtype": "wave",
        "title": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\">Tổng (m3)",
        "label": "",
        "format": "{{msg.luu_luong_tong}}",
        "min": "0",
        "max": "99999999",
        "colors": [
            "#e6e600",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "6",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 570,
        "y": 700,
        "wires": []
    },
    {
        "id": "3ef276c5f8b2098e",
        "type": "ui_gauge",
        "z": "cf86c899003b8ec7",
        "name": "total day",
        "group": "84dc3a0a897c3f1c",
        "order": 13,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "<font color=\"blue\"> Tổng 24h (max 421.43m3)",
        "label": "",
        "format": "{{msg.tong_ngay}}",
        "min": "0",
        "max": "423",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "400",
        "seg2": "422",
        "diff": false,
        "className": "",
        "x": 580,
        "y": 740,
        "wires": []
    },
    {
        "id": "ca7da970d6a604c6",
        "type": "link out",
        "z": "cf86c899003b8ec7",
        "name": "kt10",
        "mode": "link",
        "links": [
            "935165d6f77d67db"
        ],
        "x": 535,
        "y": 580,
        "wires": []
    },
    {
        "id": "fee2ccd7fa9ae886",
        "type": "ui_text",
        "z": "cf86c899003b8ec7",
        "group": "d375dab203da6e86",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "level_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-line-chart\" aria-hidden=\"true\"> Mực nước (m): ",
        "format": "{{msg.muc_nuoc}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 620,
        "wires": []
    },
    {
        "id": "279e6de1b9d527e9",
        "type": "ui_text",
        "z": "cf86c899003b8ec7",
        "group": "d375dab203da6e86",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "flow_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-bar-chart\" aria-hidden=\"true\"> Lưu lượng tức thời (m3/h):",
        "format": "{{msg.luu_luong}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 660,
        "wires": []
    },
    {
        "id": "314320fdd29848e5",
        "type": "ui_text",
        "z": "cf86c899003b8ec7",
        "group": "d375dab203da6e86",
        "order": 11,
        "width": 6,
        "height": 1,
        "name": "total_mobile",
        "label": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\"> Tổng lưu lượng (m3):",
        "format": "{{msg.luu_luong_tong}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 700,
        "wires": []
    },
    {
        "id": "ebb1324cb94f9c6d",
        "type": "ui_text",
        "z": "cf86c899003b8ec7",
        "group": "d375dab203da6e86",
        "order": 9,
        "width": 6,
        "height": 1,
        "name": "total day_mobile ",
        "label": "<font color=\"blue\"><i class=\"fa fa-area-chart\" aria-hidden=\"true\">Tổng 24h (m3):",
        "format": "{{msg.tong_ngay}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 800,
        "y": 740,
        "wires": []
    },
    {
        "id": "3d05da0416f43d99",
        "type": "ui_text",
        "z": "cf86c899003b8ec7",
        "group": "d375dab203da6e86",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "check connect_mobile",
        "label": "<font color=\"blue\">Trạng thái kết nối với Datalogger:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 480,
        "y": 540,
        "wires": []
    },
    {
        "id": "0509cdf038faa639",
        "type": "ui_text",
        "z": "cf86c899003b8ec7",
        "group": "84dc3a0a897c3f1c",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "check connect",
        "label": "<font color=\"blue\"><b>Kết nối với Datalogger:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 460,
        "y": 500,
        "wires": []
    },
    {
        "id": "4ca478c534db32d0",
        "type": "function",
        "z": "cf86c899003b8ec7",
        "name": "check connect g1",
        "func": "var connect = global.get(\"counter_g7\");\nif (connect  < 2)\n{\n    msg.payload = false;\n}\nelse\n{\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 460,
        "wires": [
            [
                "80948abcf8a055c0",
                "9f6711fe625a9082"
            ]
        ]
    },
    {
        "id": "6c68758948f2d1bc",
        "type": "delay",
        "z": "cf86c899003b8ec7",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 440,
        "y": 420,
        "wires": [
            [
                "78e7251c1a3e5acb"
            ]
        ]
    },
    {
        "id": "78e7251c1a3e5acb",
        "type": "function",
        "z": "cf86c899003b8ec7",
        "name": "reset counter",
        "func": "global.set(\"counter_g7\", 0);\n//global.set(\"counter_g2\", 0);\n//global.set(\"counter_g3\", 0);\n//global.set(\"counter_g4\", 0);\n//global.set(\"counter_g5\", 0);\n//global.set(\"counter_g6\", 0);\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "80948abcf8a055c0",
        "type": "ui_led",
        "z": "cf86c899003b8ec7",
        "order": 2,
        "group": "84dc3a0a897c3f1c",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect",
        "x": 690,
        "y": 460,
        "wires": []
    },
    {
        "id": "9f6711fe625a9082",
        "type": "ui_led",
        "z": "cf86c899003b8ec7",
        "order": 2,
        "group": "d375dab203da6e86",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect_mobile",
        "x": 710,
        "y": 500,
        "wires": []
    },
    {
        "id": "5cd90f71fb1ac5eb",
        "type": "cronplus",
        "z": "cf86c899003b8ec7",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */5 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 280,
        "y": 440,
        "wires": [
            [
                "6c68758948f2d1bc",
                "4ca478c534db32d0"
            ]
        ]
    },
    {
        "id": "773d9704f330bf24",
        "type": "function",
        "z": "cf86c899003b8ec7",
        "name": "get total day",
        "func": "//var payload = msg.payload;\nvar check_tong0h_g7 = global.get(\"tong_0h_g7_sql\");\nvar tong_now_g7 = global.get(\"total_7\");\nvar tong_ngay_0h_g7 = (tong_now_g7 - check_tong0h_g7);\nglobal.set(\"tong_ngay_7\", tong_ngay_0h_g7);\n\n\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "32daa0cddf7bb78e",
        "type": "function",
        "z": "cf86c899003b8ec7",
        "name": "check ss level",
        "func": "var status_level = global.get(\"status_level_7\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 860,
        "wires": [
            [
                "513c9f39ec94f8d7",
                "2144feb22317a0ca"
            ]
        ]
    },
    {
        "id": "513c9f39ec94f8d7",
        "type": "ui_led",
        "z": "cf86c899003b8ec7",
        "order": 7,
        "group": "84dc3a0a897c3f1c",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss level",
        "x": 780,
        "y": 860,
        "wires": []
    },
    {
        "id": "3baccc20d0b9c91d",
        "type": "function",
        "z": "cf86c899003b8ec7",
        "name": "check ss flow",
        "func": "var status_level = global.get(\"status_flow_7\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 900,
        "wires": [
            [
                "4ae2f4346b26a4f7",
                "b553185ace2a25f8"
            ]
        ]
    },
    {
        "id": "4ae2f4346b26a4f7",
        "type": "ui_led",
        "z": "cf86c899003b8ec7",
        "order": 11,
        "group": "84dc3a0a897c3f1c",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss flow",
        "x": 770,
        "y": 900,
        "wires": []
    },
    {
        "id": "2144feb22317a0ca",
        "type": "ui_led",
        "z": "cf86c899003b8ec7",
        "order": 6,
        "group": "d375dab203da6e86",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss level_mobile",
        "x": 960,
        "y": 860,
        "wires": []
    },
    {
        "id": "b553185ace2a25f8",
        "type": "ui_led",
        "z": "cf86c899003b8ec7",
        "order": 8,
        "group": "d375dab203da6e86",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "center",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "ss flow_mobile",
        "x": 960,
        "y": 900,
        "wires": []
    },
    {
        "id": "a91f97215994e344",
        "type": "ui_led",
        "z": "cf86c899003b8ec7",
        "order": 4,
        "group": "d375dab203da6e86",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#000000",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "#008000",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "#ff0000",
                "value": "2",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "status inverter_mobile",
        "x": 600,
        "y": 80,
        "wires": []
    },
    {
        "id": "be7a6bf295ea1603",
        "type": "function",
        "z": "cf86c899003b8ec7",
        "name": "function 76",
        "func": "var payload = msg.payload;\nglobal.set(\"level_7\", payload.Level);\nglobal.set(\"flow_7\", payload.Flow);\nif (payload.Total != 0)\n{\n    global.set(\"total_7\", payload.Total);\n} \nglobal.set(\"status_flow_7\", payload.Status_Flow);\nglobal.set(\"status_level_7\", payload.Status_Level);\nglobal.set(\"pv_hz_7\", payload.PV_Hz);\nglobal.set(\"status_inverter_7\", payload.Status_Inverter);\nglobal.set(\"status_phao_7\", payload.Status_Phao);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "b7065412d53e5bb5",
        "type": "debug",
        "z": "cf86c899003b8ec7",
        "name": "debug 28",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 380,
        "wires": []
    },
    {
        "id": "558a2ada8d35e744",
        "type": "mqtt out",
        "z": "cf86c899003b8ec7",
        "name": "",
        "topic": "/O7/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 790,
        "y": 160,
        "wires": []
    },
    {
        "id": "ba1b1b6c34767eb5",
        "type": "ui_button",
        "z": "cf86c899003b8ec7",
        "name": "on inverter",
        "group": "84dc3a0a897c3f1c",
        "order": 23,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>BẬT BƠM",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 160,
        "wires": [
            [
                "7028dd6824347d05"
            ]
        ]
    },
    {
        "id": "b98cabce34e5e133",
        "type": "inject",
        "z": "cf86c899003b8ec7",
        "name": "",
        "props": [],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 820,
        "wires": [
            [
                "9b7cfae118eeb067",
                "8f5f6d07133cc59d",
                "32daa0cddf7bb78e",
                "3baccc20d0b9c91d",
                "773d9704f330bf24"
            ]
        ]
    },
    {
        "id": "ccb752d60277c874",
        "type": "inject",
        "z": "cf86c899003b8ec7",
        "name": "",
        "props": [],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "65357507fe905bcf",
                "91c64b99259ddf8e"
            ]
        ]
    },
    {
        "id": "7028dd6824347d05",
        "type": "function",
        "z": "cf86c899003b8ec7",
        "name": "function 103",
        "func": "global.set(\"on_inv_7\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 160,
        "wires": [
            [
                "be224d0a817bcf1b"
            ]
        ]
    },
    {
        "id": "be224d0a817bcf1b",
        "type": "function",
        "z": "cf86c899003b8ec7",
        "name": "function 104",
        "func": "msg.payload = {\"On_INV\": global.get(\"on_inv_7\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 160,
        "wires": [
            [
                "bfab0798e34f8431",
                "558a2ada8d35e744"
            ]
        ]
    },
    {
        "id": "bfab0798e34f8431",
        "type": "debug",
        "z": "cf86c899003b8ec7",
        "name": "debug 42",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 120,
        "wires": []
    },
    {
        "id": "65357507fe905bcf",
        "type": "function",
        "z": "cf86c899003b8ec7",
        "name": "function 105",
        "func": "//var status = msg.payload;\nvar status = global.get(\"status_inverter_7\");\nmsg.payload = status;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 80,
        "wires": [
            [
                "a91f97215994e344"
            ]
        ]
    },
    {
        "id": "b245aedaefae13fb",
        "type": "debug",
        "z": "cf86c899003b8ec7",
        "name": "debug 50",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 260,
        "wires": []
    },
    {
        "id": "5b9f1dd913260b1e",
        "type": "mqtt out",
        "z": "cf86c899003b8ec7",
        "name": "",
        "topic": "/O7/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 790,
        "y": 220,
        "wires": []
    },
    {
        "id": "746517cffd77ace8",
        "type": "ui_button",
        "z": "cf86c899003b8ec7",
        "name": "off inverter",
        "group": "84dc3a0a897c3f1c",
        "order": 25,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>TẮT BƠM",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 220,
        "wires": [
            [
                "0cc600f7b05380c8"
            ]
        ]
    },
    {
        "id": "0cc600f7b05380c8",
        "type": "function",
        "z": "cf86c899003b8ec7",
        "name": "function 125",
        "func": "global.set(\"on_inv_7\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 220,
        "wires": [
            [
                "176e705a9153a70b"
            ]
        ]
    },
    {
        "id": "176e705a9153a70b",
        "type": "function",
        "z": "cf86c899003b8ec7",
        "name": "function 126",
        "func": "msg.payload = {\"On_INV\": global.get(\"on_inv_7\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 220,
        "wires": [
            [
                "b245aedaefae13fb",
                "5b9f1dd913260b1e"
            ]
        ]
    },
    {
        "id": "c5f2031e0b2aab0a",
        "type": "function",
        "z": "cf86c899003b8ec7",
        "name": "counter connect g7",
        "func": "var counter_g7 = global.get(\"counter_g7\");\ncounter_g7 ++;  \nglobal.set(\"counter_g7\", counter_g7);\nmsg.payload = counter_g7;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "91c64b99259ddf8e",
        "type": "function",
        "z": "cf86c899003b8ec7",
        "name": "function 132",
        "func": "//var status = msg.payload;\nvar status = global.get(\"status_inverter_7\");\nif (status == 1)\n{\n    msg.color = \"black\";\n}\nif (status == 0) \n{\n    msg.color = \"lime\";\n}\nif (status == 2) \n{\n    msg.color = \"red\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 40,
        "wires": [
            [
                "ed697286b4993cf9"
            ]
        ]
    },
    {
        "id": "ed697286b4993cf9",
        "type": "ui_button",
        "z": "cf86c899003b8ec7",
        "name": "status inverter",
        "group": "84dc3a0a897c3f1c",
        "order": 24,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 580,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "8160c40f18471d3d",
        "type": "sqlstring-format",
        "z": "a67c9cf64cd6a481",
        "name": "insert_data g1",
        "query": "INSERT INTO `g1`(`muc_nuoc`,`luu_luong`,`luu_luong_tong`,`status_flow`,`status_level`,`tong_ngay`,`thoi_gian`) VALUES (?,?,?,?,?,?,?);\n\n",
        "vars": "muc_nuoc,luu_luong,luu_luong_tong,status_flow,status_level,tong_ngay,thoi_gian",
        "outField": "topic",
        "x": 600,
        "y": 80,
        "wires": [
            [
                "1ed6f0df8e9c327b"
            ]
        ]
    },
    {
        "id": "8df62f097ecf1c3a",
        "type": "sqlstring-format",
        "z": "a67c9cf64cd6a481",
        "name": "insert_data g2",
        "query": "INSERT INTO `g2`(`muc_nuoc`,`luu_luong`,`luu_luong_tong`,`status_flow`,`status_level`,`tong_ngay`,`thoi_gian`) VALUES (?,?,?,?,?,?,?);\n",
        "vars": "muc_nuoc,luu_luong,luu_luong_tong,status_flow,status_level,tong_ngay,thoi_gian",
        "outField": "topic",
        "x": 600,
        "y": 120,
        "wires": [
            [
                "1ed6f0df8e9c327b"
            ]
        ]
    },
    {
        "id": "755149ba331a6727",
        "type": "sqlstring-format",
        "z": "a67c9cf64cd6a481",
        "name": "insert_data g3",
        "query": "INSERT INTO `g3`(`muc_nuoc`,`luu_luong`,`luu_luong_tong`,`status_flow`,`status_level`,`tong_ngay`,`thoi_gian`) VALUES (?,?,?,?,?,?,?);\n",
        "vars": "muc_nuoc,luu_luong,luu_luong_tong,status_flow,status_level,tong_ngay,thoi_gian",
        "outField": "topic",
        "x": 600,
        "y": 160,
        "wires": [
            [
                "1ed6f0df8e9c327b"
            ]
        ]
    },
    {
        "id": "08fd675f7e3aa4b9",
        "type": "sqlstring-format",
        "z": "a67c9cf64cd6a481",
        "name": "insert_data g4",
        "query": "INSERT INTO `g4`(`muc_nuoc`,`luu_luong`,`luu_luong_tong`,`status_flow`,`status_level`,`tong_ngay`,`thoi_gian`) VALUES (?,?,?,?,?,?,?);\n",
        "vars": "muc_nuoc,luu_luong,luu_luong_tong,status_flow,status_level,tong_ngay,thoi_gian",
        "outField": "topic",
        "x": 600,
        "y": 200,
        "wires": [
            [
                "1ed6f0df8e9c327b"
            ]
        ]
    },
    {
        "id": "608635d0edd44613",
        "type": "cronplus",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */30 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 160,
        "y": 180,
        "wires": [
            [
                "4342bb2c6337d2e3",
                "96d4a053a505136a",
                "06e2d1a1c0ee1133",
                "9b85f3cf4c176a93",
                "559415f74856dc16",
                "87d64d6df5a98f1a",
                "4d89406cbcbd3593"
            ]
        ]
    },
    {
        "id": "4342bb2c6337d2e3",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "data g1",
        "func": "var payload = msg.payload;\nvar muc_nuoc = global.get(\"level_1\");\nvar luu_luong = global.get(\"flow_1\");\nvar luu_luong_tong = global.get(\"total_1\");\nvar status_flow = global.get(\"status_flow_1\");\nvar status_level = global.get(\"status_level_1\");\nvar tong_ngay = global.get(\"tong_ngay_1\");\nif (muc_nuoc == null || muc_nuoc == undefined || isNaN(muc_nuoc)) \n{\n    muc_nuoc = 0;\n}\nif (luu_luong == null || luu_luong == undefined || isNaN(luu_luong)) \n{\n    luu_luong = 0;\n}\nif (luu_luong_tong == null || luu_luong_tong == undefined || isNaN(luu_luong_tong))\n{\n    luu_luong_tong = 0;\n}\nif (status_flow == null || status_flow == undefined || isNaN(status_flow)) \n{\n    status_flow = 0;\n}\nif (status_level == null || status_level == undefined || isNaN(status_level)) \n{\n    status_level = 0;\n}\nif (tong_ngay == null || tong_ngay == undefined || isNaN(tong_ngay)) \n{\n    tong_ngay = 0;\n}\nvar now = new Date();\nnow.setHours(now.getHours());\nvar year = now.getFullYear();\nvar month = now.getMonth() < 10 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1);\nvar day = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar ngay = parseInt(day);\nvar ngay_1 = parseInt(day) - 1;\nif (ngay_1 == 0)\n{\n    ngay_1 = 1;\n}\nvar hour = now.getHours();\n//var hour = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar min = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\n\nglobal.set('year', year);\nglobal.set('month', month);\nglobal.set('day', day);\nglobal.set('hour', hour);\nglobal.set('min', min);\n\nvar date_1 = year.toString() + \"-\" + month.toString() + \"-\" + ngay.toString();\nvar date_2 = year.toString() + \"-\" + month.toString() + \"-\" + ngay_1.toString();\nvar time = hour.toString() + \":\" + min.toString();\n\n\nmsg = {};\nmsg.muc_nuoc = muc_nuoc;\nmsg.luu_luong = luu_luong;\nmsg.luu_luong_tong = luu_luong_tong;\nmsg.tong_ngay = tong_ngay;\nmsg.status_flow = status_flow;\nmsg.status_level = status_level;\nif (time == \"0:00\") {\n    msg.thoi_gian = date_2 + \" \" + time;\n}\nelse \n{\n    msg.thoi_gian = date_1 + \" \" + time;\n}\nreturn msg;\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 80,
        "wires": [
            [
                "8160c40f18471d3d"
            ]
        ]
    },
    {
        "id": "96d4a053a505136a",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "data g2",
        "func": "var payload = msg.payload;\nvar muc_nuoc = global.get(\"level_2\");\nvar luu_luong = global.get(\"flow_2\");\nvar luu_luong_tong = global.get(\"total_2\");\nvar status_flow = global.get(\"status_flow_2\");\nvar status_level = global.get(\"status_level_2\");\nvar tong_ngay = global.get(\"tong_ngay_2\");\nif (muc_nuoc == null || muc_nuoc == undefined || isNaN(muc_nuoc)) \n{\n    muc_nuoc = 0;\n}\nif (luu_luong == null || luu_luong == undefined || isNaN(luu_luong)) \n{\n    luu_luong = 0;\n}\nif (luu_luong_tong == null || luu_luong_tong == undefined || isNaN(luu_luong_tong))\n{\n    luu_luong_tong = 0;\n}\nif (status_flow == null || status_flow == undefined || isNaN(status_flow)) \n{\n    status_flow = 0;\n}\nif (status_level == null || status_level == undefined || isNaN(status_level)) \n{\n    status_level = 0;\n}\nif (tong_ngay == null || tong_ngay == undefined || isNaN(tong_ngay)) \n{\n    tong_ngay = 0;\n}\nvar now = new Date();\nnow.setHours(now.getHours());\nvar year = now.getFullYear();\nvar month = now.getMonth() < 10 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1);\nvar day = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar ngay = parseInt(day);\nvar ngay_1 = parseInt(day) - 1;\nif (ngay_1 == 0)\n{\n    ngay_1 = 1;\n}\nvar hour = now.getHours();\n//var hour = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar min = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\n\nglobal.set('year', year);\nglobal.set('month', month);\nglobal.set('day', day);\nglobal.set('hour', hour);\nglobal.set('min', min);\n\nvar date_1 = year.toString() + \"-\" + month.toString() + \"-\" + ngay.toString();\nvar date_2 = year.toString() + \"-\" + month.toString() + \"-\" + ngay_1.toString();\nvar time = hour.toString() + \":\" + min.toString();\n\nmsg = {};\nmsg.muc_nuoc = muc_nuoc;\nmsg.luu_luong = luu_luong;\nmsg.luu_luong_tong = luu_luong_tong;\nmsg.tong_ngay = tong_ngay;\nmsg.status_flow = status_flow;\nmsg.status_level = status_level;\nif (time == \"0:00\") \n{\n    msg.thoi_gian = date_2 + \" \" + time;\n}\nelse \n{\n    msg.thoi_gian = date_1 + \" \" + time;\n}\nreturn msg;\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 120,
        "wires": [
            [
                "8df62f097ecf1c3a"
            ]
        ]
    },
    {
        "id": "9b85f3cf4c176a93",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "data g4",
        "func": "var payload = msg.payload;\nvar muc_nuoc = global.get(\"level_4\");\nvar luu_luong = global.get(\"flow_4\");\nvar luu_luong_tong = global.get(\"total_4\");\nvar status_flow = global.get(\"status_flow_4\");\nvar status_level = global.get(\"status_level_4\");\nvar tong_ngay = global.get(\"tong_ngay_4\");\nif (muc_nuoc == null || muc_nuoc == undefined || isNaN(muc_nuoc)) \n{\n    muc_nuoc = 0;\n}\nif (luu_luong == null || luu_luong == undefined || isNaN(luu_luong)) \n{\n    luu_luong = 0;\n}\nif (luu_luong_tong == null || luu_luong_tong == undefined || isNaN(luu_luong_tong))\n{\n    luu_luong_tong = 0;\n}\nif (status_flow == null || status_flow == undefined || isNaN(status_flow)) \n{\n    status_flow = 0;\n}\nif (status_level == null || status_level == undefined || isNaN(status_level)) \n{\n    status_level = 0;\n}\nif (tong_ngay == null || tong_ngay == undefined || isNaN(tong_ngay)) \n{\n    tong_ngay = 0;\n}\nvar now = new Date();\nnow.setHours(now.getHours());\nvar year = now.getFullYear();\nvar month = now.getMonth() < 10 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1);\nvar day = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar ngay = parseInt(day);\nvar ngay_1 = parseInt(day) - 1;\nif (ngay_1 == 0)\n{\n    ngay_1 = 1;\n}\nvar hour = now.getHours();\n//var hour = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar min = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\n\nglobal.set('year', year);\nglobal.set('month', month);\nglobal.set('day', day);\nglobal.set('hour', hour);\nglobal.set('min', min);\n\nvar date_1 = year.toString() + \"-\" + month.toString() + \"-\" + ngay.toString();\nvar date_2 = year.toString() + \"-\" + month.toString() + \"-\" + ngay_1.toString();\nvar time = hour.toString() + \":\" + min.toString();\n\nmsg = {};\nmsg.muc_nuoc = muc_nuoc;\nmsg.luu_luong = luu_luong;\nmsg.luu_luong_tong = luu_luong_tong;\nmsg.tong_ngay = tong_ngay;\nmsg.status_flow = status_flow;\nmsg.status_level = status_level;\nif (time == \"0:00\") {\n    msg.thoi_gian = date_2 + \" \" + time;\n}\nelse \n{\n    msg.thoi_gian = date_1 + \" \" + time;\n}\nreturn msg;\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 200,
        "wires": [
            [
                "08fd675f7e3aa4b9"
            ]
        ]
    },
    {
        "id": "06e2d1a1c0ee1133",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "data g3",
        "func": "var payload = msg.payload;\nvar muc_nuoc = global.get(\"level_3\");\nvar luu_luong = global.get(\"flow_3\");\nvar luu_luong_tong = global.get(\"total_3\");\nvar status_flow = global.get(\"status_flow_3\");\nvar status_level = global.get(\"status_level_3\");\nvar tong_ngay = global.get(\"tong_ngay_3\");\nif (muc_nuoc == null || muc_nuoc == undefined || isNaN(muc_nuoc)) \n{\n    muc_nuoc = 0;\n}\nif (luu_luong == null || luu_luong == undefined || isNaN(luu_luong)) \n{\n    luu_luong = 0;\n}\nif (luu_luong_tong == null || luu_luong_tong == undefined || isNaN(luu_luong_tong))\n{\n    luu_luong_tong = 0;\n}\nif (status_flow == null || status_flow == undefined || isNaN(status_flow)) \n{\n    status_flow = 0;\n}\nif (status_level == null || status_level == undefined || isNaN(status_level)) \n{\n    status_level = 0;\n}\nif (tong_ngay == null || tong_ngay == undefined || isNaN(tong_ngay)) \n{\n    tong_ngay = 0;\n}\nvar now = new Date();\nnow.setHours(now.getHours());\nvar year = now.getFullYear();\nvar month = now.getMonth() < 10 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1);\nvar day = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar ngay = parseInt(day);\nvar ngay_1 = parseInt(day) - 1;\nif (ngay_1 == 0)\n{\n    ngay_1 = 1;\n}\nvar hour = now.getHours();\n//var hour = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar min = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\n\nglobal.set('year', year);\nglobal.set('month', month);\nglobal.set('day', day);\nglobal.set('hour', hour);\nglobal.set('min', min);\n\nvar date_1 = year.toString() + \"-\" + month.toString() + \"-\" + ngay.toString();\nvar date_2 = year.toString() + \"-\" + month.toString() + \"-\" + ngay_1.toString();\nvar time = hour.toString() + \":\" + min.toString();\n\nmsg = {};\nmsg.muc_nuoc = muc_nuoc;\nmsg.luu_luong = luu_luong;\nmsg.luu_luong_tong = luu_luong_tong;\nmsg.tong_ngay = tong_ngay;\nmsg.status_flow = status_flow;\nmsg.status_level = status_level;\nif (time == \"0:00\") {\n    msg.thoi_gian = date_2 + \" \" + time;\n}\nelse \n{\n    msg.thoi_gian = date_1 + \" \" + time;\n}\nreturn msg;\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 160,
        "wires": [
            [
                "755149ba331a6727"
            ]
        ]
    },
    {
        "id": "6457bda4d21241e0",
        "type": "sqlstring-format",
        "z": "a67c9cf64cd6a481",
        "name": "insert_data g5",
        "query": "INSERT INTO `g5`(`muc_nuoc`,`luu_luong`,`luu_luong_tong`,`status_flow`,`status_level`,`tong_ngay`,`thoi_gian`) VALUES (?,?,?,?,?,?,?);\n",
        "vars": "muc_nuoc,luu_luong,luu_luong_tong,status_flow,status_level,tong_ngay,thoi_gian",
        "outField": "topic",
        "x": 600,
        "y": 240,
        "wires": [
            [
                "1ed6f0df8e9c327b"
            ]
        ]
    },
    {
        "id": "559415f74856dc16",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "data g5",
        "func": "var payload = msg.payload;\nvar muc_nuoc = global.get(\"level_5\");\nvar luu_luong = global.get(\"flow_5\");\nvar luu_luong_tong = global.get(\"total_5\");\nvar status_flow = global.get(\"status_flow_5\");\nvar status_level = global.get(\"status_level_5\");\nvar tong_ngay = global.get(\"tong_ngay_5\");\nif (muc_nuoc == null || muc_nuoc == undefined || isNaN(muc_nuoc)) \n{\n    muc_nuoc = 0;\n}\nif (luu_luong == null || luu_luong == undefined || isNaN(luu_luong)) \n{\n    luu_luong = 0;\n}\nif (luu_luong_tong == null || luu_luong_tong == undefined || isNaN(luu_luong_tong))\n{\n    luu_luong_tong = 0;\n}\nif (status_flow == null || status_flow == undefined || isNaN(status_flow)) \n{\n    status_flow = 0;\n}\nif (status_level == null || status_level == undefined || isNaN(status_level)) \n{\n    status_level = 0;\n}\nif (tong_ngay == null || tong_ngay == undefined || isNaN(tong_ngay)) \n{\n    tong_ngay = 0;\n}\nvar now = new Date();\nnow.setHours(now.getHours());\nvar year = now.getFullYear();\nvar month = now.getMonth() < 10 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1);\nvar day = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar ngay = parseInt(day);\nvar ngay_1 = parseInt(day) - 1;\nif (ngay_1 == 0)\n{\n    ngay_1 = 1;\n}\nvar hour = now.getHours();\n//var hour = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar min = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\n\nglobal.set('year', year);\nglobal.set('month', month);\nglobal.set('day', day);\nglobal.set('hour', hour);\nglobal.set('min', min);\n\nvar date_1 = year.toString() + \"-\" + month.toString() + \"-\" + ngay.toString();\nvar date_2 = year.toString() + \"-\" + month.toString() + \"-\" + ngay_1.toString();\nvar time = hour.toString() + \":\" + min.toString();\n\nmsg = {};\nmsg.muc_nuoc = muc_nuoc;\nmsg.luu_luong = luu_luong;\nmsg.luu_luong_tong = luu_luong_tong;\nmsg.tong_ngay = tong_ngay;\nmsg.status_flow = status_flow;\nmsg.status_level = status_level;\nif (time == \"0:00\") {\n    msg.thoi_gian = date_2 + \" \" + time;\n}\nelse \n{\n    msg.thoi_gian = date_1 + \" \" + time;\n}\nreturn msg;\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 240,
        "wires": [
            [
                "6457bda4d21241e0"
            ]
        ]
    },
    {
        "id": "11d6b7a1ade13a5c",
        "type": "sqlstring-format",
        "z": "a67c9cf64cd6a481",
        "name": "insert_data g6",
        "query": "INSERT INTO `g6`(`muc_nuoc`,`luu_luong`,`luu_luong_tong`,`status_flow`,`status_level`,`tong_ngay`,`thoi_gian`) VALUES (?,?,?,?,?,?,?);\n",
        "vars": "muc_nuoc,luu_luong,luu_luong_tong,status_flow,status_level,tong_ngay,thoi_gian",
        "outField": "topic",
        "x": 600,
        "y": 280,
        "wires": [
            [
                "1ed6f0df8e9c327b"
            ]
        ]
    },
    {
        "id": "87d64d6df5a98f1a",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "data g6",
        "func": "var payload = msg.payload;\nvar muc_nuoc = global.get(\"level_6\");\nvar luu_luong = global.get(\"flow_6\");\nvar luu_luong_tong = global.get(\"total_6\");\nvar status_flow = global.get(\"status_flow_6\");\nvar status_level = global.get(\"status_level_6\");\nvar tong_ngay = global.get(\"tong_ngay_6\");\nif (muc_nuoc == null || muc_nuoc == undefined || isNaN(muc_nuoc)) \n{\n    muc_nuoc = 0;\n}\nif (luu_luong == null || luu_luong == undefined || isNaN(luu_luong)) \n{\n    luu_luong = 0;\n}\nif (luu_luong_tong == null || luu_luong_tong == undefined || isNaN(luu_luong_tong))\n{\n    luu_luong_tong = 0;\n}\nif (status_flow == null || status_flow == undefined || isNaN(status_flow)) \n{\n    status_flow = 0;\n}\nif (status_level == null || status_level == undefined || isNaN(status_level)) \n{\n    status_level = 0;\n}\nif (tong_ngay == null || tong_ngay == undefined || isNaN(tong_ngay)) \n{\n    tong_ngay = 0;\n}\nvar now = new Date();\nnow.setHours(now.getHours());\nvar year = now.getFullYear();\nvar month = now.getMonth() < 10 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1);\nvar day = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar ngay = parseInt(day);\nvar ngay_1 = parseInt(day) - 1;\nif (ngay_1 == 0)\n{\n    ngay_1 = 1;\n}\nvar hour = now.getHours();\n//var hour = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar min = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\n\nglobal.set('year', year);\nglobal.set('month', month);\nglobal.set('day', day);\nglobal.set('hour', hour);\nglobal.set('min', min);\n\nvar date_1 = year.toString() + \"-\" + month.toString() + \"-\" + ngay.toString();\nvar date_2 = year.toString() + \"-\" + month.toString() + \"-\" + ngay_1.toString();\nvar time = hour.toString() + \":\" + min.toString();\n\nmsg = {};\nmsg.muc_nuoc = muc_nuoc;\nmsg.luu_luong = luu_luong;\nmsg.luu_luong_tong = luu_luong_tong;\nmsg.tong_ngay = tong_ngay;\nmsg.status_flow = status_flow;\nmsg.status_level = status_level;\nif (time == \"0:00\") {\n    msg.thoi_gian = date_2 + \" \" + time;\n}\nelse \n{\n    msg.thoi_gian = date_1 + \" \" + time;\n}\nreturn msg;\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 280,
        "wires": [
            [
                "11d6b7a1ade13a5c"
            ]
        ]
    },
    {
        "id": "1c7809de1d26e930",
        "type": "sqlstring-format",
        "z": "a67c9cf64cd6a481",
        "name": "insert_data g7",
        "query": "INSERT INTO `g7`(`muc_nuoc`,`luu_luong`,`luu_luong_tong`,`status_flow`,`status_level`,`tong_ngay`,`thoi_gian`) VALUES (?,?,?,?,?,?,?);\n",
        "vars": "muc_nuoc,luu_luong,luu_luong_tong,status_flow,status_level,tong_ngay,thoi_gian",
        "outField": "topic",
        "x": 600,
        "y": 320,
        "wires": [
            [
                "1ed6f0df8e9c327b"
            ]
        ]
    },
    {
        "id": "4d89406cbcbd3593",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "data g7",
        "func": "var payload = msg.payload;\nvar muc_nuoc = global.get(\"level_7\");\nvar luu_luong = global.get(\"flow_7\");\nvar luu_luong_tong = global.get(\"total_7\");\nvar status_flow = global.get(\"status_flow_7\");\nvar status_level = global.get(\"status_level_7\");\nvar tong_ngay = global.get(\"tong_ngay_7\");\nif (muc_nuoc == null || muc_nuoc == undefined || isNaN(muc_nuoc)) \n{\n    muc_nuoc = 0;\n}\nif (luu_luong == null || luu_luong == undefined || isNaN(luu_luong)) \n{\n    luu_luong = 0;\n}\nif (luu_luong_tong == null || luu_luong_tong == undefined || isNaN(luu_luong_tong))\n{\n    luu_luong_tong = 0;\n}\nif (status_flow == null || status_flow == undefined || isNaN(status_flow)) \n{\n    status_flow = 0;\n}\nif (status_level == null || status_level == undefined || isNaN(status_level)) \n{\n    status_level = 0;\n}\nif (tong_ngay == null || tong_ngay == undefined || isNaN(tong_ngay)) \n{\n    tong_ngay = 0;\n}\nvar now = new Date();\nnow.setHours(now.getHours());\nvar year = now.getFullYear();\nvar month = now.getMonth() < 10 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1);\nvar day = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar ngay = parseInt(day);\nvar ngay_1 = parseInt(day) - 1;\nif (ngay_1 == 0)\n{\n    ngay_1 = 1;\n}\nvar hour = now.getHours();\n//var hour = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar min = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\n\nglobal.set('year', year);\nglobal.set('month', month);\nglobal.set('day', day);\nglobal.set('hour', hour);\nglobal.set('min', min);\n\nvar date_1 = year.toString() + \"-\" + month.toString() + \"-\" + ngay.toString();\nvar date_2 = year.toString() + \"-\" + month.toString() + \"-\" + ngay_1.toString();\nvar time = hour.toString() + \":\" + min.toString();\n\nmsg = {};\nmsg.muc_nuoc = muc_nuoc;\nmsg.luu_luong = luu_luong;\nmsg.luu_luong_tong = luu_luong_tong;\nmsg.tong_ngay = tong_ngay;\nmsg.status_flow = status_flow;\nmsg.status_level = status_level;\nif (time == \"0:00\") {\n    msg.thoi_gian = date_2 + \" \" + time;\n}\nelse \n{\n    msg.thoi_gian = date_1 + \" \" + time;\n}\nreturn msg;\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 320,
        "wires": [
            [
                "1c7809de1d26e930"
            ]
        ]
    },
    {
        "id": "1ed6f0df8e9c327b",
        "type": "mysql",
        "z": "a67c9cf64cd6a481",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 860,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "79f4d62d2be206d7",
        "type": "cronplus",
        "z": "a67c9cf64cd6a481",
        "name": "Check on 00:00",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "00 00 00 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 200,
        "y": 440,
        "wires": [
            [
                "f589d86141d377fb",
                "28bd46dd03e8f1b2",
                "58fecb1536f6e4a4"
            ]
        ]
    },
    {
        "id": "ed81e0fa723b34c3",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "get total at 00:00",
        "func": "var payload = msg.payload;\nvar tong_0h_1 = global.get(\"total_1\");\nvar tong_0h_2 = global.get(\"total_2\");\nvar tong_0h_3 = global.get(\"total_3\");\nvar tong_0h_4 = global.get(\"total_4\");\nvar tong_0h_5 = global.get(\"total_5\");\nvar tong_0h_6 = global.get(\"total_6\");\nvar tong_0h_7 = global.get(\"total_7\");\nif (tong_0h_1 == null || tong_0h_1 == undefined || isNaN(tong_0h_1)) \n{\n    tong_0h_1 = 0;\n}\nif (tong_0h_2 == null || tong_0h_2 == undefined || isNaN(tong_0h_2)) \n{\n    tong_0h_2 = 0;\n}\nif (tong_0h_3 == null || tong_0h_3 == undefined || isNaN(tong_0h_3)) \n{\n    tong_0h_3 = 0;\n}\nif (tong_0h_4 == null || tong_0h_4 == undefined || isNaN(tong_0h_4)) \n{\n    tong_0h_4 = 0;\n}\nif (tong_0h_5 == null || tong_0h_5 == undefined || isNaN(tong_0h_5)) \n{\n    tong_0h_5 = 0;\n}\nif (tong_0h_6 == null || tong_0h_6 == undefined || isNaN(tong_0h_6)) \n{\n    tong_0h_6 = 0;\n}\nif (tong_0h_7 == null || tong_0h_7 == undefined || isNaN(tong_0h_7)) \n{\n    tong_0h_7 = 0;\n}\nmsg = {};\nmsg.tong_0h_g1 = tong_0h_1;\nmsg.tong_0h_g2 = tong_0h_2;\nmsg.tong_0h_g3 = tong_0h_3;\nmsg.tong_0h_g4 = tong_0h_4;\nmsg.tong_0h_g5 = tong_0h_5;\nmsg.tong_0h_g6 = tong_0h_6;\nmsg.tong_0h_g7 = tong_0h_7;\nreturn msg;\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 480,
        "wires": [
            [
                "e381f7ec02ce4241"
            ]
        ]
    },
    {
        "id": "28bd46dd03e8f1b2",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "get total day at 00:00",
        "func": "//var payload = msg.payload;\nvar check_tong0h_g1 = global.get(\"tong_0h_g1_sql\");\nvar check_tong0h_g2 = global.get(\"tong_0h_g2_sql\");\nvar check_tong0h_g3 = global.get(\"tong_0h_g3_sql\");\nvar check_tong0h_g4 = global.get(\"tong_0h_g4_sql\");\nvar check_tong0h_g5 = global.get(\"tong_0h_g5_sql\");\nvar check_tong0h_g6 = global.get(\"tong_0h_g6_sql\");\nvar check_tong0h_g7 = global.get(\"tong_0h_g7_sql\");\n\nvar tong_now_g1 = global.get(\"total_1\");\nvar tong_now_g2 = global.get(\"total_2\");\nvar tong_now_g3 = global.get(\"total_3\");\nvar tong_now_g4 = global.get(\"total_4\");\nvar tong_now_g5 = global.get(\"total_5\");\nvar tong_now_g6 = global.get(\"total_6\");\nvar tong_now_g7 = global.get(\"total_7\");\n\nvar tong_ngay_0h_g1 = (tong_now_g1 - check_tong0h_g1);\nvar tong_ngay_0h_g2 = (tong_now_g2 - check_tong0h_g2);\nvar tong_ngay_0h_g3 = (tong_now_g3 - check_tong0h_g3);\nvar tong_ngay_0h_g4 = (tong_now_g4 - check_tong0h_g4);\nvar tong_ngay_0h_g5 = (tong_now_g5 - check_tong0h_g5);\nvar tong_ngay_0h_g6 = (tong_now_g6 - check_tong0h_g6);\nvar tong_ngay_0h_g7 = (tong_now_g7 - check_tong0h_g7);\nif (tong_ngay_0h_g1 == null || tong_ngay_0h_g1 == undefined || isNaN(tong_ngay_0h_g1)) \n{\n    tong_ngay_0h_g1 = 0;\n}\nif (tong_ngay_0h_g2 == null || tong_ngay_0h_g2 == undefined || isNaN(tong_ngay_0h_g2)) \n{\n    tong_ngay_0h_g2 = 0;\n}\nif (tong_ngay_0h_g3 == null || tong_ngay_0h_g3 == undefined || isNaN(tong_ngay_0h_g3)) \n{\n    tong_ngay_0h_g3 = 0;\n}\nif (tong_ngay_0h_g4 == null || tong_ngay_0h_g4 == undefined || isNaN(tong_ngay_0h_g4)) \n{\n    tong_ngay_0h_g4 = 0;\n}\nif (tong_ngay_0h_g5 == null || tong_ngay_0h_g5 == undefined || isNaN(tong_ngay_0h_g5)) \n{\n    tong_ngay_0h_g5 = 0;\n}\nif (tong_ngay_0h_g6 == null || tong_ngay_0h_g6 == undefined || isNaN(tong_ngay_0h_g6)) \n{\n    tong_ngay_0h_g6 = 0;\n}\nif (tong_ngay_0h_g7 == null || tong_ngay_0h_g7 == undefined || isNaN(tong_ngay_0h_g7)) \n{\n    tong_ngay_0h_g7 = 0;\n}\nglobal.set(\"tong_ngay_1\", tong_ngay_0h_g1);\nglobal.set(\"tong_ngay_2\", tong_ngay_0h_g2);\nglobal.set(\"tong_ngay_3\", tong_ngay_0h_g3);\nglobal.set(\"tong_ngay_4\", tong_ngay_0h_g4);\nglobal.set(\"tong_ngay_5\", tong_ngay_0h_g5);\nglobal.set(\"tong_ngay_6\", tong_ngay_0h_g6);\nglobal.set(\"tong_ngay_7\", tong_ngay_0h_g7);\n\n// thoi gian - 1 ngày\nvar now = new Date();\nnow.setHours(now.getHours());\nvar year = now.getFullYear();\nvar month = now.getMonth() < 10 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1);\nvar day = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar ngay = parseInt(day);\nvar hour = now.getHours();\n//var hour = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar min = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\n\nglobal.set('year', year);\nglobal.set('month', month);\nglobal.set('day', day);\nglobal.set('hour', hour);\nglobal.set('min', min);\n\nvar date =  year.toString()+ \"-\" + month.toString() + \"-\" + ngay.toString();\nvar time = hour.toString() + \":\" + min.toString();\nmsg = {};\nmsg.tong_ngay_0h_g1 = tong_ngay_0h_g1;\nmsg.tong_ngay_0h_g2 = tong_ngay_0h_g2;\nmsg.tong_ngay_0h_g3 = tong_ngay_0h_g3;\nmsg.tong_ngay_0h_g4 = tong_ngay_0h_g4;\nmsg.tong_ngay_0h_g5 = tong_ngay_0h_g5;\nmsg.tong_ngay_0h_g6 = tong_ngay_0h_g6;\nmsg.tong_ngay_0h_g7 = tong_ngay_0h_g7;\nmsg.thoi_gian = date;\nreturn msg;\n\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 420,
        "wires": [
            [
                "e2b30ff79ffe557c"
            ]
        ]
    },
    {
        "id": "e2b30ff79ffe557c",
        "type": "sqlstring-format",
        "z": "a67c9cf64cd6a481",
        "name": "insert_data tong_ngay_0h",
        "query": "INSERT INTO `tong_ngay_0h`(`tong_ngay_0h_g1`,`tong_ngay_0h_g2`,`tong_ngay_0h_g3`,`tong_ngay_0h_g4`,`tong_ngay_0h_g5`,`tong_ngay_0h_g6`,`tong_ngay_0h_g7`,`thoi_gian`) VALUES (?,?,?,?,?,?,?,?);\n\n",
        "vars": "tong_ngay_0h_g1,tong_ngay_0h_g2,tong_ngay_0h_g3,tong_ngay_0h_g4,tong_ngay_0h_g5,tong_ngay_0h_g6,tong_ngay_0h_g7,thoi_gian",
        "outField": "topic",
        "x": 710,
        "y": 420,
        "wires": [
            [
                "385bfadd32c7a96e"
            ]
        ]
    },
    {
        "id": "385bfadd32c7a96e",
        "type": "mysql",
        "z": "a67c9cf64cd6a481",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1000,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "f589d86141d377fb",
        "type": "delay",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 420,
        "y": 480,
        "wires": [
            [
                "ed81e0fa723b34c3"
            ]
        ]
    },
    {
        "id": "e381f7ec02ce4241",
        "type": "sqlstring-format",
        "z": "a67c9cf64cd6a481",
        "name": "insert_data tong_0h",
        "query": "INSERT INTO `tong_0h`(`tong_0h_g1`,`tong_0h_g2`,`tong_0h_g3`,`tong_0h_g4`,`tong_0h_g5`,`tong_0h_g6`,`tong_0h_g7`,`thoi_gian`) VALUES (?,?,?,?,?,?,?,  date_format(now(),'%Y-%m-%d %H:%i'));\n\n",
        "vars": "tong_0h_g1,tong_0h_g2,tong_0h_g3,tong_0h_g4,tong_0h_g5,tong_0h_g6,tong_0h_g7",
        "outField": "topic",
        "x": 840,
        "y": 480,
        "wires": [
            [
                "385bfadd32c7a96e"
            ]
        ]
    },
    {
        "id": "e2cdb6ad17bca79c",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "func": "msg.topic =\"SELECT * FROM \"+msg.payload+\" ORDER BY `thoi_gian` DESC, `id` DESC LIMIT 1\";\nmsg.data = msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 520,
        "wires": [
            [
                "65ecea6785e2e519"
            ]
        ]
    },
    {
        "id": "566f7f6dad02b48c",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "check_table_tong_0h",
        "func": "var ten_table =\n[\n'tong_0h'\n]\n\nmsg.payload = ten_table;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 520,
        "wires": [
            [
                "1e08311e994c81d4"
            ]
        ]
    },
    {
        "id": "1e08311e994c81d4",
        "type": "split",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 580,
        "y": 520,
        "wires": [
            [
                "3e69154244cb154c"
            ]
        ]
    },
    {
        "id": "3e69154244cb154c",
        "type": "delay",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 750,
        "y": 520,
        "wires": [
            [
                "e2cdb6ad17bca79c"
            ]
        ]
    },
    {
        "id": "882bf2f486706586",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "get_sql: tong_0h",
        "func": "if (msg.payload.length >= 1)\n{\n    global.set(\"tong_0h_g1_sql\", msg.payload[0].tong_0h_g1);\n    global.set(\"tong_0h_g2_sql\", msg.payload[0].tong_0h_g2);\n    global.set(\"tong_0h_g3_sql\", msg.payload[0].tong_0h_g3);\n    global.set(\"tong_0h_g4_sql\", msg.payload[0].tong_0h_g4);\n    global.set(\"tong_0h_g5_sql\", msg.payload[0].tong_0h_g5);\n    global.set(\"tong_0h_g6_sql\", msg.payload[0].tong_0h_g6);\n    global.set(\"tong_0h_g7_sql\", msg.payload[0].tong_0h_g7);\n\n}\nmsg = {};\nmsg.tong_at_0h_g1 = global.get(\"tong_0h_g1_sql\");\nmsg.tong_at_0h_g2 = global.get(\"tong_0h_g2_sql\");\nmsg.tong_at_0h_g3 = global.get(\"tong_0h_g3_sql\");\nmsg.tong_at_0h_g4 = global.get(\"tong_0h_g4_sql\");\nmsg.tong_at_0h_g5 = global.get(\"tong_0h_g5_sql\");\nmsg.tong_at_0h_g6 = global.get(\"tong_0h_g6_sql\");\nmsg.tong_at_0h_g7 = global.get(\"tong_0h_g7_sql\");\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "65ecea6785e2e519",
        "type": "mysql",
        "z": "a67c9cf64cd6a481",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1070,
        "y": 520,
        "wires": [
            [
                "882bf2f486706586"
            ]
        ]
    },
    {
        "id": "1e18317729c61719",
        "type": "inject",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "props": [],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 520,
        "wires": [
            [
                "566f7f6dad02b48c"
            ]
        ]
    },
    {
        "id": "7b1ef61d343046cc",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Level_G1",
        "func": "\nvar muc_nuoc = global.get(\"level_1\")*100;\nmsg = {}\nmsg.payload = [muc_nuoc];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 620,
        "wires": [
            [
                "ca478ecc76386214"
            ]
        ]
    },
    {
        "id": "ca478ecc76386214",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Level_G1",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address': 0,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 620,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "68651bb865ded11c",
        "type": "modbus-flex-write",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "4c58219f31dcb60d",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1350,
        "y": 1180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "0284a09590a5f59b",
        "type": "cronplus",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */1 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 100,
        "y": 1180,
        "wires": [
            [
                "7b1ef61d343046cc",
                "a13176e47b9c4112",
                "f505527a206f2606",
                "18a6f3664671486f",
                "4730e5ed5f1c01af",
                "06c837dc06471f27",
                "fda6ef579232d015",
                "a3bfde30dbbad778",
                "d8ed37d616220c60",
                "0c9e6924a853fea4",
                "a8bb3473b1cfe421",
                "08f0c9d0dcb98f9b",
                "952e0d226090027e",
                "48157acabcd7347b",
                "73a28f4e20039f72",
                "fa15dbe41bf0f2fc",
                "b92d9bc7c6a41fc2",
                "70d435d5e7b43123",
                "fc8c922718ab60be",
                "89e5408469019e4a",
                "1fa333b019f56ebf",
                "8bf8703bbefca2ba",
                "6dc4f78d1bf41929",
                "20e9a2f7291c7b9d",
                "9e61f43229f15744",
                "88ea16c1e6a767bb",
                "556cda4f8e4fdfb6",
                "78252be637296551"
            ]
        ]
    },
    {
        "id": "6cb0041fca8e376e",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Flow_G1",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address': 1,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 660,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "cf30435ded9a6b46",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC16_Write_Total_G1",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 16,\n    'unitid': 1,\n    'address': 2,\n    'quantity':2\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 700,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "a13176e47b9c4112",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Flow_G1",
        "func": "var luu_luong = global.get(\"flow_1\")*100;\nmsg = {}\nmsg.payload = [luu_luong];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 660,
        "wires": [
            [
                "6cb0041fca8e376e"
            ]
        ]
    },
    {
        "id": "f505527a206f2606",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Total_G1",
        "func": "var luu_luong_tong = global.get(\"total_1\");\nmsg = {}\nmsg.payload = [luu_luong_tong];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 700,
        "wires": [
            [
                "b46ccf023ddf252b"
            ]
        ]
    },
    {
        "id": "18a6f3664671486f",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Level_G2",
        "func": "\nvar muc_nuoc = global.get(\"level_2\")*100;\nmsg = {}\nmsg.payload = [muc_nuoc];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 760,
        "wires": [
            [
                "4691694557088903"
            ]
        ]
    },
    {
        "id": "4691694557088903",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Level_G2",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address': 4,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 760,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "b558a71361b57738",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Flow_G2",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address': 5,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 800,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "ae65202923310d8f",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC16_Write_Total_G2",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 16,\n    'unitid': 1,\n    'address': 6,\n    'quantity':2\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 840,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "4730e5ed5f1c01af",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Flow_G2",
        "func": "var luu_luong = global.get(\"flow_2\")*100;\nmsg = {}\nmsg.payload = [luu_luong];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 800,
        "wires": [
            [
                "b558a71361b57738"
            ]
        ]
    },
    {
        "id": "06c837dc06471f27",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Total_G2",
        "func": "var luu_luong_tong = global.get(\"total_2\");\nmsg = {}\nmsg.payload = [luu_luong_tong];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 840,
        "wires": [
            [
                "39a022fdef65f781"
            ]
        ]
    },
    {
        "id": "fda6ef579232d015",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Level_G3",
        "func": "\nvar muc_nuoc = global.get(\"level_3\")*100;\nmsg = {}\nmsg.payload = [muc_nuoc];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 900,
        "wires": [
            [
                "a8568537fccb2c40"
            ]
        ]
    },
    {
        "id": "a8568537fccb2c40",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Level_G3",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address': 8,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 900,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "599d87a44670cf4d",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Flow_G3",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address': 9,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 940,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "bd35974f400ebbb6",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC16_Write_Total_G3",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 16,\n    'unitid': 1,\n    'address': 10,\n    'quantity':2\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 980,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "a3bfde30dbbad778",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Flow_G3",
        "func": "var luu_luong = global.get(\"flow_3\")*100;\nmsg = {}\nmsg.payload = [luu_luong];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 940,
        "wires": [
            [
                "599d87a44670cf4d"
            ]
        ]
    },
    {
        "id": "d8ed37d616220c60",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Total_G3",
        "func": "var luu_luong_tong = global.get(\"total_3\");\nmsg = {}\nmsg.payload = [luu_luong_tong];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 980,
        "wires": [
            [
                "b2e6f6b8af40334a"
            ]
        ]
    },
    {
        "id": "0c9e6924a853fea4",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Level_G4",
        "func": "\nvar muc_nuoc = global.get(\"level_4\")*100;\nmsg = {}\nmsg.payload = [muc_nuoc];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1040,
        "wires": [
            [
                "7f7827838ec704f1"
            ]
        ]
    },
    {
        "id": "7f7827838ec704f1",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Level_G4",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address':12,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1040,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "c1a98f55ed63a85a",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Flow_G4",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address': 13,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1080,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "753cbe6d408b7695",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC16_Write_Total_G4",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 16,\n    'unitid': 1,\n    'address': 14,\n    'quantity':2\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1120,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "a8bb3473b1cfe421",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Flow_G4",
        "func": "var luu_luong = global.get(\"flow_4\")*100;\nmsg = {}\nmsg.payload = [luu_luong];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1080,
        "wires": [
            [
                "c1a98f55ed63a85a"
            ]
        ]
    },
    {
        "id": "08f0c9d0dcb98f9b",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Total_G4",
        "func": "var luu_luong_tong = global.get(\"total_4\");\nmsg = {}\nmsg.payload = [luu_luong_tong];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1120,
        "wires": [
            [
                "88b43d766f5b32ca"
            ]
        ]
    },
    {
        "id": "952e0d226090027e",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Level_G5",
        "func": "\nvar muc_nuoc = global.get(\"level_5\")*100;\nmsg = {}\nmsg.payload = [muc_nuoc];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1180,
        "wires": [
            [
                "a8f7873ae14e25ef"
            ]
        ]
    },
    {
        "id": "a8f7873ae14e25ef",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Level_G5",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address':16,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1180,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "7dc6084da31df7e0",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Flow_G5",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address': 17,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1220,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "7a0c73433366bd02",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC16_Write_Total_G5",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 16,\n    'unitid': 1,\n    'address': 18,\n    'quantity':2\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1260,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "48157acabcd7347b",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Flow_G5",
        "func": "var luu_luong = global.get(\"flow_5\")*100;\nmsg = {}\nmsg.payload = [luu_luong];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1220,
        "wires": [
            [
                "7dc6084da31df7e0"
            ]
        ]
    },
    {
        "id": "73a28f4e20039f72",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Total_G5",
        "func": "var luu_luong_tong = global.get(\"total_5\");\nmsg = {}\nmsg.payload = [luu_luong_tong];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1260,
        "wires": [
            [
                "a772816aa8bbcfc7"
            ]
        ]
    },
    {
        "id": "fa15dbe41bf0f2fc",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Level_G6",
        "func": "\nvar muc_nuoc = global.get(\"level_6\")*100;\nmsg = {}\nmsg.payload = [muc_nuoc];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1320,
        "wires": [
            [
                "e20bcbd9665d4e77"
            ]
        ]
    },
    {
        "id": "e20bcbd9665d4e77",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Level_G6",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address':20,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1320,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "b0cc068160c48043",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Flow_G6",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address': 21,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1360,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "a4c5e7d5caaf83bf",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC16_Write_Total_G6",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 16,\n    'unitid': 1,\n    'address': 22,\n    'quantity':2\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1400,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "b92d9bc7c6a41fc2",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Flow_G6",
        "func": "var luu_luong = global.get(\"flow_6\")*100;\nmsg = {}\nmsg.payload = [luu_luong];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1360,
        "wires": [
            [
                "b0cc068160c48043"
            ]
        ]
    },
    {
        "id": "70d435d5e7b43123",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Total_G6",
        "func": "var luu_luong_tong = global.get(\"total_6\");\nmsg = {}\nmsg.payload = [luu_luong_tong];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1400,
        "wires": [
            [
                "26ce5925a63a2d6a"
            ]
        ]
    },
    {
        "id": "fc8c922718ab60be",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Level_G7",
        "func": "\nvar muc_nuoc = global.get(\"level_7\")*100;\nmsg = {}\nmsg.payload = [muc_nuoc];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1460,
        "wires": [
            [
                "842ebff7711967f9"
            ]
        ]
    },
    {
        "id": "842ebff7711967f9",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Level_G7",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address':24,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1460,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "8884f00d1742f243",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Flow_G7",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address': 25,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1500,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "c390b8f274ca350d",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC16_Write_Total_G7",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 16,\n    'unitid': 1,\n    'address': 26,\n    'quantity':2\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1540,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "89e5408469019e4a",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Flow_G7",
        "func": "var luu_luong = global.get(\"flow_7\")*100;\nmsg = {}\nmsg.payload = [luu_luong];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1500,
        "wires": [
            [
                "8884f00d1742f243"
            ]
        ]
    },
    {
        "id": "1fa333b019f56ebf",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Total_G7",
        "func": "var luu_luong_tong = global.get(\"total_7\");\nmsg = {}\nmsg.payload = [luu_luong_tong];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1540,
        "wires": [
            [
                "4210301a683165dd"
            ]
        ]
    },
    {
        "id": "b46ccf023ddf252b",
        "type": "buffer-maker",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "item1",
                "type": "uint32le",
                "length": 1,
                "dataType": "msg",
                "data": "payload"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 630,
        "y": 700,
        "wires": [
            [
                "c2ba5487f03a473e"
            ]
        ]
    },
    {
        "id": "39a022fdef65f781",
        "type": "buffer-maker",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "item1",
                "type": "uint32le",
                "length": 1,
                "dataType": "msg",
                "data": "payload"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 630,
        "y": 840,
        "wires": [
            [
                "258e7bcc9ba0c7a1"
            ]
        ]
    },
    {
        "id": "b2e6f6b8af40334a",
        "type": "buffer-maker",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "item1",
                "type": "uint32le",
                "length": 1,
                "dataType": "msg",
                "data": "payload"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 630,
        "y": 980,
        "wires": [
            [
                "a31f97d457a37e44"
            ]
        ]
    },
    {
        "id": "88b43d766f5b32ca",
        "type": "buffer-maker",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "item1",
                "type": "uint32le",
                "length": 1,
                "dataType": "msg",
                "data": "payload"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 630,
        "y": 1120,
        "wires": [
            [
                "c0c40368a2ed4727"
            ]
        ]
    },
    {
        "id": "a772816aa8bbcfc7",
        "type": "buffer-maker",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "item1",
                "type": "uint32le",
                "length": 1,
                "dataType": "msg",
                "data": "payload"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 630,
        "y": 1260,
        "wires": [
            [
                "20386ade2790d7ec"
            ]
        ]
    },
    {
        "id": "26ce5925a63a2d6a",
        "type": "buffer-maker",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "item1",
                "type": "uint32le",
                "length": 1,
                "dataType": "msg",
                "data": "payload"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 630,
        "y": 1400,
        "wires": [
            [
                "58095b6923c1bd06"
            ]
        ]
    },
    {
        "id": "4210301a683165dd",
        "type": "buffer-maker",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "item1",
                "type": "uint32le",
                "length": 1,
                "dataType": "msg",
                "data": "payload"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 630,
        "y": 1540,
        "wires": [
            [
                "39406568374f3c81"
            ]
        ]
    },
    {
        "id": "c2ba5487f03a473e",
        "type": "buffer-parser",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16le",
                "name": "data",
                "offset": 0,
                "length": 2,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "output",
        "multipleResult": true,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 790,
        "y": 700,
        "wires": [
            [
                "cf30435ded9a6b46"
            ]
        ]
    },
    {
        "id": "258e7bcc9ba0c7a1",
        "type": "buffer-parser",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16le",
                "name": "data",
                "offset": 0,
                "length": 2,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "output",
        "multipleResult": true,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 790,
        "y": 840,
        "wires": [
            [
                "ae65202923310d8f"
            ]
        ]
    },
    {
        "id": "a31f97d457a37e44",
        "type": "buffer-parser",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16le",
                "name": "data",
                "offset": 0,
                "length": 2,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "output",
        "multipleResult": true,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 790,
        "y": 980,
        "wires": [
            [
                "bd35974f400ebbb6"
            ]
        ]
    },
    {
        "id": "c0c40368a2ed4727",
        "type": "buffer-parser",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16le",
                "name": "data",
                "offset": 0,
                "length": 2,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "output",
        "multipleResult": true,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 790,
        "y": 1120,
        "wires": [
            [
                "753cbe6d408b7695"
            ]
        ]
    },
    {
        "id": "20386ade2790d7ec",
        "type": "buffer-parser",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16le",
                "name": "data",
                "offset": 0,
                "length": 2,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "output",
        "multipleResult": true,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 790,
        "y": 1260,
        "wires": [
            [
                "7a0c73433366bd02"
            ]
        ]
    },
    {
        "id": "58095b6923c1bd06",
        "type": "buffer-parser",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16le",
                "name": "data",
                "offset": 0,
                "length": 2,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "output",
        "multipleResult": true,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 790,
        "y": 1400,
        "wires": [
            [
                "a4c5e7d5caaf83bf"
            ]
        ]
    },
    {
        "id": "39406568374f3c81",
        "type": "buffer-parser",
        "z": "a67c9cf64cd6a481",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "uint16le",
                "name": "data",
                "offset": 0,
                "length": 2,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "output",
        "multipleResult": true,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 790,
        "y": 1540,
        "wires": [
            [
                "c390b8f274ca350d"
            ]
        ]
    },
    {
        "id": "8bf8703bbefca2ba",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Run_G1",
        "func": "\nvar status = global.get(\"status_inverter_1\");\nmsg.payload = [status];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1600,
        "wires": [
            [
                "274bd8b87f9847d8"
            ]
        ]
    },
    {
        "id": "274bd8b87f9847d8",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Run_G1",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address': 40,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1600,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "6dc4f78d1bf41929",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Run_G2",
        "func": "\nvar status = global.get(\"status_inverter_2\");\nmsg.payload = [status];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1640,
        "wires": [
            [
                "920ee87b1df076cb"
            ]
        ]
    },
    {
        "id": "920ee87b1df076cb",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Run_G2",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address': 41,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1640,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "20e9a2f7291c7b9d",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Run_G3",
        "func": "\nvar status = global.get(\"status_inverter_3\");\nmsg.payload = [status];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1680,
        "wires": [
            [
                "bfb8bcaf5f7b3abb"
            ]
        ]
    },
    {
        "id": "bfb8bcaf5f7b3abb",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Run_G3",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address': 42,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1680,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "9e61f43229f15744",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Run_G4",
        "func": "\nvar status = global.get(\"status_inverter_4\");\nmsg.payload = [status];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1720,
        "wires": [
            [
                "f44638ae05a42086"
            ]
        ]
    },
    {
        "id": "f44638ae05a42086",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Run_G4",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address': 43,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1720,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "88ea16c1e6a767bb",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Run_G5",
        "func": "\nvar status = global.get(\"status_inverter_5\");\nmsg.payload = [status];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1760,
        "wires": [
            [
                "f3fa9c22c342ff60"
            ]
        ]
    },
    {
        "id": "f3fa9c22c342ff60",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Run_G5",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address': 44,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1760,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "556cda4f8e4fdfb6",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Run_G6",
        "func": "\nvar status = global.get(\"status_inverter_6\");\nmsg.payload = [status];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1800,
        "wires": [
            [
                "a2101d502baa818b"
            ]
        ]
    },
    {
        "id": "a2101d502baa818b",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Run_G6",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address': 45,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1800,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "78252be637296551",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "modbus tcp_Run_G7",
        "func": "\nvar status = global.get(\"status_inverter_7\");\nmsg.payload = [status];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1840,
        "wires": [
            [
                "7a95a184146fa777"
            ]
        ]
    },
    {
        "id": "7a95a184146fa777",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "FC6_Write_Run_G7",
        "func": "msg.payload = { \n    \n    'value': msg.payload,\n    'fc': 6,\n    'unitid': 1,\n    'address': 46,\n    'quantity':1\n} \nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1840,
        "wires": [
            [
                "68651bb865ded11c"
            ]
        ]
    },
    {
        "id": "f8a2f543ce5d211d",
        "type": "sqlstring-format",
        "z": "a67c9cf64cd6a481",
        "name": "insert_data tong_ngay",
        "query": "INSERT INTO `khai_thac_ngay`(`tong_ngay_kt1`,`tong_ngay_kt2`,`tong_ngay_kt3`,`tong_ngay_kt5`,`tong_ngay_kt7`,`tong_ngay_kt8`,`tong_ngay_kt10`,`thoi_gian`) VALUES (?,?,?,?,?,?,?,?);\n\n",
        "vars": "tong_ngay_kt1,tong_ngay_kt2,tong_ngay_kt3,tong_ngay_kt5,tong_ngay_kt7,tong_ngay_kt8,tong_ngay_kt10,thoi_gian",
        "outField": "topic",
        "x": 700,
        "y": 380,
        "wires": [
            [
                "385bfadd32c7a96e"
            ]
        ]
    },
    {
        "id": "58fecb1536f6e4a4",
        "type": "function",
        "z": "a67c9cf64cd6a481",
        "name": "get total day at 00:00",
        "func": "//var payload = msg.payload;\nvar check_tong0h_g1 = global.get(\"tong_0h_g1_sql\");\nvar check_tong0h_g2 = global.get(\"tong_0h_g2_sql\");\nvar check_tong0h_g3 = global.get(\"tong_0h_g3_sql\");\nvar check_tong0h_g4 = global.get(\"tong_0h_g4_sql\");\nvar check_tong0h_g5 = global.get(\"tong_0h_g5_sql\");\nvar check_tong0h_g6 = global.get(\"tong_0h_g6_sql\");\nvar check_tong0h_g7 = global.get(\"tong_0h_g7_sql\");\n\nvar tong_now_g1 = global.get(\"total_1\");\nvar tong_now_g2 = global.get(\"total_2\");\nvar tong_now_g3 = global.get(\"total_3\");\nvar tong_now_g4 = global.get(\"total_4\");\nvar tong_now_g5 = global.get(\"total_5\");\nvar tong_now_g6 = global.get(\"total_6\");\nvar tong_now_g7 = global.get(\"total_7\");\n\nvar tong_ngay_0h_g1 = (tong_now_g1 - check_tong0h_g1);\nvar tong_ngay_0h_g2 = (tong_now_g2 - check_tong0h_g2);\nvar tong_ngay_0h_g3 = (tong_now_g3 - check_tong0h_g3);\nvar tong_ngay_0h_g4 = (tong_now_g4 - check_tong0h_g4);\nvar tong_ngay_0h_g5 = (tong_now_g5 - check_tong0h_g5);\nvar tong_ngay_0h_g6 = (tong_now_g6 - check_tong0h_g6);\nvar tong_ngay_0h_g7 = (tong_now_g7 - check_tong0h_g7);\nif (tong_ngay_0h_g1 == null || tong_ngay_0h_g1 == undefined || isNaN(tong_ngay_0h_g1)) \n{\n    tong_ngay_0h_g1 = 0;\n}\nif (tong_ngay_0h_g2 == null || tong_ngay_0h_g2 == undefined || isNaN(tong_ngay_0h_g2)) \n{\n    tong_ngay_0h_g2 = 0;\n}\nif (tong_ngay_0h_g3 == null || tong_ngay_0h_g3 == undefined || isNaN(tong_ngay_0h_g3)) \n{\n    tong_ngay_0h_g3 = 0;\n}\nif (tong_ngay_0h_g4 == null || tong_ngay_0h_g4 == undefined || isNaN(tong_ngay_0h_g4)) \n{\n    tong_ngay_0h_g4 = 0;\n}\nif (tong_ngay_0h_g5 == null || tong_ngay_0h_g5 == undefined || isNaN(tong_ngay_0h_g5)) \n{\n    tong_ngay_0h_g5 = 0;\n}\nif (tong_ngay_0h_g6 == null || tong_ngay_0h_g6 == undefined || isNaN(tong_ngay_0h_g6)) \n{\n    tong_ngay_0h_g6 = 0;\n}\nif (tong_ngay_0h_g7 == null || tong_ngay_0h_g7 == undefined || isNaN(tong_ngay_0h_g7)) \n{\n    tong_ngay_0h_g7 = 0;\n}\nglobal.set(\"tong_ngay_1\", tong_ngay_0h_g1);\nglobal.set(\"tong_ngay_2\", tong_ngay_0h_g2);\nglobal.set(\"tong_ngay_3\", tong_ngay_0h_g3);\nglobal.set(\"tong_ngay_4\", tong_ngay_0h_g4);\nglobal.set(\"tong_ngay_5\", tong_ngay_0h_g5);\nglobal.set(\"tong_ngay_6\", tong_ngay_0h_g6);\nglobal.set(\"tong_ngay_7\", tong_ngay_0h_g7);\n\n// thoi gian - 1 ngày\nvar now = new Date();\nnow.setHours(now.getHours());\nvar year = now.getFullYear();\nvar month = now.getMonth() < 10 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1);\nvar day = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar ngay = parseInt(day);\nvar hour = now.getHours();\n//var hour = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar min = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\n\nglobal.set('year', year);\nglobal.set('month', month);\nglobal.set('day', day);\nglobal.set('hour', hour);\nglobal.set('min', min);\n\nvar date =  year.toString()+ \"-\" + month.toString() + \"-\" + ngay.toString();\nvar time = hour.toString() + \":\" + min.toString();\nmsg = {};\nmsg.tong_ngay_kt1 = tong_ngay_0h_g7;\nmsg.tong_ngay_kt2 = tong_ngay_0h_g6;\nmsg.tong_ngay_kt3 = tong_ngay_0h_g2;\nmsg.tong_ngay_kt5 = tong_ngay_0h_g5;\nmsg.tong_ngay_kt7 = tong_ngay_0h_g4;\nmsg.tong_ngay_kt8 = tong_ngay_0h_g6;\nmsg.tong_ngay_kt10 = tong_ngay_0h_g1;\nmsg.thoi_gian = date;\nreturn msg;\n\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 380,
        "wires": [
            [
                "f8a2f543ce5d211d"
            ]
        ]
    },
    {
        "id": "9f09e53521e0f1ab",
        "type": "ui_text_input",
        "z": "361e5c7b7ce31d51",
        "name": "From time",
        "label": "Time",
        "tooltip": "",
        "group": "4b33ac0402b9bf1c",
        "order": 3,
        "width": 8,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": "10",
        "topic": "time",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 680,
        "y": 200,
        "wires": [
            [
                "a4d3c3ca62749e93"
            ]
        ]
    },
    {
        "id": "6850f1feb9ce0308",
        "type": "join",
        "z": "361e5c7b7ce31d51",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "1",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1130,
        "y": 240,
        "wires": [
            [
                "a9316625d3a14e72"
            ]
        ]
    },
    {
        "id": "4bd3c9851450df1b",
        "type": "ui_ui_control",
        "z": "361e5c7b7ce31d51",
        "name": "",
        "events": "change",
        "x": 160,
        "y": 220,
        "wires": [
            [
                "f2dd4392185969ee"
            ]
        ]
    },
    {
        "id": "f2dd4392185969ee",
        "type": "switch",
        "z": "361e5c7b7ce31d51",
        "name": "BP Tab?",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Lich_Su",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 300,
        "y": 220,
        "wires": [
            [
                "36bbb3ab54548f22"
            ]
        ]
    },
    {
        "id": "36bbb3ab54548f22",
        "type": "function",
        "z": "361e5c7b7ce31d51",
        "name": "Time Of Day",
        "func": "//let current_time = convertTZ(new Date(), \"Asia/Jakarta\");\n//var now = Date().toLocaleString('en-US', { timeZone: 'Asia/Jakarta' });\n//let now =  current_time;//// Tue Apr 20 2012 17:10:30 GMT+0700 (Western Indonesia Time)\nlet now = new Date();\n\nlet msg1 = {payload: now}\nlet msg2 = {payload: (now.getTime() - now.getTimezoneOffset()*60000) % (24 * 3600 * 1000)}\nlet msg3 = {topic:'name', payload: 'Gieng1'}\nlet msg4 = {payload: now}\nlet msg5 = {payload: (now.getTime() - now.getTimezoneOffset()*60000) % (24 * 3600 * 1000)}\nreturn [msg1, msg2,msg3,msg4,msg5];\n\nfunction convertTZ(date, tzString) {\n    return new Date((typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {timeZone: tzString}));   \n}\n",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 220,
        "wires": [
            [
                "b8acf4739908dc09"
            ],
            [
                "9f09e53521e0f1ab"
            ],
            [
                "afe4eddc28533ba8"
            ],
            [
                "5f40cc0808110b7e"
            ],
            [
                "2226432d181a92ef"
            ]
        ]
    },
    {
        "id": "b8acf4739908dc09",
        "type": "ui_date_picker",
        "z": "361e5c7b7ce31d51",
        "name": "From date",
        "label": "",
        "group": "4b33ac0402b9bf1c",
        "order": 2,
        "width": 8,
        "height": 1,
        "passthru": true,
        "topic": "date",
        "topicType": "str",
        "className": "",
        "x": 690,
        "y": 160,
        "wires": [
            [
                "3e7efaab8ae16034"
            ]
        ]
    },
    {
        "id": "b8ca0af9a54835f8",
        "type": "function",
        "z": "361e5c7b7ce31d51",
        "name": "Truncate to start of day",
        "func": "msg.payload = Math.floor(msg.payload/(24*3600*1000))*24*3600*1000\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "d9bbcb2d0a0c6a8b",
        "type": "switch",
        "z": "361e5c7b7ce31d51",
        "name": "Submit?",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "form",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 680,
        "y": 400,
        "wires": [
            [
                "e82be5a85be2f2bc"
            ]
        ]
    },
    {
        "id": "ac877f8796d92a66",
        "type": "change",
        "z": "361e5c7b7ce31d51",
        "name": "Clear values",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"rate\":\"\",\"diastolic\":\"\",\"systolic\":\"\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "3fb8ed7c6762ac6c",
        "type": "ui_toast",
        "z": "361e5c7b7ce31d51",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Cancel",
        "cancel": "OK",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1110,
        "y": 340,
        "wires": [
            [
                "976217505dbf4a0d"
            ]
        ]
    },
    {
        "id": "e82be5a85be2f2bc",
        "type": "function",
        "z": "361e5c7b7ce31d51",
        "name": "Prepare for OK/Cancel",
        "func": "let saved = flow.get(\"mychoice\") || {};\n var dt = new Date();\n/*\nvar date = new Date(saved.mytime - 420*60000);\nvar date2 = new Date(saved.mytime2 -420*60000);\nvar tu_ngay = (\"Từ ngày: \"+date.getDate()+\n          \"/\"+(date.getMonth()+1)+\n          \"/\"+date.getFullYear()+\n          \" \"+date.getHours()+\n          \":\"+date.getMinutes());\nvar den_ngay = (\"Đến ngày: \"+date2.getDate()+\n          \"/\"+(date2.getMonth()+1)+\n          \"/\"+date2.getFullYear()+\n          \" \"+date2.getHours()+\n          \":\"+date2.getMinutes());\n          */\nif (saved.mytime<saved.mytime2){\nmsg.payload = `Truy xuất thông tin từ ngày: ${saved.mytime} đến ngày:  ${saved.mytime2}`\nmsg.payloadSaved = saved\nmsg.next = true;\n}else{\nmsg.payload = `Thông tin nhập không hợp lệ :\\n   ${saved.mytime}  ${saved.mytime2}`\n msg.next = false;\n   \n}\nmsg.topic = null\nreturn msg;\n\n\nfunction convertTZ(date, tzString) {\n    return new Date((typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {timeZone: tzString}));   \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 360,
        "wires": [
            [
                "3fb8ed7c6762ac6c"
            ]
        ]
    },
    {
        "id": "976217505dbf4a0d",
        "type": "switch",
        "z": "361e5c7b7ce31d51",
        "name": "OK?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1270,
        "y": 340,
        "wires": [
            [
                "bdd20cbfcfe2b4c2"
            ]
        ]
    },
    {
        "id": "afe4eddc28533ba8",
        "type": "function",
        "z": "361e5c7b7ce31d51",
        "name": "name",
        "func": "flow.set(\"name\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 240,
        "wires": [
            [
                "6850f1feb9ce0308"
            ]
        ]
    },
    {
        "id": "9a1adfd0d20b2437",
        "type": "ui_button",
        "z": "361e5c7b7ce31d51",
        "name": "",
        "group": "4b33ac0402b9bf1c",
        "order": 7,
        "width": 16,
        "height": 1,
        "passthru": false,
        "label": "Truy xuất",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 680,
        "y": 360,
        "wires": [
            [
                "e82be5a85be2f2bc"
            ]
        ]
    },
    {
        "id": "a9316625d3a14e72",
        "type": "function",
        "z": "361e5c7b7ce31d51",
        "name": "",
        "func": "//if ( msg.payload.hasOwnProperty('time') && msg.payload.hasOwnProperty('date')&& msg.payload.hasOwnProperty('time2') && msg.payload.hasOwnProperty('date2')){\n    msg.payload.mytime = msg.payload.date +\" \" +msg.payload.time; \n    msg.payload.mytime2 =msg.payload.date2 +\" \" +msg.payload.time2; \n    flow.set(\"mychoice\", msg.payload);\n//}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "e3310ad58f7828d9",
        "type": "inject",
        "z": "361e5c7b7ce31d51",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 680,
        "y": 440,
        "wires": [
            [
                "e82be5a85be2f2bc"
            ]
        ]
    },
    {
        "id": "5f40cc0808110b7e",
        "type": "ui_date_picker",
        "z": "361e5c7b7ce31d51",
        "name": "To date",
        "label": "",
        "group": "4b33ac0402b9bf1c",
        "order": 5,
        "width": 8,
        "height": 1,
        "passthru": true,
        "topic": "date2",
        "topicType": "str",
        "className": "",
        "x": 680,
        "y": 280,
        "wires": [
            [
                "f8d72f755cf1672c"
            ]
        ]
    },
    {
        "id": "2226432d181a92ef",
        "type": "ui_text_input",
        "z": "361e5c7b7ce31d51",
        "name": "To time",
        "label": "Time2",
        "tooltip": "",
        "group": "4b33ac0402b9bf1c",
        "order": 6,
        "width": 8,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": "10",
        "topic": "time2",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 680,
        "y": 320,
        "wires": [
            [
                "f8cc1534d1c6a90c"
            ]
        ]
    },
    {
        "id": "04dec837935b1f55",
        "type": "ui_text",
        "z": "361e5c7b7ce31d51",
        "group": "4b33ac0402b9bf1c",
        "order": 4,
        "width": 16,
        "height": 1,
        "name": "den_ngay",
        "label": "Đến ngày",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 440,
        "y": 280,
        "wires": []
    },
    {
        "id": "2c12a21a456b1832",
        "type": "inject",
        "z": "361e5c7b7ce31d51",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 580,
        "wires": [
            [
                "890906c811231117"
            ]
        ]
    },
    {
        "id": "890906c811231117",
        "type": "function",
        "z": "361e5c7b7ce31d51",
        "name": "saved",
        "func": "let saved = flow.get(\"mychoice\") || {};\nmsg.payload = saved;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 580,
        "wires": [
            [
                "b93f691eea546dbd"
            ]
        ]
    },
    {
        "id": "ffdb433d9f5e753f",
        "type": "mysql",
        "z": "361e5c7b7ce31d51",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 720,
        "y": 580,
        "wires": [
            [
                "0dba8b419b17132c",
                "ef30512354545c3c",
                "1964661737687747",
                "dcf31bc56fe954a7",
                "25a4215230ae42d0"
            ]
        ]
    },
    {
        "id": "bdd20cbfcfe2b4c2",
        "type": "switch",
        "z": "361e5c7b7ce31d51",
        "name": "msg.next",
        "property": "next",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1400,
        "y": 340,
        "wires": [
            [
                "1d367ed460a0d009"
            ]
        ]
    },
    {
        "id": "1d367ed460a0d009",
        "type": "link out",
        "z": "361e5c7b7ce31d51",
        "name": "next1",
        "mode": "link",
        "links": [
            "afecd170ade36de4"
        ],
        "x": 1505,
        "y": 340,
        "wires": []
    },
    {
        "id": "afecd170ade36de4",
        "type": "link in",
        "z": "361e5c7b7ce31d51",
        "name": "next2",
        "links": [
            "1d367ed460a0d009"
        ],
        "x": 285,
        "y": 640,
        "wires": [
            [
                "890906c811231117"
            ]
        ]
    },
    {
        "id": "87e9ab56efd0d8dc",
        "type": "catch",
        "z": "361e5c7b7ce31d51",
        "name": "",
        "scope": [
            "013410f48b00aa3a"
        ],
        "uncaught": false,
        "x": 250,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "a4d3c3ca62749e93",
        "type": "moment",
        "z": "361e5c7b7ce31d51",
        "name": "just_hours",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": "7",
        "adjType": "hours",
        "adjDir": "subtract",
        "format": "HH:mm",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 870,
        "y": 200,
        "wires": [
            [
                "6850f1feb9ce0308"
            ]
        ]
    },
    {
        "id": "3e7efaab8ae16034",
        "type": "moment",
        "z": "361e5c7b7ce31d51",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 900,
        "y": 160,
        "wires": [
            [
                "6850f1feb9ce0308"
            ]
        ]
    },
    {
        "id": "f8d72f755cf1672c",
        "type": "moment",
        "z": "361e5c7b7ce31d51",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 900,
        "y": 280,
        "wires": [
            [
                "6850f1feb9ce0308"
            ]
        ]
    },
    {
        "id": "f8cc1534d1c6a90c",
        "type": "moment",
        "z": "361e5c7b7ce31d51",
        "name": "just_hours",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": "7",
        "adjType": "hours",
        "adjDir": "subtract",
        "format": "HH:mm",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 870,
        "y": 320,
        "wires": [
            [
                "6850f1feb9ce0308"
            ]
        ]
    },
    {
        "id": "1964661737687747",
        "type": "function",
        "z": "361e5c7b7ce31d51",
        "name": "bar_level",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar time_label = [];\nvar data = [];\nconst toTimestamp = (strDate) => {  \n  const dt = new Date(strDate).getTime();  \n  return dt / 1000;  \n}  \nvar max = 10; // so cot\n/*\nif (payload.length - max < 0 ){\n    max = payload.length;\n}\n*/\nif (payload.length >max ){\n     max = payload.length;\n}\n\n\n//var result_div; \n//var div =  Math.round(payload.length / 10);\nvar count_column  = 10;\n\nvar step =  Math.round(payload.length / count_column);\n\n/*\nif ( payload.length / 10 < 10){\n    step = div;\n}else  ( payload.length / 10 >= 10){\n    \n}\n*/\n\n//for(var j = payload.length -1; j >= (payload.length - max);j--){\nfor(var j = 0; j<max;j++){\n    if (j%step == 0){\n \n    let unix_timestamp =  toTimestamp(payload[j].thoi_gian);//\n    var date = new Date(unix_timestamp * 1000);\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var formattedTime = hours + ':' + minutes.substr(-2);\n    time_label.push(formattedTime);\n    //node.warn(unix_timestamp);\n    new_arr_gieng1.push(payload[j].muc_nuoc);\n    }\n    \n}\ndata.push(new_arr_gieng1);\n\nmsg.payload = {};\nvar m={};\n m={\n    \"series\": [\"Biểu đồ cột\"],\n    \"data\":data,\n    \"labels\": time_label\n};\nreturn {payload:[m]};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 660,
        "wires": [
            [
                "15ea783b49c390a9"
            ]
        ]
    },
    {
        "id": "3c2f8b1184571852",
        "type": "ui_chart",
        "z": "361e5c7b7ce31d51",
        "name": "Chart_Flow",
        "group": "1844cda23c08bfa8",
        "order": 1,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "20",
        "removeOlder": "1",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "604800",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1170,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "15ea783b49c390a9",
        "type": "ui_chart",
        "z": "361e5c7b7ce31d51",
        "name": "Bar_Flow",
        "group": "1844cda23c08bfa8",
        "order": 2,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "20",
        "removeOlder": "1",
        "removeOlderPoints": "100",
        "removeOlderUnit": "3600",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1160,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "4e0dd3fde2407a28",
        "type": "inject",
        "z": "361e5c7b7ce31d51",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 540,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "b93f691eea546dbd",
        "type": "sqlstring-format",
        "z": "361e5c7b7ce31d51",
        "name": "",
        "query": "SELECT * FROM `mydata2`.`g1` where thoi_gian > ? AND  thoi_gian < ?  LIMIT 1000;",
        "vars": "payload.mytime , payload.mytime2",
        "outField": "topic",
        "x": 550,
        "y": 580,
        "wires": [
            [
                "ffdb433d9f5e753f"
            ]
        ]
    },
    {
        "id": "0dba8b419b17132c",
        "type": "function",
        "z": "361e5c7b7ce31d51",
        "name": "data2table",
        "func": "var arr = [];\nvar payload = msg.payload;\nfor (var i=0; i< msg.payload.length;i++)\n{\n    var d = new Date(payload[i].thoi_gian);\n    var text = d.toLocaleString();\n    var obj = { \"Thời gian\": text, \"Mực nước\": payload[i].muc_nuoc, \"TT_Mực nước\": payload[i].status_level, \"Lưu lượng\": payload[i].luu_luong, \"TT_Lưu Lượng\": payload[i].status_flow,\"Tổng\": payload[i].luu_luong_tong, \"Tổng 24h\": payload[i].tong_ngay};\n    arr.push(obj);\n}\nmsg.payload = arr;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 580,
        "wires": [
            [
                "91279de6848bc248"
            ]
        ]
    },
    {
        "id": "ab8a78e2dddae896",
        "type": "ui_text",
        "z": "361e5c7b7ce31d51",
        "group": "4b33ac0402b9bf1c",
        "order": 8,
        "width": 16,
        "height": 1,
        "name": "label",
        "label": "Bảng dữ liệu",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 990,
        "y": 540,
        "wires": []
    },
    {
        "id": "3d2b51f4fd820dba",
        "type": "ui_text",
        "z": "361e5c7b7ce31d51",
        "group": "4b33ac0402b9bf1c",
        "order": 1,
        "width": 16,
        "height": 1,
        "name": "tu_ngay",
        "label": "Từ ngày",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 440,
        "y": 160,
        "wires": []
    },
    {
        "id": "ef30512354545c3c",
        "type": "function",
        "z": "361e5c7b7ce31d51",
        "name": "chart_level",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar count_line  = 20;\n\nvar step =  Math.round(payload.length / count_line);\n\n//var step = 10;\n\nfor(var j = 0; j<payload.length;j++){\n       if (j% step == 0){\n    var gieng1 = { \"x\": payload[j].thoi_gian , \"y\": payload[j].muc_nuoc};\n    new_arr_gieng1.push(gieng1);\n       }\n}\n\n\n\n\n\n\nmsg.payload = [{\n\"series\": [\"Biểu đồ đường\"],\n\"data\": [new_arr_gieng1],\n\"labels\": [\"\"]\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 620,
        "wires": [
            [
                "3c2f8b1184571852"
            ]
        ]
    },
    {
        "id": "e535edc2fb6edebd",
        "type": "http in",
        "z": "361e5c7b7ce31d51",
        "name": "",
        "url": "/KT10",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 800,
        "wires": [
            [
                "d6a425fb2b120acd"
            ]
        ]
    },
    {
        "id": "d6a425fb2b120acd",
        "type": "function",
        "z": "361e5c7b7ce31d51",
        "name": "saved",
        "func": "let saved = flow.get(\"mychoice\") || {};\nmsg.payload = saved;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 800,
        "wires": [
            [
                "d4e4f9d2c2e1c540"
            ]
        ]
    },
    {
        "id": "d4e4f9d2c2e1c540",
        "type": "sqlstring-format",
        "z": "361e5c7b7ce31d51",
        "name": "sql g1",
        "query": "SELECT * FROM `mydata2`.`g1` where thoi_gian > ? AND  thoi_gian < ? ;",
        "vars": "payload.mytime, payload.mytime2",
        "outField": "topic",
        "x": 650,
        "y": 800,
        "wires": [
            [
                "9a5b63ac1bbd93a2"
            ]
        ]
    },
    {
        "id": "9a5b63ac1bbd93a2",
        "type": "mysql",
        "z": "361e5c7b7ce31d51",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 890,
        "y": 800,
        "wires": [
            [
                "7c0d961970dcc0e4"
            ]
        ]
    },
    {
        "id": "7c0d961970dcc0e4",
        "type": "function",
        "z": "361e5c7b7ce31d51",
        "name": "timetoLocaleString",
        "func": "var payload = msg.payload ;\nfor (var j = 0; j< payload.length;j++){\n    msg.payload[j].thoi_gian =  msg.payload[j].thoi_gian.toLocaleString();\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 800,
        "wires": [
            [
                "11f54fb128924ca3"
            ]
        ]
    },
    {
        "id": "11f54fb128924ca3",
        "type": "csv",
        "z": "361e5c7b7ce31d51",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "thoi_gian,muc_nuoc,status_level,luu_luong,status_flow,luu_luong_tong,tong_ngay",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1270,
        "y": 800,
        "wires": [
            [
                "934f29ed0ee05fd0"
            ]
        ]
    },
    {
        "id": "934f29ed0ee05fd0",
        "type": "function",
        "z": "361e5c7b7ce31d51",
        "name": "Set Headers",
        "func": "msg.headers = {}\nvar file_name = msg.req.originalUrl.replace(\"/\",\"\");\nmsg.headers[\"Content-type\"] = \"text/csv\";\nmsg.headers[\"Content-Disposition\"] = \"attachment; filename=\"+file_name+\".csv\";\nmsg.headers[\"Pragma\"] = \"no-cache\";\nmsg.headers[\"Expires\"] = \"0\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 800,
        "wires": [
            [
                "d37feb6e12366b9e"
            ]
        ]
    },
    {
        "id": "d37feb6e12366b9e",
        "type": "http response",
        "z": "361e5c7b7ce31d51",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1550,
        "y": 840,
        "wires": []
    },
    {
        "id": "0e2faefadca37453",
        "type": "function",
        "z": "361e5c7b7ce31d51",
        "name": "Set 404",
        "func": "msg.payload = msg.error;\nmsg.statusCode = 404;//resource not found\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 840,
        "wires": [
            [
                "d37feb6e12366b9e"
            ]
        ]
    },
    {
        "id": "0fe52f75e9f9f76e",
        "type": "ui_template",
        "z": "361e5c7b7ce31d51",
        "group": "4b33ac0402b9bf1c",
        "name": "present download link on dashboard",
        "order": 10,
        "width": 16,
        "height": 1,
        "format": "<div >\n    <i class=\"fa fa-file-excel-o\" aria-hidden=\"true\"></i>\n    <a href=\"/KT10\">[Excel] Click để tải về</a>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 990,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "312b0e1ebb94e4b1",
        "type": "catch",
        "z": "361e5c7b7ce31d51",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 1240,
        "y": 840,
        "wires": [
            [
                "0e2faefadca37453"
            ]
        ]
    },
    {
        "id": "bfa07a1ed2bb4119",
        "type": "comment",
        "z": "361e5c7b7ce31d51",
        "name": "LIMIT 100;",
        "info": "",
        "x": 500,
        "y": 640,
        "wires": []
    },
    {
        "id": "25a4215230ae42d0",
        "type": "function",
        "z": "361e5c7b7ce31d51",
        "name": "bar_flow",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar time_label = [];\nvar data = [];\nconst toTimestamp = (strDate) => {  \n  const dt = new Date(strDate).getTime();  \n  return dt / 1000;  \n}  \nvar max = 10; // so cot\n/*\nif (payload.length - max < 0 ){\n    max = payload.length;\n}\n*/\nif (payload.length >max ){\n     max = payload.length;\n}\n\n\n//var result_div; \n//var div =  Math.round(payload.length / 10);\nvar count_column  = 10;\n\nvar step =  Math.round(payload.length / count_column);\n\n/*\nif ( payload.length / 10 < 10){\n    step = div;\n}else  ( payload.length / 10 >= 10){\n    \n}\n*/\n\n//for(var j = payload.length -1; j >= (payload.length - max);j--){\nfor(var j = 0; j<max;j++){\n    if (j%step == 0){\n \n    let unix_timestamp =  toTimestamp(payload[j].thoi_gian);//\n    var date = new Date(unix_timestamp * 1000);\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var formattedTime = hours + ':' + minutes.substr(-2);\n    time_label.push(formattedTime);\n    //node.warn(unix_timestamp);\n    new_arr_gieng1.push(payload[j].luu_luong);\n    }\n    \n}\ndata.push(new_arr_gieng1);\n\nmsg.payload = {};\nvar m={};\n m={\n    \"series\": [\"Biểu đồ cột\"],\n    \"data\":data,\n    \"labels\": time_label\n};\nreturn {payload:[m]};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 740,
        "wires": [
            [
                "bb5d814047c046c7"
            ]
        ]
    },
    {
        "id": "52eb2e92d5db6ea5",
        "type": "ui_chart",
        "z": "361e5c7b7ce31d51",
        "name": "Chart_Flow",
        "group": "e6d887569d737aeb",
        "order": 1,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": "1",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "86400",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1170,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "bb5d814047c046c7",
        "type": "ui_chart",
        "z": "361e5c7b7ce31d51",
        "name": "Bar_Flow",
        "group": "e6d887569d737aeb",
        "order": 2,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": "1",
        "removeOlderPoints": "100",
        "removeOlderUnit": "3600",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1160,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "dcf31bc56fe954a7",
        "type": "function",
        "z": "361e5c7b7ce31d51",
        "name": "chart_flow",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar count_line  = 20;\n\nvar step =  Math.round(payload.length / count_line);\n\n//var step = 10;\n\nfor(var j = 0; j<payload.length;j++){\n       if (j% step == 0){\n    var gieng1 = { \"x\": payload[j].thoi_gian , \"y\": payload[j].luu_luong};\n    new_arr_gieng1.push(gieng1);\n       }\n}\n\n\n\n\n\n\nmsg.payload = [{\n\"series\": [\"Biểu đồ đường\"],\n\"data\": [new_arr_gieng1],\n\"labels\": [\"\"]\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 700,
        "wires": [
            [
                "52eb2e92d5db6ea5"
            ]
        ]
    },
    {
        "id": "fd4a6bd6be04df43",
        "type": "ui_gauge",
        "z": "361e5c7b7ce31d51",
        "name": "",
        "group": "ebc955783b403a93",
        "order": 2,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Lưu Lượng",
        "label": " m3/h",
        "format": "{{msg.luu_luong}}",
        "min": 0,
        "max": "60",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 980,
        "wires": []
    },
    {
        "id": "060c69e991d483c5",
        "type": "link in",
        "z": "361e5c7b7ce31d51",
        "name": "kt1_detail",
        "links": [
            "44a76803d4b009b1"
        ],
        "x": 275,
        "y": 980,
        "wires": [
            [
                "fd4a6bd6be04df43",
                "f0db45c74ef2bf7a",
                "72618e54fee4289f",
                "e03fd9e519f099f7"
            ]
        ]
    },
    {
        "id": "f0db45c74ef2bf7a",
        "type": "ui_gauge",
        "z": "361e5c7b7ce31d51",
        "name": "",
        "group": "ebc955783b403a93",
        "order": 1,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Mực nước",
        "label": " m",
        "format": "{{msg.muc_nuoc}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 900,
        "wires": []
    },
    {
        "id": "72618e54fee4289f",
        "type": "ui_gauge",
        "z": "361e5c7b7ce31d51",
        "name": "",
        "group": "ebc955783b403a93",
        "order": 4,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Lưu Lượng Tổng",
        "label": " m3",
        "format": "{{msg.luu_luong_tong}}",
        "min": 0,
        "max": "999999999",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 550,
        "y": 1100,
        "wires": []
    },
    {
        "id": "91279de6848bc248",
        "type": "ui_table",
        "z": "361e5c7b7ce31d51",
        "group": "4b33ac0402b9bf1c",
        "name": "",
        "order": 9,
        "width": 16,
        "height": 9,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1170,
        "y": 580,
        "wires": []
    },
    {
        "id": "e03fd9e519f099f7",
        "type": "ui_gauge",
        "z": "361e5c7b7ce31d51",
        "name": "",
        "group": "ebc955783b403a93",
        "order": 3,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Tổng 24h",
        "label": " m3",
        "format": "{{msg.tong_ngay}}",
        "min": 0,
        "max": "999",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 520,
        "y": 1040,
        "wires": []
    },
    {
        "id": "e0adf12843645eb8",
        "type": "ui_text_input",
        "z": "31e4ae645b526288",
        "name": "From time",
        "label": "Time",
        "tooltip": "",
        "group": "90f7bf5f32e953e1",
        "order": 3,
        "width": 8,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": "10",
        "topic": "time",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 660,
        "y": 120,
        "wires": [
            [
                "f92e6b4789dad523"
            ]
        ]
    },
    {
        "id": "7c1367c9cf4512b6",
        "type": "join",
        "z": "31e4ae645b526288",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "1",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1110,
        "y": 160,
        "wires": [
            [
                "3aac2fce34d667df"
            ]
        ]
    },
    {
        "id": "f752980dfa9cfce2",
        "type": "ui_ui_control",
        "z": "31e4ae645b526288",
        "name": "",
        "events": "change",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "af23042c2daf1b79"
            ]
        ]
    },
    {
        "id": "af23042c2daf1b79",
        "type": "switch",
        "z": "31e4ae645b526288",
        "name": "BP Tab?",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Lich_Su",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 140,
        "wires": [
            [
                "40e7574d73e214e6"
            ]
        ]
    },
    {
        "id": "40e7574d73e214e6",
        "type": "function",
        "z": "31e4ae645b526288",
        "name": "Time Of Day",
        "func": "//let current_time = convertTZ(new Date(), \"Asia/Jakarta\");\n//var now = Date().toLocaleString('en-US', { timeZone: 'Asia/Jakarta' });\n//let now =  current_time;//// Tue Apr 20 2012 17:10:30 GMT+0700 (Western Indonesia Time)\nlet now = new Date();\n\nlet msg1 = {payload: now}\nlet msg2 = {payload: (now.getTime() - now.getTimezoneOffset()*60000) % (24 * 3600 * 1000)}\nlet msg3 = {topic:'name', payload: 'Gieng1'}\nlet msg4 = {payload: now}\nlet msg5 = {payload: (now.getTime() - now.getTimezoneOffset()*60000) % (24 * 3600 * 1000)}\nreturn [msg1, msg2,msg3,msg4,msg5];\n\nfunction convertTZ(date, tzString) {\n    return new Date((typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {timeZone: tzString}));   \n}\n",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 140,
        "wires": [
            [
                "5a2c07ca987574fe"
            ],
            [
                "e0adf12843645eb8"
            ],
            [
                "b0ead7b2d5fd283c"
            ],
            [
                "6df5385a5de96ec0"
            ],
            [
                "33f7207e6458b342"
            ]
        ]
    },
    {
        "id": "5a2c07ca987574fe",
        "type": "ui_date_picker",
        "z": "31e4ae645b526288",
        "name": "From date",
        "label": "",
        "group": "90f7bf5f32e953e1",
        "order": 2,
        "width": 8,
        "height": 1,
        "passthru": true,
        "topic": "date",
        "topicType": "str",
        "className": "",
        "x": 670,
        "y": 80,
        "wires": [
            [
                "bf51f9947ce462c9"
            ]
        ]
    },
    {
        "id": "b53ed0231c84a7c1",
        "type": "function",
        "z": "31e4ae645b526288",
        "name": "Truncate to start of day",
        "func": "msg.payload = Math.floor(msg.payload/(24*3600*1000))*24*3600*1000\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "5ee7a0e799826cfe",
        "type": "switch",
        "z": "31e4ae645b526288",
        "name": "Submit?",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "form",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 660,
        "y": 320,
        "wires": [
            [
                "d5d9eceefa35a1c9"
            ]
        ]
    },
    {
        "id": "8edd3ade2d1b9eb7",
        "type": "change",
        "z": "31e4ae645b526288",
        "name": "Clear values",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"rate\":\"\",\"diastolic\":\"\",\"systolic\":\"\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "f22f6fcf31868a97",
        "type": "ui_toast",
        "z": "31e4ae645b526288",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Cancel",
        "cancel": "OK",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1090,
        "y": 260,
        "wires": [
            [
                "38c28a5dde7ad309"
            ]
        ]
    },
    {
        "id": "d5d9eceefa35a1c9",
        "type": "function",
        "z": "31e4ae645b526288",
        "name": "Prepare for OK/Cancel",
        "func": "let saved = flow.get(\"mychoice\") || {};\n var dt = new Date();\n/*\nvar date = new Date(saved.mytime - 420*60000);\nvar date2 = new Date(saved.mytime2 -420*60000);\nvar tu_ngay = (\"Từ ngày: \"+date.getDate()+\n          \"/\"+(date.getMonth()+1)+\n          \"/\"+date.getFullYear()+\n          \" \"+date.getHours()+\n          \":\"+date.getMinutes());\nvar den_ngay = (\"Đến ngày: \"+date2.getDate()+\n          \"/\"+(date2.getMonth()+1)+\n          \"/\"+date2.getFullYear()+\n          \" \"+date2.getHours()+\n          \":\"+date2.getMinutes());\n          */\nif (saved.mytime<saved.mytime2){\nmsg.payload = `Truy xuất thông tin từ ngày: ${saved.mytime} đến ngày:  ${saved.mytime2}`\nmsg.payloadSaved = saved\nmsg.next = true;\n}else{\nmsg.payload = `Thông tin nhập không hợp lệ :\\n   ${saved.mytime}  ${saved.mytime2}`\n msg.next = false;\n   \n}\nmsg.topic = null\nreturn msg;\n\n\nfunction convertTZ(date, tzString) {\n    return new Date((typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {timeZone: tzString}));   \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 280,
        "wires": [
            [
                "f22f6fcf31868a97"
            ]
        ]
    },
    {
        "id": "38c28a5dde7ad309",
        "type": "switch",
        "z": "31e4ae645b526288",
        "name": "OK?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 260,
        "wires": [
            [
                "e1c69aa82017c855"
            ]
        ]
    },
    {
        "id": "b0ead7b2d5fd283c",
        "type": "function",
        "z": "31e4ae645b526288",
        "name": "name",
        "func": "flow.set(\"name\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 160,
        "wires": [
            [
                "7c1367c9cf4512b6"
            ]
        ]
    },
    {
        "id": "810f1b0930558b03",
        "type": "ui_button",
        "z": "31e4ae645b526288",
        "name": "",
        "group": "90f7bf5f32e953e1",
        "order": 7,
        "width": 16,
        "height": 1,
        "passthru": false,
        "label": "Truy xuất",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 660,
        "y": 280,
        "wires": [
            [
                "d5d9eceefa35a1c9"
            ]
        ]
    },
    {
        "id": "3aac2fce34d667df",
        "type": "function",
        "z": "31e4ae645b526288",
        "name": "",
        "func": "//if ( msg.payload.hasOwnProperty('time') && msg.payload.hasOwnProperty('date')&& msg.payload.hasOwnProperty('time2') && msg.payload.hasOwnProperty('date2')){\n    msg.payload.mytime = msg.payload.date +\" \" +msg.payload.time; \n    msg.payload.mytime2 =msg.payload.date2 +\" \" +msg.payload.time2; \n    flow.set(\"mychoice\", msg.payload);\n//}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "168344e733813aca",
        "type": "inject",
        "z": "31e4ae645b526288",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 660,
        "y": 360,
        "wires": [
            [
                "d5d9eceefa35a1c9"
            ]
        ]
    },
    {
        "id": "6df5385a5de96ec0",
        "type": "ui_date_picker",
        "z": "31e4ae645b526288",
        "name": "To date",
        "label": "",
        "group": "90f7bf5f32e953e1",
        "order": 5,
        "width": 8,
        "height": 1,
        "passthru": true,
        "topic": "date2",
        "topicType": "str",
        "className": "",
        "x": 660,
        "y": 200,
        "wires": [
            [
                "8b811d3ccbc4afeb"
            ]
        ]
    },
    {
        "id": "33f7207e6458b342",
        "type": "ui_text_input",
        "z": "31e4ae645b526288",
        "name": "To time",
        "label": "Time2",
        "tooltip": "",
        "group": "90f7bf5f32e953e1",
        "order": 6,
        "width": 8,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": "10",
        "topic": "time2",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 660,
        "y": 240,
        "wires": [
            [
                "aa8b190fd8af3839"
            ]
        ]
    },
    {
        "id": "29f35a41eb7a8c88",
        "type": "ui_text",
        "z": "31e4ae645b526288",
        "group": "90f7bf5f32e953e1",
        "order": 4,
        "width": 16,
        "height": 1,
        "name": "den_ngay",
        "label": "Đến ngày",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 420,
        "y": 200,
        "wires": []
    },
    {
        "id": "d8af0c4d5c90bc3c",
        "type": "inject",
        "z": "31e4ae645b526288",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 500,
        "wires": [
            [
                "afac02e4eabe7b1e"
            ]
        ]
    },
    {
        "id": "afac02e4eabe7b1e",
        "type": "function",
        "z": "31e4ae645b526288",
        "name": "saved",
        "func": "let saved = flow.get(\"mychoice\") || {};\nmsg.payload = saved;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 500,
        "wires": [
            [
                "55e89d9e66b2d897"
            ]
        ]
    },
    {
        "id": "fa0e6b0fb466fe0a",
        "type": "mysql",
        "z": "31e4ae645b526288",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 740,
        "y": 500,
        "wires": [
            [
                "5ff40d50b250bfc5",
                "528c3adb9c1ec210",
                "cd7d4a1d3aec914b",
                "931b2550396b7733",
                "909bfc9138be8dc3"
            ]
        ]
    },
    {
        "id": "e1c69aa82017c855",
        "type": "switch",
        "z": "31e4ae645b526288",
        "name": "msg.next",
        "property": "next",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1380,
        "y": 260,
        "wires": [
            [
                "32c42d8f0d41c88c"
            ]
        ]
    },
    {
        "id": "32c42d8f0d41c88c",
        "type": "link out",
        "z": "31e4ae645b526288",
        "name": "next1",
        "mode": "link",
        "links": [
            "859b74dad0bdc050"
        ],
        "x": 1485,
        "y": 260,
        "wires": []
    },
    {
        "id": "859b74dad0bdc050",
        "type": "link in",
        "z": "31e4ae645b526288",
        "name": "next2",
        "links": [
            "32c42d8f0d41c88c"
        ],
        "x": 265,
        "y": 560,
        "wires": [
            [
                "afac02e4eabe7b1e"
            ]
        ]
    },
    {
        "id": "48cf5d38681bbbb1",
        "type": "catch",
        "z": "31e4ae645b526288",
        "name": "",
        "scope": [
            "013410f48b00aa3a"
        ],
        "uncaught": false,
        "x": 230,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "f92e6b4789dad523",
        "type": "moment",
        "z": "31e4ae645b526288",
        "name": "just_hours",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": "7",
        "adjType": "hours",
        "adjDir": "subtract",
        "format": "HH:mm",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 850,
        "y": 120,
        "wires": [
            [
                "7c1367c9cf4512b6"
            ]
        ]
    },
    {
        "id": "bf51f9947ce462c9",
        "type": "moment",
        "z": "31e4ae645b526288",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 880,
        "y": 80,
        "wires": [
            [
                "7c1367c9cf4512b6"
            ]
        ]
    },
    {
        "id": "8b811d3ccbc4afeb",
        "type": "moment",
        "z": "31e4ae645b526288",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 880,
        "y": 200,
        "wires": [
            [
                "7c1367c9cf4512b6"
            ]
        ]
    },
    {
        "id": "aa8b190fd8af3839",
        "type": "moment",
        "z": "31e4ae645b526288",
        "name": "just_hours",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": "7",
        "adjType": "hours",
        "adjDir": "subtract",
        "format": "HH:mm",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 850,
        "y": 240,
        "wires": [
            [
                "7c1367c9cf4512b6"
            ]
        ]
    },
    {
        "id": "528c3adb9c1ec210",
        "type": "function",
        "z": "31e4ae645b526288",
        "name": "bar_level",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar time_label = [];\nvar data = [];\nconst toTimestamp = (strDate) => {  \n  const dt = new Date(strDate).getTime();  \n  return dt / 1000;  \n}  \nvar max = 10; // so cot\n/*\nif (payload.length - max < 0 ){\n    max = payload.length;\n}\n*/\nif (payload.length >max ){\n     max = payload.length;\n}\n\n\n//var result_div; \n//var div =  Math.round(payload.length / 10);\nvar count_column  = 10;\n\nvar step =  Math.round(payload.length / count_column);\n\n/*\nif ( payload.length / 10 < 10){\n    step = div;\n}else  ( payload.length / 10 >= 10){\n    \n}\n*/\n\n//for(var j = payload.length -1; j >= (payload.length - max);j--){\nfor(var j = 0; j<max;j++){\n    if (j%step == 0){\n \n    let unix_timestamp =  toTimestamp(payload[j].thoi_gian);//\n    var date = new Date(unix_timestamp * 1000);\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var formattedTime = hours + ':' + minutes.substr(-2);\n    time_label.push(formattedTime);\n    //node.warn(unix_timestamp);\n    new_arr_gieng1.push(payload[j].muc_nuoc);\n    }\n    \n}\ndata.push(new_arr_gieng1);\n\nmsg.payload = {};\nvar m={};\n m={\n    \"series\": [\"Biểu đồ cột\"],\n    \"data\":data,\n    \"labels\": time_label\n};\nreturn {payload:[m]};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 580,
        "wires": [
            [
                "d90563bd322ddf04"
            ]
        ]
    },
    {
        "id": "38f79a3221b58737",
        "type": "ui_chart",
        "z": "31e4ae645b526288",
        "name": "Chart_Flow",
        "group": "09ec39030a76f9e5",
        "order": 1,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "20",
        "removeOlder": "1",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "604800",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1150,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "d90563bd322ddf04",
        "type": "ui_chart",
        "z": "31e4ae645b526288",
        "name": "Bar_Flow",
        "group": "09ec39030a76f9e5",
        "order": 2,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "20",
        "removeOlder": "1",
        "removeOlderPoints": "100",
        "removeOlderUnit": "3600",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1140,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "33fb6850d678bf34",
        "type": "inject",
        "z": "31e4ae645b526288",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 520,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "55e89d9e66b2d897",
        "type": "sqlstring-format",
        "z": "31e4ae645b526288",
        "name": "",
        "query": "SELECT * FROM `mydata2`.`g2` where thoi_gian > ? AND  thoi_gian < ?  LIMIT 1000;",
        "vars": "payload.mytime , payload.mytime2",
        "outField": "topic",
        "x": 530,
        "y": 500,
        "wires": [
            [
                "fa0e6b0fb466fe0a"
            ]
        ]
    },
    {
        "id": "335fcad9af4a8f0b",
        "type": "ui_text",
        "z": "31e4ae645b526288",
        "group": "90f7bf5f32e953e1",
        "order": 8,
        "width": 16,
        "height": 1,
        "name": "label",
        "label": "Bảng dữ liệu",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 970,
        "y": 460,
        "wires": []
    },
    {
        "id": "2b369ac532ceaae1",
        "type": "ui_text",
        "z": "31e4ae645b526288",
        "group": "90f7bf5f32e953e1",
        "order": 1,
        "width": 16,
        "height": 1,
        "name": "tu_ngay",
        "label": "Từ ngày",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 420,
        "y": 80,
        "wires": []
    },
    {
        "id": "5ff40d50b250bfc5",
        "type": "function",
        "z": "31e4ae645b526288",
        "name": "chart_level",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar count_line  = 20;\n\nvar step =  Math.round(payload.length / count_line);\n\n//var step = 10;\n\nfor(var j = 0; j<payload.length;j++){\n       if (j% step == 0){\n    var gieng1 = { \"x\": payload[j].thoi_gian , \"y\": payload[j].muc_nuoc};\n    new_arr_gieng1.push(gieng1);\n       }\n}\n\n\n\n\n\n\nmsg.payload = [{\n\"series\": [\"Biểu đồ đường\"],\n\"data\": [new_arr_gieng1],\n\"labels\": [\"\"]\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 540,
        "wires": [
            [
                "38f79a3221b58737"
            ]
        ]
    },
    {
        "id": "e05655f0006b7c8e",
        "type": "http in",
        "z": "31e4ae645b526288",
        "name": "",
        "url": "/KT03",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 720,
        "wires": [
            [
                "65aa8f093aba3c1c"
            ]
        ]
    },
    {
        "id": "65aa8f093aba3c1c",
        "type": "function",
        "z": "31e4ae645b526288",
        "name": "saved",
        "func": "let saved = flow.get(\"mychoice\") || {};\nmsg.payload = saved;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 720,
        "wires": [
            [
                "8624a10be2cd79ca"
            ]
        ]
    },
    {
        "id": "8624a10be2cd79ca",
        "type": "sqlstring-format",
        "z": "31e4ae645b526288",
        "name": "sql g2",
        "query": "SELECT * FROM `mydata2`.`g2` where thoi_gian > ? AND  thoi_gian < ? ;",
        "vars": "payload.mytime, payload.mytime2",
        "outField": "topic",
        "x": 630,
        "y": 720,
        "wires": [
            [
                "e0a971abe5c35a85"
            ]
        ]
    },
    {
        "id": "e0a971abe5c35a85",
        "type": "mysql",
        "z": "31e4ae645b526288",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 870,
        "y": 720,
        "wires": [
            [
                "91da7d0652ac9dcb"
            ]
        ]
    },
    {
        "id": "91da7d0652ac9dcb",
        "type": "function",
        "z": "31e4ae645b526288",
        "name": "timetoLocaleString",
        "func": "var payload = msg.payload ;\nfor (var j = 0; j< payload.length;j++){\n    msg.payload[j].thoi_gian =  msg.payload[j].thoi_gian.toLocaleString();\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 720,
        "wires": [
            [
                "f0f919b771515775"
            ]
        ]
    },
    {
        "id": "f0f919b771515775",
        "type": "csv",
        "z": "31e4ae645b526288",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "thoi_gian,muc_nuoc,status_level,luu_luong,status_flow,luu_luong_tong,tong_ngay",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1250,
        "y": 720,
        "wires": [
            [
                "a3ab945831cdc53f"
            ]
        ]
    },
    {
        "id": "a3ab945831cdc53f",
        "type": "function",
        "z": "31e4ae645b526288",
        "name": "Set Headers",
        "func": "msg.headers = {}\nvar file_name = msg.req.originalUrl.replace(\"/\",\"\");\nmsg.headers[\"Content-type\"] = \"text/csv\";\nmsg.headers[\"Content-Disposition\"] = \"attachment; filename=\"+file_name+\".csv\";\nmsg.headers[\"Pragma\"] = \"no-cache\";\nmsg.headers[\"Expires\"] = \"0\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 720,
        "wires": [
            [
                "828a5ed3c4a4c098"
            ]
        ]
    },
    {
        "id": "828a5ed3c4a4c098",
        "type": "http response",
        "z": "31e4ae645b526288",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1530,
        "y": 760,
        "wires": []
    },
    {
        "id": "cf4af9ba9c28ad32",
        "type": "function",
        "z": "31e4ae645b526288",
        "name": "Set 404",
        "func": "msg.payload = msg.error;\nmsg.statusCode = 404;//resource not found\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 760,
        "wires": [
            [
                "828a5ed3c4a4c098"
            ]
        ]
    },
    {
        "id": "c6b451ba5a48ab24",
        "type": "ui_template",
        "z": "31e4ae645b526288",
        "group": "90f7bf5f32e953e1",
        "name": "present download link on dashboard",
        "order": 10,
        "width": 16,
        "height": 1,
        "format": "<div >\n    <i class=\"fa fa-file-excel-o\" aria-hidden=\"true\"></i>\n    <a href=\"/KT03\">[Excel] Click để tải về</a>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 970,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "ce562f5c44749370",
        "type": "catch",
        "z": "31e4ae645b526288",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 1220,
        "y": 760,
        "wires": [
            [
                "cf4af9ba9c28ad32"
            ]
        ]
    },
    {
        "id": "986de8ac1b799dea",
        "type": "comment",
        "z": "31e4ae645b526288",
        "name": "LIMIT 100;",
        "info": "",
        "x": 480,
        "y": 560,
        "wires": []
    },
    {
        "id": "931b2550396b7733",
        "type": "function",
        "z": "31e4ae645b526288",
        "name": "bar_flow",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar time_label = [];\nvar data = [];\nconst toTimestamp = (strDate) => {  \n  const dt = new Date(strDate).getTime();  \n  return dt / 1000;  \n}  \nvar max = 10; // so cot\n/*\nif (payload.length - max < 0 ){\n    max = payload.length;\n}\n*/\nif (payload.length >max ){\n     max = payload.length;\n}\n\n\n//var result_div; \n//var div =  Math.round(payload.length / 10);\nvar count_column  = 10;\n\nvar step =  Math.round(payload.length / count_column);\n\n/*\nif ( payload.length / 10 < 10){\n    step = div;\n}else  ( payload.length / 10 >= 10){\n    \n}\n*/\n\n//for(var j = payload.length -1; j >= (payload.length - max);j--){\nfor(var j = 0; j<max;j++){\n    if (j%step == 0){\n \n    let unix_timestamp =  toTimestamp(payload[j].thoi_gian);//\n    var date = new Date(unix_timestamp * 1000);\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var formattedTime = hours + ':' + minutes.substr(-2);\n    time_label.push(formattedTime);\n    //node.warn(unix_timestamp);\n    new_arr_gieng1.push(payload[j].luu_luong);\n    }\n    \n}\ndata.push(new_arr_gieng1);\n\nmsg.payload = {};\nvar m={};\n m={\n    \"series\": [\"Biểu đồ cột\"],\n    \"data\":data,\n    \"labels\": time_label\n};\nreturn {payload:[m]};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 660,
        "wires": [
            [
                "74ac0aad664fc194"
            ]
        ]
    },
    {
        "id": "9e18a437d69d0c0e",
        "type": "ui_chart",
        "z": "31e4ae645b526288",
        "name": "Chart_Flow",
        "group": "7fb2d1f501b14f91",
        "order": 1,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": "1",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "604800",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1150,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "74ac0aad664fc194",
        "type": "ui_chart",
        "z": "31e4ae645b526288",
        "name": "Bar_Flow",
        "group": "7fb2d1f501b14f91",
        "order": 2,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": "1",
        "removeOlderPoints": "100",
        "removeOlderUnit": "3600",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1140,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "cd7d4a1d3aec914b",
        "type": "function",
        "z": "31e4ae645b526288",
        "name": "chart_flow",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar count_line  = 20;\n\nvar step =  Math.round(payload.length / count_line);\n\n//var step = 10;\n\nfor(var j = 0; j<payload.length;j++){\n       if (j% step == 0){\n    var gieng1 = { \"x\": payload[j].thoi_gian , \"y\": payload[j].luu_luong};\n    new_arr_gieng1.push(gieng1);\n       }\n}\n\n\n\n\n\n\nmsg.payload = [{\n\"series\": [\"Biểu đồ đường\"],\n\"data\": [new_arr_gieng1],\n\"labels\": [\"\"]\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 620,
        "wires": [
            [
                "9e18a437d69d0c0e"
            ]
        ]
    },
    {
        "id": "3970ecf94e61f22e",
        "type": "ui_gauge",
        "z": "31e4ae645b526288",
        "name": "",
        "group": "3727ebb51dfdf6b0",
        "order": 2,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Lưu Lượng",
        "label": " m3/h",
        "format": "{{msg.luu_luong}}",
        "min": 0,
        "max": "60",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 510,
        "y": 880,
        "wires": []
    },
    {
        "id": "cd2ad35a33f67bc7",
        "type": "link in",
        "z": "31e4ae645b526288",
        "name": "kt2_detail",
        "links": [
            "efc629b531a80c75"
        ],
        "x": 265,
        "y": 900,
        "wires": [
            [
                "3970ecf94e61f22e",
                "55f926e3eab45229",
                "92d23474321527b8",
                "18957ed9886e410c"
            ]
        ]
    },
    {
        "id": "55f926e3eab45229",
        "type": "ui_gauge",
        "z": "31e4ae645b526288",
        "name": "",
        "group": "3727ebb51dfdf6b0",
        "order": 1,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Mực nước",
        "label": " m",
        "format": "{{msg.muc_nuoc}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 510,
        "y": 820,
        "wires": []
    },
    {
        "id": "92d23474321527b8",
        "type": "ui_gauge",
        "z": "31e4ae645b526288",
        "name": "",
        "group": "3727ebb51dfdf6b0",
        "order": 4,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Lưu Lượng Tổng",
        "label": " m3",
        "format": "{{msg.luu_luong_tong}}",
        "min": 0,
        "max": "999999999",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 1000,
        "wires": []
    },
    {
        "id": "909bfc9138be8dc3",
        "type": "function",
        "z": "31e4ae645b526288",
        "name": "data2table",
        "func": "var arr = [];\nvar payload = msg.payload;\nfor (var i = 0; i < msg.payload.length; i++) {\n    var d = new Date(payload[i].thoi_gian);\n    var text = d.toLocaleString();\n    var obj = { \"Thời gian\": text, \"Mực nước\": payload[i].muc_nuoc, \"TT_Mực nước\": payload[i].status_level, \"Lưu lượng\": payload[i].luu_luong, \"TT_Lưu Lượng\": payload[i].status_flow, \"Tổng\": payload[i].luu_luong_tong, \"Tổng 24h\": payload[i].tong_ngay };\n    arr.push(obj);\n}\nmsg.payload = arr;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 500,
        "wires": [
            [
                "77f7f6faaf907856"
            ]
        ]
    },
    {
        "id": "77f7f6faaf907856",
        "type": "ui_table",
        "z": "31e4ae645b526288",
        "group": "90f7bf5f32e953e1",
        "name": "",
        "order": 9,
        "width": 16,
        "height": 9,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1130,
        "y": 500,
        "wires": []
    },
    {
        "id": "18957ed9886e410c",
        "type": "ui_gauge",
        "z": "31e4ae645b526288",
        "name": "",
        "group": "3727ebb51dfdf6b0",
        "order": 3,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Tổng 24h",
        "label": " m3",
        "format": "{{msg.tong_ngay}}",
        "min": 0,
        "max": "999",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 500,
        "y": 940,
        "wires": []
    },
    {
        "id": "2341323fe1ca23fb",
        "type": "ui_text_input",
        "z": "b38b295d3b6c9224",
        "name": "From time",
        "label": "Time",
        "tooltip": "",
        "group": "20e99841a9498678",
        "order": 3,
        "width": 8,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": "10",
        "topic": "time",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 640,
        "y": 120,
        "wires": [
            [
                "b1f8faab7c0c54cd"
            ]
        ]
    },
    {
        "id": "58c8afbd6406b920",
        "type": "join",
        "z": "b38b295d3b6c9224",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "1",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1090,
        "y": 160,
        "wires": [
            [
                "427bbbef25dbac15"
            ]
        ]
    },
    {
        "id": "19013558389fa2dd",
        "type": "ui_ui_control",
        "z": "b38b295d3b6c9224",
        "name": "",
        "events": "change",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "c16208660e75e1e9"
            ]
        ]
    },
    {
        "id": "c16208660e75e1e9",
        "type": "switch",
        "z": "b38b295d3b6c9224",
        "name": "BP Tab?",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Lich_Su",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 260,
        "y": 140,
        "wires": [
            [
                "331634df71d03851"
            ]
        ]
    },
    {
        "id": "331634df71d03851",
        "type": "function",
        "z": "b38b295d3b6c9224",
        "name": "Time Of Day",
        "func": "//let current_time = convertTZ(new Date(), \"Asia/Jakarta\");\n//var now = Date().toLocaleString('en-US', { timeZone: 'Asia/Jakarta' });\n//let now =  current_time;//// Tue Apr 20 2012 17:10:30 GMT+0700 (Western Indonesia Time)\nlet now = new Date();\n\nlet msg1 = {payload: now}\nlet msg2 = {payload: (now.getTime() - now.getTimezoneOffset()*60000) % (24 * 3600 * 1000)}\nlet msg3 = {topic:'name', payload: 'Gieng1'}\nlet msg4 = {payload: now}\nlet msg5 = {payload: (now.getTime() - now.getTimezoneOffset()*60000) % (24 * 3600 * 1000)}\nreturn [msg1, msg2,msg3,msg4,msg5];\n\nfunction convertTZ(date, tzString) {\n    return new Date((typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {timeZone: tzString}));   \n}\n",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 140,
        "wires": [
            [
                "91de42b580c628b9"
            ],
            [
                "2341323fe1ca23fb"
            ],
            [
                "961c43199793d57c"
            ],
            [
                "f974b58b06b05269"
            ],
            [
                "135c8be2cd73befa"
            ]
        ]
    },
    {
        "id": "91de42b580c628b9",
        "type": "ui_date_picker",
        "z": "b38b295d3b6c9224",
        "name": "From date",
        "label": "",
        "group": "20e99841a9498678",
        "order": 2,
        "width": 8,
        "height": 1,
        "passthru": true,
        "topic": "date",
        "topicType": "str",
        "className": "",
        "x": 650,
        "y": 80,
        "wires": [
            [
                "1da2f27d85ad1ba3"
            ]
        ]
    },
    {
        "id": "77106cc029f722b2",
        "type": "function",
        "z": "b38b295d3b6c9224",
        "name": "Truncate to start of day",
        "func": "msg.payload = Math.floor(msg.payload/(24*3600*1000))*24*3600*1000\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "f388436d4fb3a710",
        "type": "switch",
        "z": "b38b295d3b6c9224",
        "name": "Submit?",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "form",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 640,
        "y": 320,
        "wires": [
            [
                "e0a056cde0ee6804"
            ]
        ]
    },
    {
        "id": "8bb6eb6334013898",
        "type": "change",
        "z": "b38b295d3b6c9224",
        "name": "Clear values",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"rate\":\"\",\"diastolic\":\"\",\"systolic\":\"\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "4127a885bb60e211",
        "type": "ui_toast",
        "z": "b38b295d3b6c9224",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Cancel",
        "cancel": "OK",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1070,
        "y": 260,
        "wires": [
            [
                "fbce35c956ed6025"
            ]
        ]
    },
    {
        "id": "e0a056cde0ee6804",
        "type": "function",
        "z": "b38b295d3b6c9224",
        "name": "Prepare for OK/Cancel",
        "func": "let saved = flow.get(\"mychoice\") || {};\n var dt = new Date();\n/*\nvar date = new Date(saved.mytime - 420*60000);\nvar date2 = new Date(saved.mytime2 -420*60000);\nvar tu_ngay = (\"Từ ngày: \"+date.getDate()+\n          \"/\"+(date.getMonth()+1)+\n          \"/\"+date.getFullYear()+\n          \" \"+date.getHours()+\n          \":\"+date.getMinutes());\nvar den_ngay = (\"Đến ngày: \"+date2.getDate()+\n          \"/\"+(date2.getMonth()+1)+\n          \"/\"+date2.getFullYear()+\n          \" \"+date2.getHours()+\n          \":\"+date2.getMinutes());\n          */\nif (saved.mytime<saved.mytime2){\nmsg.payload = `Truy xuất thông tin từ ngày: ${saved.mytime} đến ngày:  ${saved.mytime2}`\nmsg.payloadSaved = saved\nmsg.next = true;\n}else{\nmsg.payload = `Thông tin nhập không hợp lệ :\\n   ${saved.mytime}  ${saved.mytime2}`\n msg.next = false;\n   \n}\nmsg.topic = null\nreturn msg;\n\n\nfunction convertTZ(date, tzString) {\n    return new Date((typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {timeZone: tzString}));   \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 280,
        "wires": [
            [
                "4127a885bb60e211"
            ]
        ]
    },
    {
        "id": "fbce35c956ed6025",
        "type": "switch",
        "z": "b38b295d3b6c9224",
        "name": "OK?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1230,
        "y": 260,
        "wires": [
            [
                "514a61edce8766e1"
            ]
        ]
    },
    {
        "id": "961c43199793d57c",
        "type": "function",
        "z": "b38b295d3b6c9224",
        "name": "name",
        "func": "flow.set(\"name\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 160,
        "wires": [
            [
                "58c8afbd6406b920"
            ]
        ]
    },
    {
        "id": "f36d5c0d4c4e195c",
        "type": "ui_button",
        "z": "b38b295d3b6c9224",
        "name": "",
        "group": "20e99841a9498678",
        "order": 7,
        "width": 16,
        "height": 1,
        "passthru": false,
        "label": "Truy xuất",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 640,
        "y": 280,
        "wires": [
            [
                "e0a056cde0ee6804"
            ]
        ]
    },
    {
        "id": "427bbbef25dbac15",
        "type": "function",
        "z": "b38b295d3b6c9224",
        "name": "",
        "func": "//if ( msg.payload.hasOwnProperty('time') && msg.payload.hasOwnProperty('date')&& msg.payload.hasOwnProperty('time2') && msg.payload.hasOwnProperty('date2')){\n    msg.payload.mytime = msg.payload.date +\" \" +msg.payload.time; \n    msg.payload.mytime2 =msg.payload.date2 +\" \" +msg.payload.time2; \n    flow.set(\"mychoice\", msg.payload);\n//}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "07c6b0223f42b021",
        "type": "inject",
        "z": "b38b295d3b6c9224",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 640,
        "y": 360,
        "wires": [
            [
                "e0a056cde0ee6804"
            ]
        ]
    },
    {
        "id": "f974b58b06b05269",
        "type": "ui_date_picker",
        "z": "b38b295d3b6c9224",
        "name": "To date",
        "label": "",
        "group": "20e99841a9498678",
        "order": 5,
        "width": 8,
        "height": 1,
        "passthru": true,
        "topic": "date2",
        "topicType": "str",
        "className": "",
        "x": 640,
        "y": 200,
        "wires": [
            [
                "efccecf56c980f1f"
            ]
        ]
    },
    {
        "id": "135c8be2cd73befa",
        "type": "ui_text_input",
        "z": "b38b295d3b6c9224",
        "name": "To time",
        "label": "Time2",
        "tooltip": "",
        "group": "20e99841a9498678",
        "order": 6,
        "width": 8,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": "10",
        "topic": "time2",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 640,
        "y": 240,
        "wires": [
            [
                "b6126fcb8d1b3d82"
            ]
        ]
    },
    {
        "id": "6d83c9b7b301910a",
        "type": "ui_text",
        "z": "b38b295d3b6c9224",
        "group": "20e99841a9498678",
        "order": 4,
        "width": 16,
        "height": 1,
        "name": "den_ngay",
        "label": "Đến ngày",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 400,
        "y": 200,
        "wires": []
    },
    {
        "id": "036b52b17afb367f",
        "type": "inject",
        "z": "b38b295d3b6c9224",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 500,
        "wires": [
            [
                "2281b26d8d39397d"
            ]
        ]
    },
    {
        "id": "2281b26d8d39397d",
        "type": "function",
        "z": "b38b295d3b6c9224",
        "name": "saved",
        "func": "let saved = flow.get(\"mychoice\") || {};\nmsg.payload = saved;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 500,
        "wires": [
            [
                "8d2f27716d5c62e8"
            ]
        ]
    },
    {
        "id": "954b865a40ffcb84",
        "type": "mysql",
        "z": "b38b295d3b6c9224",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 680,
        "y": 500,
        "wires": [
            [
                "7e6d2b06c7b85967",
                "2647c5ae15bcc35c",
                "d60ec0940b5c375d",
                "89c53c4c7ead071f",
                "3e39f038011fc1e8"
            ]
        ]
    },
    {
        "id": "514a61edce8766e1",
        "type": "switch",
        "z": "b38b295d3b6c9224",
        "name": "msg.next",
        "property": "next",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1360,
        "y": 260,
        "wires": [
            [
                "04f8808a78663d3d"
            ]
        ]
    },
    {
        "id": "04f8808a78663d3d",
        "type": "link out",
        "z": "b38b295d3b6c9224",
        "name": "next1",
        "mode": "link",
        "links": [
            "be49e5b4e25b44e7"
        ],
        "x": 1465,
        "y": 260,
        "wires": []
    },
    {
        "id": "be49e5b4e25b44e7",
        "type": "link in",
        "z": "b38b295d3b6c9224",
        "name": "next2",
        "links": [
            "04f8808a78663d3d"
        ],
        "x": 245,
        "y": 560,
        "wires": [
            [
                "2281b26d8d39397d"
            ]
        ]
    },
    {
        "id": "f14793e5187cd92f",
        "type": "catch",
        "z": "b38b295d3b6c9224",
        "name": "",
        "scope": [
            "013410f48b00aa3a"
        ],
        "uncaught": false,
        "x": 210,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "b1f8faab7c0c54cd",
        "type": "moment",
        "z": "b38b295d3b6c9224",
        "name": "just_hours",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": "7",
        "adjType": "hours",
        "adjDir": "subtract",
        "format": "HH:mm",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 830,
        "y": 120,
        "wires": [
            [
                "58c8afbd6406b920"
            ]
        ]
    },
    {
        "id": "1da2f27d85ad1ba3",
        "type": "moment",
        "z": "b38b295d3b6c9224",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 860,
        "y": 80,
        "wires": [
            [
                "58c8afbd6406b920"
            ]
        ]
    },
    {
        "id": "efccecf56c980f1f",
        "type": "moment",
        "z": "b38b295d3b6c9224",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 860,
        "y": 200,
        "wires": [
            [
                "58c8afbd6406b920"
            ]
        ]
    },
    {
        "id": "b6126fcb8d1b3d82",
        "type": "moment",
        "z": "b38b295d3b6c9224",
        "name": "just_hours",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": "7",
        "adjType": "hours",
        "adjDir": "subtract",
        "format": "HH:mm",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 830,
        "y": 240,
        "wires": [
            [
                "58c8afbd6406b920"
            ]
        ]
    },
    {
        "id": "2647c5ae15bcc35c",
        "type": "function",
        "z": "b38b295d3b6c9224",
        "name": "bar_level",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar time_label = [];\nvar data = [];\nconst toTimestamp = (strDate) => {  \n  const dt = new Date(strDate).getTime();  \n  return dt / 1000;  \n}  \nvar max = 10; // so cot\n/*\nif (payload.length - max < 0 ){\n    max = payload.length;\n}\n*/\nif (payload.length >max ){\n     max = payload.length;\n}\n\n\n//var result_div; \n//var div =  Math.round(payload.length / 10);\nvar count_column  = 10;\n\nvar step =  Math.round(payload.length / count_column);\n\n/*\nif ( payload.length / 10 < 10){\n    step = div;\n}else  ( payload.length / 10 >= 10){\n    \n}\n*/\n\n//for(var j = payload.length -1; j >= (payload.length - max);j--){\nfor(var j = 0; j<max;j++){\n    if (j%step == 0){\n \n    let unix_timestamp =  toTimestamp(payload[j].thoi_gian);//\n    var date = new Date(unix_timestamp * 1000);\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var formattedTime = hours + ':' + minutes.substr(-2);\n    time_label.push(formattedTime);\n    //node.warn(unix_timestamp);\n    new_arr_gieng1.push(payload[j].muc_nuoc);\n    }\n    \n}\ndata.push(new_arr_gieng1);\n\nmsg.payload = {};\nvar m={};\n m={\n    \"series\": [\"Biểu đồ cột\"],\n    \"data\":data,\n    \"labels\": time_label\n};\nreturn {payload:[m]};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 580,
        "wires": [
            [
                "8650abe51bc06d2a"
            ]
        ]
    },
    {
        "id": "31a4e2988dabc541",
        "type": "ui_chart",
        "z": "b38b295d3b6c9224",
        "name": "Chart_Flow",
        "group": "ba7eab9ee13251de",
        "order": 1,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "20",
        "removeOlder": "1",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "604800",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1130,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "8650abe51bc06d2a",
        "type": "ui_chart",
        "z": "b38b295d3b6c9224",
        "name": "Bar_Flow",
        "group": "ba7eab9ee13251de",
        "order": 2,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "20",
        "removeOlder": "1",
        "removeOlderPoints": "100",
        "removeOlderUnit": "3600",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1120,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "f67b1e2d43c52315",
        "type": "inject",
        "z": "b38b295d3b6c9224",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 500,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "8d2f27716d5c62e8",
        "type": "sqlstring-format",
        "z": "b38b295d3b6c9224",
        "name": "",
        "query": "SELECT * FROM `mydata2`.`g3` where thoi_gian > ? AND  thoi_gian < ?  LIMIT 1000;",
        "vars": "payload.mytime , payload.mytime2",
        "outField": "topic",
        "x": 510,
        "y": 500,
        "wires": [
            [
                "954b865a40ffcb84"
            ]
        ]
    },
    {
        "id": "1fd9dec3400c70bc",
        "type": "ui_text",
        "z": "b38b295d3b6c9224",
        "group": "20e99841a9498678",
        "order": 8,
        "width": 16,
        "height": 1,
        "name": "label",
        "label": "Bảng dữ liệu",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 950,
        "y": 460,
        "wires": []
    },
    {
        "id": "879ff0b7eecbf67f",
        "type": "ui_text",
        "z": "b38b295d3b6c9224",
        "group": "20e99841a9498678",
        "order": 1,
        "width": 16,
        "height": 1,
        "name": "tu_ngay",
        "label": "Từ ngày",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 400,
        "y": 80,
        "wires": []
    },
    {
        "id": "7e6d2b06c7b85967",
        "type": "function",
        "z": "b38b295d3b6c9224",
        "name": "chart_level",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar count_line  = 20;\n\nvar step =  Math.round(payload.length / count_line);\n\n//var step = 10;\n\nfor(var j = 0; j<payload.length;j++){\n       if (j% step == 0){\n    var gieng1 = { \"x\": payload[j].thoi_gian , \"y\": payload[j].muc_nuoc};\n    new_arr_gieng1.push(gieng1);\n       }\n}\n\n\n\n\n\n\nmsg.payload = [{\n\"series\": [\"Biểu đồ đường\"],\n\"data\": [new_arr_gieng1],\n\"labels\": [\"\"]\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 540,
        "wires": [
            [
                "31a4e2988dabc541"
            ]
        ]
    },
    {
        "id": "20e362cf23bd4b40",
        "type": "http in",
        "z": "b38b295d3b6c9224",
        "name": "",
        "url": "/KT08",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 720,
        "wires": [
            [
                "1d7853683ad54c4d"
            ]
        ]
    },
    {
        "id": "1d7853683ad54c4d",
        "type": "function",
        "z": "b38b295d3b6c9224",
        "name": "saved",
        "func": "let saved = flow.get(\"mychoice\") || {};\nmsg.payload = saved;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 720,
        "wires": [
            [
                "cb4705ca7309161c"
            ]
        ]
    },
    {
        "id": "cb4705ca7309161c",
        "type": "sqlstring-format",
        "z": "b38b295d3b6c9224",
        "name": "sql g3",
        "query": "SELECT * FROM `mydata2`.`g3` where thoi_gian > ? AND  thoi_gian < ? ;",
        "vars": "payload.mytime, payload.mytime2",
        "outField": "topic",
        "x": 610,
        "y": 720,
        "wires": [
            [
                "dc0bc2da0e791cf7"
            ]
        ]
    },
    {
        "id": "dc0bc2da0e791cf7",
        "type": "mysql",
        "z": "b38b295d3b6c9224",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 850,
        "y": 720,
        "wires": [
            [
                "1cd0ab1b0644e9c8"
            ]
        ]
    },
    {
        "id": "1cd0ab1b0644e9c8",
        "type": "function",
        "z": "b38b295d3b6c9224",
        "name": "timetoLocaleString",
        "func": "var payload = msg.payload ;\nfor (var j = 0; j< payload.length;j++){\n    msg.payload[j].thoi_gian =  msg.payload[j].thoi_gian.toLocaleString();\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 720,
        "wires": [
            [
                "5c5a624bdd373d67"
            ]
        ]
    },
    {
        "id": "5c5a624bdd373d67",
        "type": "csv",
        "z": "b38b295d3b6c9224",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "thoi_gian,muc_nuoc,status_level,luu_luong,status_flow,luu_luong_tong,tong_ngay",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1230,
        "y": 720,
        "wires": [
            [
                "bbc23b9d8f492a41"
            ]
        ]
    },
    {
        "id": "bbc23b9d8f492a41",
        "type": "function",
        "z": "b38b295d3b6c9224",
        "name": "Set Headers",
        "func": "msg.headers = {}\nvar file_name = msg.req.originalUrl.replace(\"/\",\"\");\nmsg.headers[\"Content-type\"] = \"text/csv\";\nmsg.headers[\"Content-Disposition\"] = \"attachment; filename=\"+file_name+\".csv\";\nmsg.headers[\"Pragma\"] = \"no-cache\";\nmsg.headers[\"Expires\"] = \"0\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 720,
        "wires": [
            [
                "3496d458733fb33b"
            ]
        ]
    },
    {
        "id": "3496d458733fb33b",
        "type": "http response",
        "z": "b38b295d3b6c9224",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1510,
        "y": 760,
        "wires": []
    },
    {
        "id": "33dc01f780b3e817",
        "type": "function",
        "z": "b38b295d3b6c9224",
        "name": "Set 404",
        "func": "msg.payload = msg.error;\nmsg.statusCode = 404;//resource not found\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 760,
        "wires": [
            [
                "3496d458733fb33b"
            ]
        ]
    },
    {
        "id": "3e0e195e3b3ff819",
        "type": "ui_template",
        "z": "b38b295d3b6c9224",
        "group": "20e99841a9498678",
        "name": "present download link on dashboard",
        "order": 10,
        "width": 16,
        "height": 1,
        "format": "<div >\n    <i class=\"fa fa-file-excel-o\" aria-hidden=\"true\"></i>\n    <a href=\"/KT08\">[Excel] Click để tải về</a>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 950,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "2b874f2f281c0129",
        "type": "catch",
        "z": "b38b295d3b6c9224",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 1200,
        "y": 760,
        "wires": [
            [
                "33dc01f780b3e817"
            ]
        ]
    },
    {
        "id": "f15f254fb8f267d1",
        "type": "comment",
        "z": "b38b295d3b6c9224",
        "name": "LIMIT 100;",
        "info": "",
        "x": 460,
        "y": 560,
        "wires": []
    },
    {
        "id": "89c53c4c7ead071f",
        "type": "function",
        "z": "b38b295d3b6c9224",
        "name": "bar_flow",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar time_label = [];\nvar data = [];\nconst toTimestamp = (strDate) => {  \n  const dt = new Date(strDate).getTime();  \n  return dt / 1000;  \n}  \nvar max = 10; // so cot\n/*\nif (payload.length - max < 0 ){\n    max = payload.length;\n}\n*/\nif (payload.length >max ){\n     max = payload.length;\n}\n\n\n//var result_div; \n//var div =  Math.round(payload.length / 10);\nvar count_column  = 10;\n\nvar step =  Math.round(payload.length / count_column);\n\n/*\nif ( payload.length / 10 < 10){\n    step = div;\n}else  ( payload.length / 10 >= 10){\n    \n}\n*/\n\n//for(var j = payload.length -1; j >= (payload.length - max);j--){\nfor(var j = 0; j<max;j++){\n    if (j%step == 0){\n \n    let unix_timestamp =  toTimestamp(payload[j].thoi_gian);//\n    var date = new Date(unix_timestamp * 1000);\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var formattedTime = hours + ':' + minutes.substr(-2);\n    time_label.push(formattedTime);\n    //node.warn(unix_timestamp);\n    new_arr_gieng1.push(payload[j].luu_luong);\n    }\n    \n}\ndata.push(new_arr_gieng1);\n\nmsg.payload = {};\nvar m={};\n m={\n    \"series\": [\"Biểu đồ cột\"],\n    \"data\":data,\n    \"labels\": time_label\n};\nreturn {payload:[m]};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 660,
        "wires": [
            [
                "71c7748d4794e354"
            ]
        ]
    },
    {
        "id": "18ffbf0b5e88a114",
        "type": "ui_chart",
        "z": "b38b295d3b6c9224",
        "name": "Chart_Flow",
        "group": "7adb0a7a68c0bc56",
        "order": 1,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": "1",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "604800",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1130,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "71c7748d4794e354",
        "type": "ui_chart",
        "z": "b38b295d3b6c9224",
        "name": "Bar_Flow",
        "group": "7adb0a7a68c0bc56",
        "order": 2,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": "1",
        "removeOlderPoints": "100",
        "removeOlderUnit": "3600",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1120,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "d60ec0940b5c375d",
        "type": "function",
        "z": "b38b295d3b6c9224",
        "name": "chart_flow",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar count_line  = 20;\n\nvar step =  Math.round(payload.length / count_line);\n\n//var step = 10;\n\nfor(var j = 0; j<payload.length;j++){\n       if (j% step == 0){\n    var gieng1 = { \"x\": payload[j].thoi_gian , \"y\": payload[j].luu_luong};\n    new_arr_gieng1.push(gieng1);\n       }\n}\n\n\n\n\n\n\nmsg.payload = [{\n\"series\": [\"Biểu đồ đường\"],\n\"data\": [new_arr_gieng1],\n\"labels\": [\"\"]\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 620,
        "wires": [
            [
                "18ffbf0b5e88a114"
            ]
        ]
    },
    {
        "id": "2556f1156972fbc3",
        "type": "ui_gauge",
        "z": "b38b295d3b6c9224",
        "name": "",
        "group": "efa70b9be1525f0b",
        "order": 2,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Lưu Lượng",
        "label": " m3/h",
        "format": "{{msg.luu_luong}}",
        "min": 0,
        "max": "60",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 490,
        "y": 880,
        "wires": []
    },
    {
        "id": "cf0f9b1cefb40066",
        "type": "link in",
        "z": "b38b295d3b6c9224",
        "name": "kt3_detail",
        "links": [
            "38c2694caf4ab0b4"
        ],
        "x": 235,
        "y": 900,
        "wires": [
            [
                "2556f1156972fbc3",
                "316ae6fa7045a04d",
                "285f46d9ab0c11b2",
                "697fe06ba437a26d"
            ]
        ]
    },
    {
        "id": "316ae6fa7045a04d",
        "type": "ui_gauge",
        "z": "b38b295d3b6c9224",
        "name": "",
        "group": "efa70b9be1525f0b",
        "order": 1,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Mực nước",
        "label": " m",
        "format": "{{msg.muc_nuoc}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 490,
        "y": 820,
        "wires": []
    },
    {
        "id": "285f46d9ab0c11b2",
        "type": "ui_gauge",
        "z": "b38b295d3b6c9224",
        "name": "",
        "group": "efa70b9be1525f0b",
        "order": 4,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Lưu Lượng Tổng",
        "label": " m3",
        "format": "{{msg.luu_luong_tong}}",
        "min": 0,
        "max": "999999999",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 510,
        "y": 1000,
        "wires": []
    },
    {
        "id": "3e39f038011fc1e8",
        "type": "function",
        "z": "b38b295d3b6c9224",
        "name": "data2table",
        "func": "var arr = [];\nvar payload = msg.payload;\nfor (var i = 0; i < msg.payload.length; i++) {\n    var d = new Date(payload[i].thoi_gian);\n    var text = d.toLocaleString();\n    var obj = { \"Thời gian\": text, \"Mực nước\": payload[i].muc_nuoc, \"TT_Mực nước\": payload[i].status_level, \"Lưu lượng\": payload[i].luu_luong, \"TT_Lưu Lượng\": payload[i].status_flow,\"Tổng\": payload[i].luu_luong_tong, \"Tổng 24h\": payload[i].tong_ngay};\n    arr.push(obj);\n}\nmsg.payload = arr;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 500,
        "wires": [
            [
                "eb34dd6554909190"
            ]
        ]
    },
    {
        "id": "eb34dd6554909190",
        "type": "ui_table",
        "z": "b38b295d3b6c9224",
        "group": "20e99841a9498678",
        "name": "",
        "order": 9,
        "width": 16,
        "height": 9,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1110,
        "y": 500,
        "wires": []
    },
    {
        "id": "697fe06ba437a26d",
        "type": "ui_gauge",
        "z": "b38b295d3b6c9224",
        "name": "",
        "group": "efa70b9be1525f0b",
        "order": 3,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Tổng 24h",
        "label": " m3",
        "format": "{{msg.tong_ngay}}",
        "min": 0,
        "max": "999",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 480,
        "y": 940,
        "wires": []
    },
    {
        "id": "60659f7c7dc380e0",
        "type": "ui_text_input",
        "z": "658f9a100caf4b2d",
        "name": "From time",
        "label": "Time",
        "tooltip": "",
        "group": "1bd5946093df5d7d",
        "order": 3,
        "width": 8,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": "10",
        "topic": "time",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 580,
        "y": 120,
        "wires": [
            [
                "755277fdba6c4248"
            ]
        ]
    },
    {
        "id": "8acded8f8694f15c",
        "type": "join",
        "z": "658f9a100caf4b2d",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "1",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1030,
        "y": 160,
        "wires": [
            [
                "699fb66eeea84c99"
            ]
        ]
    },
    {
        "id": "3ceb808f9c6b88af",
        "type": "ui_ui_control",
        "z": "658f9a100caf4b2d",
        "name": "",
        "events": "change",
        "x": 160,
        "y": 220,
        "wires": [
            [
                "636a8583e1a67123"
            ]
        ]
    },
    {
        "id": "636a8583e1a67123",
        "type": "switch",
        "z": "658f9a100caf4b2d",
        "name": "BP Tab?",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Lich_Su",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 200,
        "y": 140,
        "wires": [
            [
                "8bbb0dd749084338"
            ]
        ]
    },
    {
        "id": "8bbb0dd749084338",
        "type": "function",
        "z": "658f9a100caf4b2d",
        "name": "Time Of Day",
        "func": "//let current_time = convertTZ(new Date(), \"Asia/Jakarta\");\n//var now = Date().toLocaleString('en-US', { timeZone: 'Asia/Jakarta' });\n//let now =  current_time;//// Tue Apr 20 2012 17:10:30 GMT+0700 (Western Indonesia Time)\nlet now = new Date();\n\nlet msg1 = {payload: now}\nlet msg2 = {payload: (now.getTime() - now.getTimezoneOffset()*60000) % (24 * 3600 * 1000)}\nlet msg3 = {topic:'name', payload: 'Gieng1'}\nlet msg4 = {payload: now}\nlet msg5 = {payload: (now.getTime() - now.getTimezoneOffset()*60000) % (24 * 3600 * 1000)}\nreturn [msg1, msg2,msg3,msg4,msg5];\n\nfunction convertTZ(date, tzString) {\n    return new Date((typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {timeZone: tzString}));   \n}\n",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 140,
        "wires": [
            [
                "ead2ae5dfeb4b51a"
            ],
            [
                "60659f7c7dc380e0"
            ],
            [
                "a0eb5777e0d9d5bf"
            ],
            [
                "6cf944ca140a9f0b"
            ],
            [
                "7bb3f001287e76ea"
            ]
        ]
    },
    {
        "id": "ead2ae5dfeb4b51a",
        "type": "ui_date_picker",
        "z": "658f9a100caf4b2d",
        "name": "From date",
        "label": "",
        "group": "1bd5946093df5d7d",
        "order": 2,
        "width": 8,
        "height": 1,
        "passthru": true,
        "topic": "date",
        "topicType": "str",
        "className": "",
        "x": 590,
        "y": 80,
        "wires": [
            [
                "d63b8146eb88e8dd"
            ]
        ]
    },
    {
        "id": "a90f945d82cc7062",
        "type": "function",
        "z": "658f9a100caf4b2d",
        "name": "Truncate to start of day",
        "func": "msg.payload = Math.floor(msg.payload/(24*3600*1000))*24*3600*1000\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "337552ac61dc558b",
        "type": "switch",
        "z": "658f9a100caf4b2d",
        "name": "Submit?",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "form",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 580,
        "y": 320,
        "wires": [
            [
                "ae056a18332eb9aa"
            ]
        ]
    },
    {
        "id": "14a3aced2ea038e5",
        "type": "change",
        "z": "658f9a100caf4b2d",
        "name": "Clear values",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"rate\":\"\",\"diastolic\":\"\",\"systolic\":\"\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "e5884269986a3075",
        "type": "ui_toast",
        "z": "658f9a100caf4b2d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Cancel",
        "cancel": "OK",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1010,
        "y": 260,
        "wires": [
            [
                "c03e26461dfa6ca6"
            ]
        ]
    },
    {
        "id": "ae056a18332eb9aa",
        "type": "function",
        "z": "658f9a100caf4b2d",
        "name": "Prepare for OK/Cancel",
        "func": "let saved = flow.get(\"mychoice\") || {};\n var dt = new Date();\n/*\nvar date = new Date(saved.mytime - 420*60000);\nvar date2 = new Date(saved.mytime2 -420*60000);\nvar tu_ngay = (\"Từ ngày: \"+date.getDate()+\n          \"/\"+(date.getMonth()+1)+\n          \"/\"+date.getFullYear()+\n          \" \"+date.getHours()+\n          \":\"+date.getMinutes());\nvar den_ngay = (\"Đến ngày: \"+date2.getDate()+\n          \"/\"+(date2.getMonth()+1)+\n          \"/\"+date2.getFullYear()+\n          \" \"+date2.getHours()+\n          \":\"+date2.getMinutes());\n          */\nif (saved.mytime<saved.mytime2){\nmsg.payload = `Truy xuất thông tin từ ngày: ${saved.mytime} đến ngày:  ${saved.mytime2}`\nmsg.payloadSaved = saved\nmsg.next = true;\n}else{\nmsg.payload = `Thông tin nhập không hợp lệ :\\n   ${saved.mytime}  ${saved.mytime2}`\n msg.next = false;\n   \n}\nmsg.topic = null\nreturn msg;\n\n\nfunction convertTZ(date, tzString) {\n    return new Date((typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {timeZone: tzString}));   \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 280,
        "wires": [
            [
                "e5884269986a3075"
            ]
        ]
    },
    {
        "id": "c03e26461dfa6ca6",
        "type": "switch",
        "z": "658f9a100caf4b2d",
        "name": "OK?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1170,
        "y": 260,
        "wires": [
            [
                "fb8b8419ea67ad62"
            ]
        ]
    },
    {
        "id": "a0eb5777e0d9d5bf",
        "type": "function",
        "z": "658f9a100caf4b2d",
        "name": "name",
        "func": "flow.set(\"name\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 160,
        "wires": [
            [
                "8acded8f8694f15c"
            ]
        ]
    },
    {
        "id": "97da24851a25bf59",
        "type": "ui_button",
        "z": "658f9a100caf4b2d",
        "name": "",
        "group": "1bd5946093df5d7d",
        "order": 7,
        "width": 16,
        "height": 1,
        "passthru": false,
        "label": "Truy xuất",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 580,
        "y": 280,
        "wires": [
            [
                "ae056a18332eb9aa"
            ]
        ]
    },
    {
        "id": "699fb66eeea84c99",
        "type": "function",
        "z": "658f9a100caf4b2d",
        "name": "",
        "func": "//if ( msg.payload.hasOwnProperty('time') && msg.payload.hasOwnProperty('date')&& msg.payload.hasOwnProperty('time2') && msg.payload.hasOwnProperty('date2')){\n    msg.payload.mytime = msg.payload.date +\" \" +msg.payload.time; \n    msg.payload.mytime2 =msg.payload.date2 +\" \" +msg.payload.time2; \n    flow.set(\"mychoice\", msg.payload);\n//}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "c6a636a24aae2573",
        "type": "inject",
        "z": "658f9a100caf4b2d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 580,
        "y": 360,
        "wires": [
            [
                "ae056a18332eb9aa"
            ]
        ]
    },
    {
        "id": "6cf944ca140a9f0b",
        "type": "ui_date_picker",
        "z": "658f9a100caf4b2d",
        "name": "To date",
        "label": "",
        "group": "1bd5946093df5d7d",
        "order": 5,
        "width": 8,
        "height": 1,
        "passthru": true,
        "topic": "date2",
        "topicType": "str",
        "className": "",
        "x": 580,
        "y": 200,
        "wires": [
            [
                "8e6f2e1250f187d1"
            ]
        ]
    },
    {
        "id": "7bb3f001287e76ea",
        "type": "ui_text_input",
        "z": "658f9a100caf4b2d",
        "name": "To time",
        "label": "Time2",
        "tooltip": "",
        "group": "1bd5946093df5d7d",
        "order": 6,
        "width": 8,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": "10",
        "topic": "time2",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 580,
        "y": 240,
        "wires": [
            [
                "c349e52d3eaa095b"
            ]
        ]
    },
    {
        "id": "36ecd585ac11aa3e",
        "type": "ui_text",
        "z": "658f9a100caf4b2d",
        "group": "1bd5946093df5d7d",
        "order": 4,
        "width": 16,
        "height": 1,
        "name": "den_ngay",
        "label": "Đến ngày",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 340,
        "y": 200,
        "wires": []
    },
    {
        "id": "2a2e99901088639d",
        "type": "inject",
        "z": "658f9a100caf4b2d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 500,
        "wires": [
            [
                "158708c0f9f04c9a"
            ]
        ]
    },
    {
        "id": "158708c0f9f04c9a",
        "type": "function",
        "z": "658f9a100caf4b2d",
        "name": "saved",
        "func": "let saved = flow.get(\"mychoice\") || {};\nmsg.payload = saved;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 500,
        "wires": [
            [
                "57dd0e53d12277bc"
            ]
        ]
    },
    {
        "id": "26987abf67f5bbf6",
        "type": "mysql",
        "z": "658f9a100caf4b2d",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 620,
        "y": 500,
        "wires": [
            [
                "0926397b78085692",
                "ae4576c8f91f4efa",
                "97a50c4362c846bb",
                "2e64a3ef51a79762",
                "0c082f1c165e81cd"
            ]
        ]
    },
    {
        "id": "fb8b8419ea67ad62",
        "type": "switch",
        "z": "658f9a100caf4b2d",
        "name": "msg.next",
        "property": "next",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1300,
        "y": 260,
        "wires": [
            [
                "e56a6f516236709c"
            ]
        ]
    },
    {
        "id": "e56a6f516236709c",
        "type": "link out",
        "z": "658f9a100caf4b2d",
        "name": "next1",
        "mode": "link",
        "links": [
            "77bf02e73e819317"
        ],
        "x": 1405,
        "y": 260,
        "wires": []
    },
    {
        "id": "77bf02e73e819317",
        "type": "link in",
        "z": "658f9a100caf4b2d",
        "name": "next2",
        "links": [
            "e56a6f516236709c"
        ],
        "x": 185,
        "y": 560,
        "wires": [
            [
                "158708c0f9f04c9a"
            ]
        ]
    },
    {
        "id": "2b4554cdb90d85eb",
        "type": "catch",
        "z": "658f9a100caf4b2d",
        "name": "",
        "scope": [
            "013410f48b00aa3a"
        ],
        "uncaught": false,
        "x": 150,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "755277fdba6c4248",
        "type": "moment",
        "z": "658f9a100caf4b2d",
        "name": "just_hours",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": "7",
        "adjType": "hours",
        "adjDir": "subtract",
        "format": "HH:mm",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 770,
        "y": 120,
        "wires": [
            [
                "8acded8f8694f15c"
            ]
        ]
    },
    {
        "id": "d63b8146eb88e8dd",
        "type": "moment",
        "z": "658f9a100caf4b2d",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 800,
        "y": 80,
        "wires": [
            [
                "8acded8f8694f15c"
            ]
        ]
    },
    {
        "id": "8e6f2e1250f187d1",
        "type": "moment",
        "z": "658f9a100caf4b2d",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 800,
        "y": 200,
        "wires": [
            [
                "8acded8f8694f15c"
            ]
        ]
    },
    {
        "id": "c349e52d3eaa095b",
        "type": "moment",
        "z": "658f9a100caf4b2d",
        "name": "just_hours",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": "7",
        "adjType": "hours",
        "adjDir": "subtract",
        "format": "HH:mm",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 770,
        "y": 240,
        "wires": [
            [
                "8acded8f8694f15c"
            ]
        ]
    },
    {
        "id": "ae4576c8f91f4efa",
        "type": "function",
        "z": "658f9a100caf4b2d",
        "name": "bar_level",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar time_label = [];\nvar data = [];\nconst toTimestamp = (strDate) => {  \n  const dt = new Date(strDate).getTime();  \n  return dt / 1000;  \n}  \nvar max = 10; // so cot\n/*\nif (payload.length - max < 0 ){\n    max = payload.length;\n}\n*/\nif (payload.length >max ){\n     max = payload.length;\n}\n\n\n//var result_div; \n//var div =  Math.round(payload.length / 10);\nvar count_column  = 10;\n\nvar step =  Math.round(payload.length / count_column);\n\n/*\nif ( payload.length / 10 < 10){\n    step = div;\n}else  ( payload.length / 10 >= 10){\n    \n}\n*/\n\n//for(var j = payload.length -1; j >= (payload.length - max);j--){\nfor(var j = 0; j<max;j++){\n    if (j%step == 0){\n \n    let unix_timestamp =  toTimestamp(payload[j].thoi_gian);//\n    var date = new Date(unix_timestamp * 1000);\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var formattedTime = hours + ':' + minutes.substr(-2);\n    time_label.push(formattedTime);\n    //node.warn(unix_timestamp);\n    new_arr_gieng1.push(payload[j].muc_nuoc);\n    }\n    \n}\ndata.push(new_arr_gieng1);\n\nmsg.payload = {};\nvar m={};\n m={\n    \"series\": [\"Biểu đồ cột\"],\n    \"data\":data,\n    \"labels\": time_label\n};\nreturn {payload:[m]};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 580,
        "wires": [
            [
                "60fe98a0985d5599"
            ]
        ]
    },
    {
        "id": "829fde332bebfb3a",
        "type": "ui_chart",
        "z": "658f9a100caf4b2d",
        "name": "Chart_Flow",
        "group": "03cf973d42c5deaf",
        "order": 1,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "20",
        "removeOlder": "1",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "604800",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1070,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "60fe98a0985d5599",
        "type": "ui_chart",
        "z": "658f9a100caf4b2d",
        "name": "Bar_Flow",
        "group": "03cf973d42c5deaf",
        "order": 2,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "20",
        "removeOlder": "1",
        "removeOlderPoints": "100",
        "removeOlderUnit": "3600",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1060,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "280d7e27e10453a7",
        "type": "inject",
        "z": "658f9a100caf4b2d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 440,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "57dd0e53d12277bc",
        "type": "sqlstring-format",
        "z": "658f9a100caf4b2d",
        "name": "",
        "query": "SELECT * FROM `mydata2`.`g4` where thoi_gian > ? AND  thoi_gian < ?  LIMIT 1000;",
        "vars": "payload.mytime , payload.mytime2",
        "outField": "topic",
        "x": 450,
        "y": 500,
        "wires": [
            [
                "26987abf67f5bbf6"
            ]
        ]
    },
    {
        "id": "176c75a9e1afaabb",
        "type": "ui_text",
        "z": "658f9a100caf4b2d",
        "group": "1bd5946093df5d7d",
        "order": 8,
        "width": 16,
        "height": 1,
        "name": "label",
        "label": "Bảng dữ liệu",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 890,
        "y": 460,
        "wires": []
    },
    {
        "id": "85c4bea0f8938318",
        "type": "ui_text",
        "z": "658f9a100caf4b2d",
        "group": "1bd5946093df5d7d",
        "order": 1,
        "width": 16,
        "height": 1,
        "name": "tu_ngay",
        "label": "Từ ngày",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 340,
        "y": 80,
        "wires": []
    },
    {
        "id": "0926397b78085692",
        "type": "function",
        "z": "658f9a100caf4b2d",
        "name": "chart_level",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar count_line  = 20;\n\nvar step =  Math.round(payload.length / count_line);\n\n//var step = 10;\n\nfor(var j = 0; j<payload.length;j++){\n       if (j% step == 0){\n    var gieng1 = { \"x\": payload[j].thoi_gian , \"y\": payload[j].muc_nuoc};\n    new_arr_gieng1.push(gieng1);\n       }\n}\n\n\n\n\n\n\nmsg.payload = [{\n\"series\": [\"Biểu đồ đường\"],\n\"data\": [new_arr_gieng1],\n\"labels\": [\"\"]\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 540,
        "wires": [
            [
                "829fde332bebfb3a"
            ]
        ]
    },
    {
        "id": "d9236aa4bc3aeb7e",
        "type": "http in",
        "z": "658f9a100caf4b2d",
        "name": "",
        "url": "/KT07",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 720,
        "wires": [
            [
                "56e8d6c0431a225e"
            ]
        ]
    },
    {
        "id": "56e8d6c0431a225e",
        "type": "function",
        "z": "658f9a100caf4b2d",
        "name": "saved",
        "func": "let saved = flow.get(\"mychoice\") || {};\nmsg.payload = saved;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 720,
        "wires": [
            [
                "45fb3193bf90457a"
            ]
        ]
    },
    {
        "id": "45fb3193bf90457a",
        "type": "sqlstring-format",
        "z": "658f9a100caf4b2d",
        "name": "sql g4",
        "query": "SELECT * FROM `mydata2`.`g4` where thoi_gian > ? AND  thoi_gian < ? ;",
        "vars": "payload.mytime, payload.mytime2",
        "outField": "topic",
        "x": 550,
        "y": 720,
        "wires": [
            [
                "037e34e81a3fe7a5"
            ]
        ]
    },
    {
        "id": "037e34e81a3fe7a5",
        "type": "mysql",
        "z": "658f9a100caf4b2d",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 790,
        "y": 720,
        "wires": [
            [
                "a2b00ae5e1d24097"
            ]
        ]
    },
    {
        "id": "a2b00ae5e1d24097",
        "type": "function",
        "z": "658f9a100caf4b2d",
        "name": "timetoLocaleString",
        "func": "var payload = msg.payload ;\nfor (var j = 0; j< payload.length;j++){\n    msg.payload[j].thoi_gian =  msg.payload[j].thoi_gian.toLocaleString();\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 720,
        "wires": [
            [
                "f24bf7fe1013b1a3"
            ]
        ]
    },
    {
        "id": "f24bf7fe1013b1a3",
        "type": "csv",
        "z": "658f9a100caf4b2d",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "thoi_gian,muc_nuoc,status_level,luu_luong,status_flow,luu_luong_tong,tong_ngay",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1170,
        "y": 720,
        "wires": [
            [
                "6e78732f8e29745e"
            ]
        ]
    },
    {
        "id": "6e78732f8e29745e",
        "type": "function",
        "z": "658f9a100caf4b2d",
        "name": "Set Headers",
        "func": "msg.headers = {}\nvar file_name = msg.req.originalUrl.replace(\"/\",\"\");\nmsg.headers[\"Content-type\"] = \"text/csv\";\nmsg.headers[\"Content-Disposition\"] = \"attachment; filename=\"+file_name+\".csv\";\nmsg.headers[\"Pragma\"] = \"no-cache\";\nmsg.headers[\"Expires\"] = \"0\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 720,
        "wires": [
            [
                "806aa301bef6373b"
            ]
        ]
    },
    {
        "id": "806aa301bef6373b",
        "type": "http response",
        "z": "658f9a100caf4b2d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1450,
        "y": 760,
        "wires": []
    },
    {
        "id": "9d3fa2d357ee5fc7",
        "type": "function",
        "z": "658f9a100caf4b2d",
        "name": "Set 404",
        "func": "msg.payload = msg.error;\nmsg.statusCode = 404;//resource not found\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 760,
        "wires": [
            [
                "806aa301bef6373b"
            ]
        ]
    },
    {
        "id": "1b8ffa9ff9b0b6dc",
        "type": "ui_template",
        "z": "658f9a100caf4b2d",
        "group": "1bd5946093df5d7d",
        "name": "present download link on dashboard",
        "order": 10,
        "width": 16,
        "height": 1,
        "format": "<div >\n    <i class=\"fa fa-file-excel-o\" aria-hidden=\"true\"></i>\n    <a href=\"/KT07\">[Excel] Click để tải về</a>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "43ea544e2c219620",
        "type": "catch",
        "z": "658f9a100caf4b2d",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 1140,
        "y": 760,
        "wires": [
            [
                "9d3fa2d357ee5fc7"
            ]
        ]
    },
    {
        "id": "6911721a99f45d28",
        "type": "comment",
        "z": "658f9a100caf4b2d",
        "name": "LIMIT 100;",
        "info": "",
        "x": 400,
        "y": 560,
        "wires": []
    },
    {
        "id": "2e64a3ef51a79762",
        "type": "function",
        "z": "658f9a100caf4b2d",
        "name": "bar_flow",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar time_label = [];\nvar data = [];\nconst toTimestamp = (strDate) => {  \n  const dt = new Date(strDate).getTime();  \n  return dt / 1000;  \n}  \nvar max = 10; // so cot\n/*\nif (payload.length - max < 0 ){\n    max = payload.length;\n}\n*/\nif (payload.length >max ){\n     max = payload.length;\n}\n\n\n//var result_div; \n//var div =  Math.round(payload.length / 10);\nvar count_column  = 10;\n\nvar step =  Math.round(payload.length / count_column);\n\n/*\nif ( payload.length / 10 < 10){\n    step = div;\n}else  ( payload.length / 10 >= 10){\n    \n}\n*/\n\n//for(var j = payload.length -1; j >= (payload.length - max);j--){\nfor(var j = 0; j<max;j++){\n    if (j%step == 0){\n \n    let unix_timestamp =  toTimestamp(payload[j].thoi_gian);//\n    var date = new Date(unix_timestamp * 1000);\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var formattedTime = hours + ':' + minutes.substr(-2);\n    time_label.push(formattedTime);\n    //node.warn(unix_timestamp);\n    new_arr_gieng1.push(payload[j].luu_luong);\n    }\n    \n}\ndata.push(new_arr_gieng1);\n\nmsg.payload = {};\nvar m={};\n m={\n    \"series\": [\"Biểu đồ cột\"],\n    \"data\":data,\n    \"labels\": time_label\n};\nreturn {payload:[m]};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 660,
        "wires": [
            [
                "79cdc01a5f579d59"
            ]
        ]
    },
    {
        "id": "9d887a257b267091",
        "type": "ui_chart",
        "z": "658f9a100caf4b2d",
        "name": "Chart_Flow",
        "group": "966107d5fbba8c10",
        "order": 1,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": "1",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "604800",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1070,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "79cdc01a5f579d59",
        "type": "ui_chart",
        "z": "658f9a100caf4b2d",
        "name": "Bar_Flow",
        "group": "966107d5fbba8c10",
        "order": 2,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": "1",
        "removeOlderPoints": "100",
        "removeOlderUnit": "3600",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1060,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "97a50c4362c846bb",
        "type": "function",
        "z": "658f9a100caf4b2d",
        "name": "chart_flow",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar count_line  = 20;\n\nvar step =  Math.round(payload.length / count_line);\n\n//var step = 10;\n\nfor(var j = 0; j<payload.length;j++){\n       if (j% step == 0){\n    var gieng1 = { \"x\": payload[j].thoi_gian , \"y\": payload[j].luu_luong};\n    new_arr_gieng1.push(gieng1);\n       }\n}\n\n\n\n\n\n\nmsg.payload = [{\n\"series\": [\"Biểu đồ đường\"],\n\"data\": [new_arr_gieng1],\n\"labels\": [\"\"]\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 620,
        "wires": [
            [
                "9d887a257b267091"
            ]
        ]
    },
    {
        "id": "72f3cacd2e9936b5",
        "type": "ui_gauge",
        "z": "658f9a100caf4b2d",
        "name": "",
        "group": "81ce2336099cf087",
        "order": 2,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Lưu Lượng",
        "label": " m3/h",
        "format": "{{msg.luu_luong}}",
        "min": 0,
        "max": "60",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 430,
        "y": 880,
        "wires": []
    },
    {
        "id": "426ace57ba95c4ac",
        "type": "link in",
        "z": "658f9a100caf4b2d",
        "name": "kt5_detail",
        "links": [
            "110e2d81b2d2ceab"
        ],
        "x": 235,
        "y": 900,
        "wires": [
            [
                "72f3cacd2e9936b5",
                "fa9f8f33b147096d",
                "4b7f3abbf64b12dc",
                "fcf343dcb117b248"
            ]
        ]
    },
    {
        "id": "fa9f8f33b147096d",
        "type": "ui_gauge",
        "z": "658f9a100caf4b2d",
        "name": "",
        "group": "81ce2336099cf087",
        "order": 1,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Mực nước",
        "label": " m",
        "format": "{{msg.muc_nuoc}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 430,
        "y": 820,
        "wires": []
    },
    {
        "id": "4b7f3abbf64b12dc",
        "type": "ui_gauge",
        "z": "658f9a100caf4b2d",
        "name": "",
        "group": "81ce2336099cf087",
        "order": 4,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Lưu Lượng Tổng",
        "label": " m3",
        "format": "{{msg.luu_luong_tong}}",
        "min": 0,
        "max": "999999999",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 450,
        "y": 1000,
        "wires": []
    },
    {
        "id": "0c082f1c165e81cd",
        "type": "function",
        "z": "658f9a100caf4b2d",
        "name": "data2table",
        "func": "var arr = [];\nvar payload = msg.payload;\nfor (var i = 0; i < msg.payload.length; i++) {\n    var d = new Date(payload[i].thoi_gian);\n    var text = d.toLocaleString();\n    var obj = { \"Thời gian\": text, \"Mực nước\": payload[i].muc_nuoc, \"TT_Mực nước\": payload[i].status_level, \"Lưu lượng\": payload[i].luu_luong, \"TT_Lưu Lượng\": payload[i].status_flow,\"Tổng\": payload[i].luu_luong_tong, \"Tổng 24h\": payload[i].tong_ngay};\n    arr.push(obj);\n}\nmsg.payload = arr;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 500,
        "wires": [
            [
                "029c38579548920a"
            ]
        ]
    },
    {
        "id": "029c38579548920a",
        "type": "ui_table",
        "z": "658f9a100caf4b2d",
        "group": "1bd5946093df5d7d",
        "name": "",
        "order": 9,
        "width": 16,
        "height": 9,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1050,
        "y": 500,
        "wires": []
    },
    {
        "id": "fcf343dcb117b248",
        "type": "ui_gauge",
        "z": "658f9a100caf4b2d",
        "name": "",
        "group": "81ce2336099cf087",
        "order": 3,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Tổng 24h",
        "label": " m3",
        "format": "{{msg.tong_ngay}}",
        "min": 0,
        "max": "999",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 420,
        "y": 940,
        "wires": []
    },
    {
        "id": "88676363a7b16c8c",
        "type": "ui_text_input",
        "z": "341b998efcc0164b",
        "name": "From time",
        "label": "Time",
        "tooltip": "",
        "group": "ee1b8739a8535b3b",
        "order": 3,
        "width": 8,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": "10",
        "topic": "time",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 520,
        "y": 120,
        "wires": [
            [
                "25bfd08cdd1d4a68"
            ]
        ]
    },
    {
        "id": "fdd16deff8a6f893",
        "type": "join",
        "z": "341b998efcc0164b",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "1",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 970,
        "y": 160,
        "wires": [
            [
                "946e1480432add99"
            ]
        ]
    },
    {
        "id": "ea2ceb9f6522805d",
        "type": "ui_ui_control",
        "z": "341b998efcc0164b",
        "name": "",
        "events": "change",
        "x": 100,
        "y": 220,
        "wires": [
            [
                "c34e6295da116e58"
            ]
        ]
    },
    {
        "id": "c34e6295da116e58",
        "type": "switch",
        "z": "341b998efcc0164b",
        "name": "BP Tab?",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Lich_Su",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 140,
        "y": 140,
        "wires": [
            [
                "7d2befcef61e8cca"
            ]
        ]
    },
    {
        "id": "7d2befcef61e8cca",
        "type": "function",
        "z": "341b998efcc0164b",
        "name": "Time Of Day",
        "func": "//let current_time = convertTZ(new Date(), \"Asia/Jakarta\");\n//var now = Date().toLocaleString('en-US', { timeZone: 'Asia/Jakarta' });\n//let now =  current_time;//// Tue Apr 20 2012 17:10:30 GMT+0700 (Western Indonesia Time)\nlet now = new Date();\n\nlet msg1 = {payload: now}\nlet msg2 = {payload: (now.getTime() - now.getTimezoneOffset()*60000) % (24 * 3600 * 1000)}\nlet msg3 = {topic:'name', payload: 'Gieng1'}\nlet msg4 = {payload: now}\nlet msg5 = {payload: (now.getTime() - now.getTimezoneOffset()*60000) % (24 * 3600 * 1000)}\nreturn [msg1, msg2,msg3,msg4,msg5];\n\nfunction convertTZ(date, tzString) {\n    return new Date((typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {timeZone: tzString}));   \n}\n",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 140,
        "wires": [
            [
                "306d1d7ceeb7f4ef"
            ],
            [
                "88676363a7b16c8c"
            ],
            [
                "4f65a58bfc35608e"
            ],
            [
                "c9c2b13bf4f0bcf2"
            ],
            [
                "bcbcc07bafdef047"
            ]
        ]
    },
    {
        "id": "306d1d7ceeb7f4ef",
        "type": "ui_date_picker",
        "z": "341b998efcc0164b",
        "name": "From date",
        "label": "",
        "group": "ee1b8739a8535b3b",
        "order": 2,
        "width": 8,
        "height": 1,
        "passthru": true,
        "topic": "date",
        "topicType": "str",
        "className": "",
        "x": 530,
        "y": 80,
        "wires": [
            [
                "c563e11c39f7716c"
            ]
        ]
    },
    {
        "id": "33f916e519de4be9",
        "type": "function",
        "z": "341b998efcc0164b",
        "name": "Truncate to start of day",
        "func": "msg.payload = Math.floor(msg.payload/(24*3600*1000))*24*3600*1000\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "f7a8c9541ad5b314",
        "type": "switch",
        "z": "341b998efcc0164b",
        "name": "Submit?",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "form",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 520,
        "y": 320,
        "wires": [
            [
                "b5bb71efb65ac97d"
            ]
        ]
    },
    {
        "id": "0bab63216c1afc3e",
        "type": "change",
        "z": "341b998efcc0164b",
        "name": "Clear values",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"rate\":\"\",\"diastolic\":\"\",\"systolic\":\"\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "e255c748539fdec0",
        "type": "ui_toast",
        "z": "341b998efcc0164b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Cancel",
        "cancel": "OK",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 950,
        "y": 260,
        "wires": [
            [
                "14f3861f82e38c04"
            ]
        ]
    },
    {
        "id": "b5bb71efb65ac97d",
        "type": "function",
        "z": "341b998efcc0164b",
        "name": "Prepare for OK/Cancel",
        "func": "let saved = flow.get(\"mychoice\") || {};\n var dt = new Date();\n/*\nvar date = new Date(saved.mytime - 420*60000);\nvar date2 = new Date(saved.mytime2 -420*60000);\nvar tu_ngay = (\"Từ ngày: \"+date.getDate()+\n          \"/\"+(date.getMonth()+1)+\n          \"/\"+date.getFullYear()+\n          \" \"+date.getHours()+\n          \":\"+date.getMinutes());\nvar den_ngay = (\"Đến ngày: \"+date2.getDate()+\n          \"/\"+(date2.getMonth()+1)+\n          \"/\"+date2.getFullYear()+\n          \" \"+date2.getHours()+\n          \":\"+date2.getMinutes());\n          */\nif (saved.mytime<saved.mytime2){\nmsg.payload = `Truy xuất thông tin từ ngày: ${saved.mytime} đến ngày:  ${saved.mytime2}`\nmsg.payloadSaved = saved\nmsg.next = true;\n}else{\nmsg.payload = `Thông tin nhập không hợp lệ :\\n   ${saved.mytime}  ${saved.mytime2}`\n msg.next = false;\n   \n}\nmsg.topic = null\nreturn msg;\n\n\nfunction convertTZ(date, tzString) {\n    return new Date((typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {timeZone: tzString}));   \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 280,
        "wires": [
            [
                "e255c748539fdec0"
            ]
        ]
    },
    {
        "id": "14f3861f82e38c04",
        "type": "switch",
        "z": "341b998efcc0164b",
        "name": "OK?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1110,
        "y": 260,
        "wires": [
            [
                "803775182e6355d1"
            ]
        ]
    },
    {
        "id": "4f65a58bfc35608e",
        "type": "function",
        "z": "341b998efcc0164b",
        "name": "name",
        "func": "flow.set(\"name\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 160,
        "wires": [
            [
                "fdd16deff8a6f893"
            ]
        ]
    },
    {
        "id": "467ccb675f413094",
        "type": "ui_button",
        "z": "341b998efcc0164b",
        "name": "",
        "group": "ee1b8739a8535b3b",
        "order": 7,
        "width": 16,
        "height": 1,
        "passthru": false,
        "label": "Truy xuất",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 520,
        "y": 280,
        "wires": [
            [
                "b5bb71efb65ac97d"
            ]
        ]
    },
    {
        "id": "946e1480432add99",
        "type": "function",
        "z": "341b998efcc0164b",
        "name": "",
        "func": "//if ( msg.payload.hasOwnProperty('time') && msg.payload.hasOwnProperty('date')&& msg.payload.hasOwnProperty('time2') && msg.payload.hasOwnProperty('date2')){\n    msg.payload.mytime = msg.payload.date +\" \" +msg.payload.time; \n    msg.payload.mytime2 =msg.payload.date2 +\" \" +msg.payload.time2; \n    flow.set(\"mychoice\", msg.payload);\n//}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "360112ca941734b4",
        "type": "inject",
        "z": "341b998efcc0164b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 520,
        "y": 360,
        "wires": [
            [
                "b5bb71efb65ac97d"
            ]
        ]
    },
    {
        "id": "c9c2b13bf4f0bcf2",
        "type": "ui_date_picker",
        "z": "341b998efcc0164b",
        "name": "To date",
        "label": "",
        "group": "ee1b8739a8535b3b",
        "order": 5,
        "width": 8,
        "height": 1,
        "passthru": true,
        "topic": "date2",
        "topicType": "str",
        "className": "",
        "x": 520,
        "y": 200,
        "wires": [
            [
                "fe464f582b65d9f7"
            ]
        ]
    },
    {
        "id": "bcbcc07bafdef047",
        "type": "ui_text_input",
        "z": "341b998efcc0164b",
        "name": "To time",
        "label": "Time2",
        "tooltip": "",
        "group": "ee1b8739a8535b3b",
        "order": 6,
        "width": 8,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": "10",
        "topic": "time2",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 520,
        "y": 240,
        "wires": [
            [
                "a9a7e60b437d7cdb"
            ]
        ]
    },
    {
        "id": "422f16f888898b2d",
        "type": "ui_text",
        "z": "341b998efcc0164b",
        "group": "ee1b8739a8535b3b",
        "order": 4,
        "width": 16,
        "height": 1,
        "name": "den_ngay",
        "label": "Đến ngày",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 280,
        "y": 200,
        "wires": []
    },
    {
        "id": "0fd71e2c400628fc",
        "type": "inject",
        "z": "341b998efcc0164b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 500,
        "wires": [
            [
                "9bf4a420ba6ac31d"
            ]
        ]
    },
    {
        "id": "9bf4a420ba6ac31d",
        "type": "function",
        "z": "341b998efcc0164b",
        "name": "saved",
        "func": "let saved = flow.get(\"mychoice\") || {};\nmsg.payload = saved;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 500,
        "wires": [
            [
                "08c8e5e24f28c6b2"
            ]
        ]
    },
    {
        "id": "9cf9e81898f31f78",
        "type": "mysql",
        "z": "341b998efcc0164b",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 560,
        "y": 500,
        "wires": [
            [
                "0e203eefa4d5e313",
                "731e52965f1573f4",
                "28fc063d3486eff2",
                "b1bc235606948fb6",
                "9d811ae79e8a17a7"
            ]
        ]
    },
    {
        "id": "803775182e6355d1",
        "type": "switch",
        "z": "341b998efcc0164b",
        "name": "msg.next",
        "property": "next",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1240,
        "y": 260,
        "wires": [
            [
                "5cd87037883a23fd"
            ]
        ]
    },
    {
        "id": "5cd87037883a23fd",
        "type": "link out",
        "z": "341b998efcc0164b",
        "name": "next1",
        "mode": "link",
        "links": [
            "66f7033c5a32fb92"
        ],
        "x": 1345,
        "y": 260,
        "wires": []
    },
    {
        "id": "66f7033c5a32fb92",
        "type": "link in",
        "z": "341b998efcc0164b",
        "name": "next2",
        "links": [
            "5cd87037883a23fd"
        ],
        "x": 125,
        "y": 560,
        "wires": [
            [
                "9bf4a420ba6ac31d"
            ]
        ]
    },
    {
        "id": "89100c181ca6615c",
        "type": "catch",
        "z": "341b998efcc0164b",
        "name": "",
        "scope": [
            "013410f48b00aa3a"
        ],
        "uncaught": false,
        "x": 90,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "25bfd08cdd1d4a68",
        "type": "moment",
        "z": "341b998efcc0164b",
        "name": "just_hours",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": "7",
        "adjType": "hours",
        "adjDir": "subtract",
        "format": "HH:mm",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 710,
        "y": 120,
        "wires": [
            [
                "fdd16deff8a6f893"
            ]
        ]
    },
    {
        "id": "c563e11c39f7716c",
        "type": "moment",
        "z": "341b998efcc0164b",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 740,
        "y": 80,
        "wires": [
            [
                "fdd16deff8a6f893"
            ]
        ]
    },
    {
        "id": "fe464f582b65d9f7",
        "type": "moment",
        "z": "341b998efcc0164b",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 740,
        "y": 200,
        "wires": [
            [
                "fdd16deff8a6f893"
            ]
        ]
    },
    {
        "id": "a9a7e60b437d7cdb",
        "type": "moment",
        "z": "341b998efcc0164b",
        "name": "just_hours",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": "7",
        "adjType": "hours",
        "adjDir": "subtract",
        "format": "HH:mm",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 710,
        "y": 240,
        "wires": [
            [
                "fdd16deff8a6f893"
            ]
        ]
    },
    {
        "id": "731e52965f1573f4",
        "type": "function",
        "z": "341b998efcc0164b",
        "name": "bar_level",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar time_label = [];\nvar data = [];\nconst toTimestamp = (strDate) => {  \n  const dt = new Date(strDate).getTime();  \n  return dt / 1000;  \n}  \nvar max = 10; // so cot\n/*\nif (payload.length - max < 0 ){\n    max = payload.length;\n}\n*/\nif (payload.length >max ){\n     max = payload.length;\n}\n\n\n//var result_div; \n//var div =  Math.round(payload.length / 10);\nvar count_column  = 10;\n\nvar step =  Math.round(payload.length / count_column);\n\n/*\nif ( payload.length / 10 < 10){\n    step = div;\n}else  ( payload.length / 10 >= 10){\n    \n}\n*/\n\n//for(var j = payload.length -1; j >= (payload.length - max);j--){\nfor(var j = 0; j<max;j++){\n    if (j%step == 0){\n \n    let unix_timestamp =  toTimestamp(payload[j].thoi_gian);//\n    var date = new Date(unix_timestamp * 1000);\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var formattedTime = hours + ':' + minutes.substr(-2);\n    time_label.push(formattedTime);\n    //node.warn(unix_timestamp);\n    new_arr_gieng1.push(payload[j].muc_nuoc);\n    }\n    \n}\ndata.push(new_arr_gieng1);\n\nmsg.payload = {};\nvar m={};\n m={\n    \"series\": [\"Biểu đồ cột\"],\n    \"data\":data,\n    \"labels\": time_label\n};\nreturn {payload:[m]};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 580,
        "wires": [
            [
                "e467a4349838a6af"
            ]
        ]
    },
    {
        "id": "263de011737e6e3c",
        "type": "ui_chart",
        "z": "341b998efcc0164b",
        "name": "Chart_Flow",
        "group": "ad228b4f29a23a65",
        "order": 1,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "20",
        "removeOlder": "1",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "604800",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1010,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "e467a4349838a6af",
        "type": "ui_chart",
        "z": "341b998efcc0164b",
        "name": "Bar_Flow",
        "group": "ad228b4f29a23a65",
        "order": 2,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "20",
        "removeOlder": "1",
        "removeOlderPoints": "100",
        "removeOlderUnit": "3600",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1000,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "d3f2895d77eb2ab8",
        "type": "inject",
        "z": "341b998efcc0164b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "08c8e5e24f28c6b2",
        "type": "sqlstring-format",
        "z": "341b998efcc0164b",
        "name": "",
        "query": "SELECT * FROM `mydata2`.`g5` where thoi_gian > ? AND  thoi_gian < ?  LIMIT 1000;",
        "vars": "payload.mytime , payload.mytime2",
        "outField": "topic",
        "x": 390,
        "y": 500,
        "wires": [
            [
                "9cf9e81898f31f78"
            ]
        ]
    },
    {
        "id": "6440f0e327681041",
        "type": "ui_text",
        "z": "341b998efcc0164b",
        "group": "ee1b8739a8535b3b",
        "order": 8,
        "width": 16,
        "height": 1,
        "name": "label",
        "label": "Bảng dữ liệu",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 830,
        "y": 460,
        "wires": []
    },
    {
        "id": "a916a976cbbe79a6",
        "type": "ui_text",
        "z": "341b998efcc0164b",
        "group": "ee1b8739a8535b3b",
        "order": 1,
        "width": 16,
        "height": 1,
        "name": "tu_ngay",
        "label": "Từ ngày",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 280,
        "y": 80,
        "wires": []
    },
    {
        "id": "0e203eefa4d5e313",
        "type": "function",
        "z": "341b998efcc0164b",
        "name": "chart_level",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar count_line  = 20;\n\nvar step =  Math.round(payload.length / count_line);\n\n//var step = 10;\n\nfor(var j = 0; j<payload.length;j++){\n       if (j% step == 0){\n    var gieng1 = { \"x\": payload[j].thoi_gian , \"y\": payload[j].muc_nuoc};\n    new_arr_gieng1.push(gieng1);\n       }\n}\n\n\n\n\n\n\nmsg.payload = [{\n\"series\": [\"Biểu đồ đường\"],\n\"data\": [new_arr_gieng1],\n\"labels\": [\"\"]\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "263de011737e6e3c"
            ]
        ]
    },
    {
        "id": "6c408b8c13c43da1",
        "type": "http in",
        "z": "341b998efcc0164b",
        "name": "",
        "url": "/KT05",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 720,
        "wires": [
            [
                "df88435fba6495d4"
            ]
        ]
    },
    {
        "id": "df88435fba6495d4",
        "type": "function",
        "z": "341b998efcc0164b",
        "name": "saved",
        "func": "let saved = flow.get(\"mychoice\") || {};\nmsg.payload = saved;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 720,
        "wires": [
            [
                "ababf5adbac9e8cc"
            ]
        ]
    },
    {
        "id": "ababf5adbac9e8cc",
        "type": "sqlstring-format",
        "z": "341b998efcc0164b",
        "name": "sql g5",
        "query": "SELECT * FROM `mydata2`.`g5` where thoi_gian > ? AND  thoi_gian < ? ;",
        "vars": "payload.mytime, payload.mytime2",
        "outField": "topic",
        "x": 490,
        "y": 720,
        "wires": [
            [
                "fc9726ebee8e957a"
            ]
        ]
    },
    {
        "id": "fc9726ebee8e957a",
        "type": "mysql",
        "z": "341b998efcc0164b",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 730,
        "y": 720,
        "wires": [
            [
                "55d4b856541802e4"
            ]
        ]
    },
    {
        "id": "55d4b856541802e4",
        "type": "function",
        "z": "341b998efcc0164b",
        "name": "timetoLocaleString",
        "func": "var payload = msg.payload ;\nfor (var j = 0; j< payload.length;j++){\n    msg.payload[j].thoi_gian =  msg.payload[j].thoi_gian.toLocaleString();\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 720,
        "wires": [
            [
                "5fcb81dac58453c4"
            ]
        ]
    },
    {
        "id": "5fcb81dac58453c4",
        "type": "csv",
        "z": "341b998efcc0164b",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "thoi_gian,muc_nuoc,status_level,luu_luong,status_flow,luu_luong_tong,tong_ngay",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1110,
        "y": 720,
        "wires": [
            [
                "86728aa2c31d434f"
            ]
        ]
    },
    {
        "id": "86728aa2c31d434f",
        "type": "function",
        "z": "341b998efcc0164b",
        "name": "Set Headers",
        "func": "msg.headers = {}\nvar file_name = msg.req.originalUrl.replace(\"/\",\"\");\nmsg.headers[\"Content-type\"] = \"text/csv\";\nmsg.headers[\"Content-Disposition\"] = \"attachment; filename=\"+file_name+\".csv\";\nmsg.headers[\"Pragma\"] = \"no-cache\";\nmsg.headers[\"Expires\"] = \"0\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 720,
        "wires": [
            [
                "dad10aa624babc57"
            ]
        ]
    },
    {
        "id": "dad10aa624babc57",
        "type": "http response",
        "z": "341b998efcc0164b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1390,
        "y": 760,
        "wires": []
    },
    {
        "id": "c0dc096e338a9a46",
        "type": "function",
        "z": "341b998efcc0164b",
        "name": "Set 404",
        "func": "msg.payload = msg.error;\nmsg.statusCode = 404;//resource not found\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 760,
        "wires": [
            [
                "dad10aa624babc57"
            ]
        ]
    },
    {
        "id": "7fd3e607ad37ebbf",
        "type": "ui_template",
        "z": "341b998efcc0164b",
        "group": "ee1b8739a8535b3b",
        "name": "present download link on dashboard",
        "order": 10,
        "width": 16,
        "height": 1,
        "format": "<div >\n    <i class=\"fa fa-file-excel-o\" aria-hidden=\"true\"></i>\n    <a href=\"/KT05\">[Excel] Click để tải về</a>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 830,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "77080e39151b9b48",
        "type": "catch",
        "z": "341b998efcc0164b",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 1080,
        "y": 760,
        "wires": [
            [
                "c0dc096e338a9a46"
            ]
        ]
    },
    {
        "id": "f27db996bdfe9bd1",
        "type": "comment",
        "z": "341b998efcc0164b",
        "name": "LIMIT 100;",
        "info": "",
        "x": 340,
        "y": 560,
        "wires": []
    },
    {
        "id": "b1bc235606948fb6",
        "type": "function",
        "z": "341b998efcc0164b",
        "name": "bar_flow",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar time_label = [];\nvar data = [];\nconst toTimestamp = (strDate) => {  \n  const dt = new Date(strDate).getTime();  \n  return dt / 1000;  \n}  \nvar max = 10; // so cot\n/*\nif (payload.length - max < 0 ){\n    max = payload.length;\n}\n*/\nif (payload.length >max ){\n     max = payload.length;\n}\n\n\n//var result_div; \n//var div =  Math.round(payload.length / 10);\nvar count_column  = 10;\n\nvar step =  Math.round(payload.length / count_column);\n\n/*\nif ( payload.length / 10 < 10){\n    step = div;\n}else  ( payload.length / 10 >= 10){\n    \n}\n*/\n\n//for(var j = payload.length -1; j >= (payload.length - max);j--){\nfor(var j = 0; j<max;j++){\n    if (j%step == 0){\n \n    let unix_timestamp =  toTimestamp(payload[j].thoi_gian);//\n    var date = new Date(unix_timestamp * 1000);\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var formattedTime = hours + ':' + minutes.substr(-2);\n    time_label.push(formattedTime);\n    //node.warn(unix_timestamp);\n    new_arr_gieng1.push(payload[j].luu_luong);\n    }\n    \n}\ndata.push(new_arr_gieng1);\n\nmsg.payload = {};\nvar m={};\n m={\n    \"series\": [\"Biểu đồ cột\"],\n    \"data\":data,\n    \"labels\": time_label\n};\nreturn {payload:[m]};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 660,
        "wires": [
            [
                "52581192b701a68f"
            ]
        ]
    },
    {
        "id": "454fd808bf5a4343",
        "type": "ui_chart",
        "z": "341b998efcc0164b",
        "name": "Chart_Flow",
        "group": "55fb8aeb17719a4e",
        "order": 1,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": "1",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "604800",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1010,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "52581192b701a68f",
        "type": "ui_chart",
        "z": "341b998efcc0164b",
        "name": "Bar_Flow",
        "group": "55fb8aeb17719a4e",
        "order": 2,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": "1",
        "removeOlderPoints": "100",
        "removeOlderUnit": "3600",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1000,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "28fc063d3486eff2",
        "type": "function",
        "z": "341b998efcc0164b",
        "name": "chart_flow",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar count_line  = 20;\n\nvar step =  Math.round(payload.length / count_line);\n\n//var step = 10;\n\nfor(var j = 0; j<payload.length;j++){\n       if (j% step == 0){\n    var gieng1 = { \"x\": payload[j].thoi_gian , \"y\": payload[j].luu_luong};\n    new_arr_gieng1.push(gieng1);\n       }\n}\n\n\n\n\n\n\nmsg.payload = [{\n\"series\": [\"Biểu đồ đường\"],\n\"data\": [new_arr_gieng1],\n\"labels\": [\"\"]\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 620,
        "wires": [
            [
                "454fd808bf5a4343"
            ]
        ]
    },
    {
        "id": "c957f4a2294ff1e6",
        "type": "ui_gauge",
        "z": "341b998efcc0164b",
        "name": "",
        "group": "c527f877f8017b48",
        "order": 2,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Lưu Lượng",
        "label": " m3/h",
        "format": "{{msg.luu_luong}}",
        "min": 0,
        "max": "60",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 370,
        "y": 880,
        "wires": []
    },
    {
        "id": "a216fd289ad89afc",
        "type": "link in",
        "z": "341b998efcc0164b",
        "name": "kt7_detail",
        "links": [
            "34ba7075d57a1d8e"
        ],
        "x": 155,
        "y": 900,
        "wires": [
            [
                "c957f4a2294ff1e6",
                "edbc0dc05117150b",
                "4a133ed38dfee69b",
                "6cccc911e05dc189"
            ]
        ]
    },
    {
        "id": "edbc0dc05117150b",
        "type": "ui_gauge",
        "z": "341b998efcc0164b",
        "name": "",
        "group": "c527f877f8017b48",
        "order": 1,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Mực nước",
        "label": " m",
        "format": "{{msg.muc_nuoc}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 370,
        "y": 820,
        "wires": []
    },
    {
        "id": "4a133ed38dfee69b",
        "type": "ui_gauge",
        "z": "341b998efcc0164b",
        "name": "",
        "group": "c527f877f8017b48",
        "order": 4,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Lưu Lượng Tổng",
        "label": " m3",
        "format": "{{msg.luu_luong_tong}}",
        "min": 0,
        "max": "999999999",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 390,
        "y": 1000,
        "wires": []
    },
    {
        "id": "9d811ae79e8a17a7",
        "type": "function",
        "z": "341b998efcc0164b",
        "name": "data2table",
        "func": "var arr = [];\nvar payload = msg.payload;\nfor (var i = 0; i < msg.payload.length; i++) {\n    var d = new Date(payload[i].thoi_gian);\n    var text = d.toLocaleString();\n    var obj = { \"Thời gian\": text, \"Mực nước\": payload[i].muc_nuoc, \"TT_Mực nước\": payload[i].status_level, \"Lưu lượng\": payload[i].luu_luong, \"TT_Lưu Lượng\": payload[i].status_flow,\"Tổng\": payload[i].luu_luong_tong, \"Tổng 24h\": payload[i].tong_ngay};\n    arr.push(obj);\n}\nmsg.payload = arr;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 500,
        "wires": [
            [
                "60e0ad4b67588836"
            ]
        ]
    },
    {
        "id": "60e0ad4b67588836",
        "type": "ui_table",
        "z": "341b998efcc0164b",
        "group": "ee1b8739a8535b3b",
        "name": "",
        "order": 9,
        "width": 16,
        "height": 9,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 990,
        "y": 500,
        "wires": []
    },
    {
        "id": "6cccc911e05dc189",
        "type": "ui_gauge",
        "z": "341b998efcc0164b",
        "name": "",
        "group": "c527f877f8017b48",
        "order": 3,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Tổng 24h",
        "label": " m3",
        "format": "{{msg.tong_ngay}}",
        "min": 0,
        "max": "999",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 360,
        "y": 940,
        "wires": []
    },
    {
        "id": "d4b49d61ac951b2d",
        "type": "ui_text_input",
        "z": "40a6f3866cdd8235",
        "name": "From time",
        "label": "Time",
        "tooltip": "",
        "group": "de838e4d0abca36d",
        "order": 3,
        "width": 8,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": "10",
        "topic": "time",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 520,
        "y": 120,
        "wires": [
            [
                "ed95cbe14a20cb04"
            ]
        ]
    },
    {
        "id": "1f10eaa970544e17",
        "type": "join",
        "z": "40a6f3866cdd8235",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "1",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 970,
        "y": 160,
        "wires": [
            [
                "0a59ba1bce678715"
            ]
        ]
    },
    {
        "id": "ed59d0af064052bb",
        "type": "ui_ui_control",
        "z": "40a6f3866cdd8235",
        "name": "",
        "events": "change",
        "x": 100,
        "y": 220,
        "wires": [
            [
                "89c4de46c906e92b"
            ]
        ]
    },
    {
        "id": "89c4de46c906e92b",
        "type": "switch",
        "z": "40a6f3866cdd8235",
        "name": "BP Tab?",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Lich_Su",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 140,
        "y": 140,
        "wires": [
            [
                "543881f52506a379"
            ]
        ]
    },
    {
        "id": "543881f52506a379",
        "type": "function",
        "z": "40a6f3866cdd8235",
        "name": "Time Of Day",
        "func": "//let current_time = convertTZ(new Date(), \"Asia/Jakarta\");\n//var now = Date().toLocaleString('en-US', { timeZone: 'Asia/Jakarta' });\n//let now =  current_time;//// Tue Apr 20 2012 17:10:30 GMT+0700 (Western Indonesia Time)\nlet now = new Date();\n\nlet msg1 = {payload: now}\nlet msg2 = {payload: (now.getTime() - now.getTimezoneOffset()*60000) % (24 * 3600 * 1000)}\nlet msg3 = {topic:'name', payload: 'Gieng1'}\nlet msg4 = {payload: now}\nlet msg5 = {payload: (now.getTime() - now.getTimezoneOffset()*60000) % (24 * 3600 * 1000)}\nreturn [msg1, msg2,msg3,msg4,msg5];\n\nfunction convertTZ(date, tzString) {\n    return new Date((typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {timeZone: tzString}));   \n}\n",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 140,
        "wires": [
            [
                "7e7fdaaebd72fa44"
            ],
            [
                "d4b49d61ac951b2d"
            ],
            [
                "4ca131e87163cc40"
            ],
            [
                "d13ca2229d2d8bf0"
            ],
            [
                "8a4ebc9ee75784ff"
            ]
        ]
    },
    {
        "id": "7e7fdaaebd72fa44",
        "type": "ui_date_picker",
        "z": "40a6f3866cdd8235",
        "name": "From date",
        "label": "",
        "group": "de838e4d0abca36d",
        "order": 2,
        "width": 8,
        "height": 1,
        "passthru": true,
        "topic": "date",
        "topicType": "str",
        "className": "",
        "x": 530,
        "y": 80,
        "wires": [
            [
                "d2d3648db95f5252"
            ]
        ]
    },
    {
        "id": "f811ca25fc75417f",
        "type": "function",
        "z": "40a6f3866cdd8235",
        "name": "Truncate to start of day",
        "func": "msg.payload = Math.floor(msg.payload/(24*3600*1000))*24*3600*1000\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "550ef1af45e3fd6c",
        "type": "switch",
        "z": "40a6f3866cdd8235",
        "name": "Submit?",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "form",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 520,
        "y": 320,
        "wires": [
            [
                "6330f6f47bc9ee40"
            ]
        ]
    },
    {
        "id": "fc6d549fe620dcc0",
        "type": "change",
        "z": "40a6f3866cdd8235",
        "name": "Clear values",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"rate\":\"\",\"diastolic\":\"\",\"systolic\":\"\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "db51898cb390ab65",
        "type": "ui_toast",
        "z": "40a6f3866cdd8235",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Cancel",
        "cancel": "OK",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 950,
        "y": 260,
        "wires": [
            [
                "4119df7e2614ce5e"
            ]
        ]
    },
    {
        "id": "6330f6f47bc9ee40",
        "type": "function",
        "z": "40a6f3866cdd8235",
        "name": "Prepare for OK/Cancel",
        "func": "let saved = flow.get(\"mychoice\") || {};\n var dt = new Date();\n/*\nvar date = new Date(saved.mytime - 420*60000);\nvar date2 = new Date(saved.mytime2 -420*60000);\nvar tu_ngay = (\"Từ ngày: \"+date.getDate()+\n          \"/\"+(date.getMonth()+1)+\n          \"/\"+date.getFullYear()+\n          \" \"+date.getHours()+\n          \":\"+date.getMinutes());\nvar den_ngay = (\"Đến ngày: \"+date2.getDate()+\n          \"/\"+(date2.getMonth()+1)+\n          \"/\"+date2.getFullYear()+\n          \" \"+date2.getHours()+\n          \":\"+date2.getMinutes());\n          */\nif (saved.mytime<saved.mytime2){\nmsg.payload = `Truy xuất thông tin từ ngày: ${saved.mytime} đến ngày:  ${saved.mytime2}`\nmsg.payloadSaved = saved\nmsg.next = true;\n}else{\nmsg.payload = `Thông tin nhập không hợp lệ :\\n   ${saved.mytime}  ${saved.mytime2}`\n msg.next = false;\n   \n}\nmsg.topic = null\nreturn msg;\n\n\nfunction convertTZ(date, tzString) {\n    return new Date((typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {timeZone: tzString}));   \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 280,
        "wires": [
            [
                "db51898cb390ab65"
            ]
        ]
    },
    {
        "id": "4119df7e2614ce5e",
        "type": "switch",
        "z": "40a6f3866cdd8235",
        "name": "OK?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1110,
        "y": 260,
        "wires": [
            [
                "c24176d9f97676ce"
            ]
        ]
    },
    {
        "id": "4ca131e87163cc40",
        "type": "function",
        "z": "40a6f3866cdd8235",
        "name": "name",
        "func": "flow.set(\"name\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 160,
        "wires": [
            [
                "1f10eaa970544e17"
            ]
        ]
    },
    {
        "id": "b36afc65087776e4",
        "type": "ui_button",
        "z": "40a6f3866cdd8235",
        "name": "",
        "group": "de838e4d0abca36d",
        "order": 7,
        "width": 16,
        "height": 1,
        "passthru": false,
        "label": "Truy xuất",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 520,
        "y": 280,
        "wires": [
            [
                "6330f6f47bc9ee40"
            ]
        ]
    },
    {
        "id": "0a59ba1bce678715",
        "type": "function",
        "z": "40a6f3866cdd8235",
        "name": "",
        "func": "//if ( msg.payload.hasOwnProperty('time') && msg.payload.hasOwnProperty('date')&& msg.payload.hasOwnProperty('time2') && msg.payload.hasOwnProperty('date2')){\n    msg.payload.mytime = msg.payload.date +\" \" +msg.payload.time; \n    msg.payload.mytime2 =msg.payload.date2 +\" \" +msg.payload.time2; \n    flow.set(\"mychoice\", msg.payload);\n//}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "b75cc15b4577f33d",
        "type": "inject",
        "z": "40a6f3866cdd8235",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 520,
        "y": 360,
        "wires": [
            [
                "6330f6f47bc9ee40"
            ]
        ]
    },
    {
        "id": "d13ca2229d2d8bf0",
        "type": "ui_date_picker",
        "z": "40a6f3866cdd8235",
        "name": "To date",
        "label": "",
        "group": "de838e4d0abca36d",
        "order": 5,
        "width": 8,
        "height": 1,
        "passthru": true,
        "topic": "date2",
        "topicType": "str",
        "className": "",
        "x": 520,
        "y": 200,
        "wires": [
            [
                "5b1d3fd4b1beb7d3"
            ]
        ]
    },
    {
        "id": "8a4ebc9ee75784ff",
        "type": "ui_text_input",
        "z": "40a6f3866cdd8235",
        "name": "To time",
        "label": "Time2",
        "tooltip": "",
        "group": "de838e4d0abca36d",
        "order": 6,
        "width": 8,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": "10",
        "topic": "time2",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 520,
        "y": 240,
        "wires": [
            [
                "80224b1845dca12f"
            ]
        ]
    },
    {
        "id": "f19f76b112077f56",
        "type": "ui_text",
        "z": "40a6f3866cdd8235",
        "group": "de838e4d0abca36d",
        "order": 4,
        "width": 16,
        "height": 1,
        "name": "den_ngay",
        "label": "Đến ngày",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 280,
        "y": 200,
        "wires": []
    },
    {
        "id": "cab609c8878b6e8d",
        "type": "inject",
        "z": "40a6f3866cdd8235",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 500,
        "wires": [
            [
                "ea5cbf2d775ee24b"
            ]
        ]
    },
    {
        "id": "ea5cbf2d775ee24b",
        "type": "function",
        "z": "40a6f3866cdd8235",
        "name": "saved",
        "func": "let saved = flow.get(\"mychoice\") || {};\nmsg.payload = saved;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 500,
        "wires": [
            [
                "fe73625b97ae01cc"
            ]
        ]
    },
    {
        "id": "d2e84065fd4df752",
        "type": "mysql",
        "z": "40a6f3866cdd8235",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 560,
        "y": 500,
        "wires": [
            [
                "89a557cdbf65833d",
                "96ddc99fe043f32d",
                "61a857985bd985a0",
                "e62dc16f8923871c",
                "f7672a43a2548ac0"
            ]
        ]
    },
    {
        "id": "c24176d9f97676ce",
        "type": "switch",
        "z": "40a6f3866cdd8235",
        "name": "msg.next",
        "property": "next",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1240,
        "y": 260,
        "wires": [
            [
                "7988e9d5ac2a2ac7"
            ]
        ]
    },
    {
        "id": "7988e9d5ac2a2ac7",
        "type": "link out",
        "z": "40a6f3866cdd8235",
        "name": "next1",
        "mode": "link",
        "links": [
            "0107500b24bb5d40"
        ],
        "x": 1345,
        "y": 260,
        "wires": []
    },
    {
        "id": "0107500b24bb5d40",
        "type": "link in",
        "z": "40a6f3866cdd8235",
        "name": "next2",
        "links": [
            "7988e9d5ac2a2ac7"
        ],
        "x": 125,
        "y": 560,
        "wires": [
            [
                "ea5cbf2d775ee24b"
            ]
        ]
    },
    {
        "id": "63c56c031319441e",
        "type": "catch",
        "z": "40a6f3866cdd8235",
        "name": "",
        "scope": [
            "013410f48b00aa3a"
        ],
        "uncaught": false,
        "x": 90,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "ed95cbe14a20cb04",
        "type": "moment",
        "z": "40a6f3866cdd8235",
        "name": "just_hours",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": "7",
        "adjType": "hours",
        "adjDir": "subtract",
        "format": "HH:mm",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 710,
        "y": 120,
        "wires": [
            [
                "1f10eaa970544e17"
            ]
        ]
    },
    {
        "id": "d2d3648db95f5252",
        "type": "moment",
        "z": "40a6f3866cdd8235",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 740,
        "y": 80,
        "wires": [
            [
                "1f10eaa970544e17"
            ]
        ]
    },
    {
        "id": "5b1d3fd4b1beb7d3",
        "type": "moment",
        "z": "40a6f3866cdd8235",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 740,
        "y": 200,
        "wires": [
            [
                "1f10eaa970544e17"
            ]
        ]
    },
    {
        "id": "80224b1845dca12f",
        "type": "moment",
        "z": "40a6f3866cdd8235",
        "name": "just_hours",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": "7",
        "adjType": "hours",
        "adjDir": "subtract",
        "format": "HH:mm",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 710,
        "y": 240,
        "wires": [
            [
                "1f10eaa970544e17"
            ]
        ]
    },
    {
        "id": "96ddc99fe043f32d",
        "type": "function",
        "z": "40a6f3866cdd8235",
        "name": "bar_level",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar time_label = [];\nvar data = [];\nconst toTimestamp = (strDate) => {  \n  const dt = new Date(strDate).getTime();  \n  return dt / 1000;  \n}  \nvar max = 10; // so cot\n/*\nif (payload.length - max < 0 ){\n    max = payload.length;\n}\n*/\nif (payload.length >max ){\n     max = payload.length;\n}\n\n\n//var result_div; \n//var div =  Math.round(payload.length / 10);\nvar count_column  = 10;\n\nvar step =  Math.round(payload.length / count_column);\n\n/*\nif ( payload.length / 10 < 10){\n    step = div;\n}else  ( payload.length / 10 >= 10){\n    \n}\n*/\n\n//for(var j = payload.length -1; j >= (payload.length - max);j--){\nfor(var j = 0; j<max;j++){\n    if (j%step == 0){\n \n    let unix_timestamp =  toTimestamp(payload[j].thoi_gian);//\n    var date = new Date(unix_timestamp * 1000);\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var formattedTime = hours + ':' + minutes.substr(-2);\n    time_label.push(formattedTime);\n    //node.warn(unix_timestamp);\n    new_arr_gieng1.push(payload[j].muc_nuoc);\n    }\n    \n}\ndata.push(new_arr_gieng1);\n\nmsg.payload = {};\nvar m={};\n m={\n    \"series\": [\"Biểu đồ cột\"],\n    \"data\":data,\n    \"labels\": time_label\n};\nreturn {payload:[m]};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 580,
        "wires": [
            [
                "62fa1683c55843d9"
            ]
        ]
    },
    {
        "id": "3b6f5c7478b7b484",
        "type": "ui_chart",
        "z": "40a6f3866cdd8235",
        "name": "Chart_Flow",
        "group": "962fa4861186b79e",
        "order": 1,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "20",
        "removeOlder": "1",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "604800",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1010,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "62fa1683c55843d9",
        "type": "ui_chart",
        "z": "40a6f3866cdd8235",
        "name": "Bar_Flow",
        "group": "962fa4861186b79e",
        "order": 2,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "20",
        "removeOlder": "1",
        "removeOlderPoints": "100",
        "removeOlderUnit": "3600",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1000,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "9de68375815192fc",
        "type": "inject",
        "z": "40a6f3866cdd8235",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "fe73625b97ae01cc",
        "type": "sqlstring-format",
        "z": "40a6f3866cdd8235",
        "name": "",
        "query": "SELECT * FROM `mydata2`.`g6` where thoi_gian > ? AND  thoi_gian < ?  LIMIT 1000;",
        "vars": "payload.mytime , payload.mytime2",
        "outField": "topic",
        "x": 390,
        "y": 500,
        "wires": [
            [
                "d2e84065fd4df752"
            ]
        ]
    },
    {
        "id": "e376e9ac9fefeeec",
        "type": "ui_text",
        "z": "40a6f3866cdd8235",
        "group": "de838e4d0abca36d",
        "order": 8,
        "width": 16,
        "height": 1,
        "name": "label",
        "label": "Bảng dữ liệu",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 830,
        "y": 460,
        "wires": []
    },
    {
        "id": "9af87bd7c28a2766",
        "type": "ui_text",
        "z": "40a6f3866cdd8235",
        "group": "de838e4d0abca36d",
        "order": 1,
        "width": 16,
        "height": 1,
        "name": "tu_ngay",
        "label": "Từ ngày",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 280,
        "y": 80,
        "wires": []
    },
    {
        "id": "89a557cdbf65833d",
        "type": "function",
        "z": "40a6f3866cdd8235",
        "name": "chart_level",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar count_line  = 20;\n\nvar step =  Math.round(payload.length / count_line);\n\n//var step = 10;\n\nfor(var j = 0; j<payload.length;j++){\n       if (j% step == 0){\n    var gieng1 = { \"x\": payload[j].thoi_gian , \"y\": payload[j].muc_nuoc};\n    new_arr_gieng1.push(gieng1);\n       }\n}\n\n\n\n\n\n\nmsg.payload = [{\n\"series\": [\"Biểu đồ đường\"],\n\"data\": [new_arr_gieng1],\n\"labels\": [\"\"]\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 540,
        "wires": [
            [
                "3b6f5c7478b7b484"
            ]
        ]
    },
    {
        "id": "7219abf122388efe",
        "type": "http in",
        "z": "40a6f3866cdd8235",
        "name": "",
        "url": "/KT02",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 720,
        "wires": [
            [
                "94940102bdb19b29"
            ]
        ]
    },
    {
        "id": "94940102bdb19b29",
        "type": "function",
        "z": "40a6f3866cdd8235",
        "name": "saved",
        "func": "let saved = flow.get(\"mychoice\") || {};\nmsg.payload = saved;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 720,
        "wires": [
            [
                "6288f439b3e171a5"
            ]
        ]
    },
    {
        "id": "6288f439b3e171a5",
        "type": "sqlstring-format",
        "z": "40a6f3866cdd8235",
        "name": "sql g6",
        "query": "SELECT * FROM `mydata2`.`g6` where thoi_gian > ? AND  thoi_gian < ? ;",
        "vars": "payload.mytime, payload.mytime2",
        "outField": "topic",
        "x": 490,
        "y": 720,
        "wires": [
            [
                "2458763594b4703b"
            ]
        ]
    },
    {
        "id": "2458763594b4703b",
        "type": "mysql",
        "z": "40a6f3866cdd8235",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 730,
        "y": 720,
        "wires": [
            [
                "009980ba7b6d3813"
            ]
        ]
    },
    {
        "id": "009980ba7b6d3813",
        "type": "function",
        "z": "40a6f3866cdd8235",
        "name": "timetoLocaleString",
        "func": "var payload = msg.payload ;\nfor (var j = 0; j< payload.length;j++){\n    msg.payload[j].thoi_gian =  msg.payload[j].thoi_gian.toLocaleString();\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 720,
        "wires": [
            [
                "434becb4196d28de"
            ]
        ]
    },
    {
        "id": "434becb4196d28de",
        "type": "csv",
        "z": "40a6f3866cdd8235",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "thoi_gian,muc_nuoc,status_level,luu_luong,status_flow,luu_luong_tong,tong_ngay",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1110,
        "y": 720,
        "wires": [
            [
                "c3e098a122b6d972"
            ]
        ]
    },
    {
        "id": "c3e098a122b6d972",
        "type": "function",
        "z": "40a6f3866cdd8235",
        "name": "Set Headers",
        "func": "msg.headers = {}\nvar file_name = msg.req.originalUrl.replace(\"/\",\"\");\nmsg.headers[\"Content-type\"] = \"text/csv\";\nmsg.headers[\"Content-Disposition\"] = \"attachment; filename=\"+file_name+\".csv\";\nmsg.headers[\"Pragma\"] = \"no-cache\";\nmsg.headers[\"Expires\"] = \"0\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 720,
        "wires": [
            [
                "eb81efd04117ec85"
            ]
        ]
    },
    {
        "id": "eb81efd04117ec85",
        "type": "http response",
        "z": "40a6f3866cdd8235",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1390,
        "y": 760,
        "wires": []
    },
    {
        "id": "15bec94091777eca",
        "type": "function",
        "z": "40a6f3866cdd8235",
        "name": "Set 404",
        "func": "msg.payload = msg.error;\nmsg.statusCode = 404;//resource not found\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 760,
        "wires": [
            [
                "eb81efd04117ec85"
            ]
        ]
    },
    {
        "id": "f315a837d40929c4",
        "type": "ui_template",
        "z": "40a6f3866cdd8235",
        "group": "de838e4d0abca36d",
        "name": "present download link on dashboard",
        "order": 10,
        "width": 16,
        "height": 1,
        "format": "<div >\n    <i class=\"fa fa-file-excel-o\" aria-hidden=\"true\"></i>\n    <a href=\"/KT02\">[Excel] Click để tải về</a>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 830,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "a7c9882dbd88e48e",
        "type": "catch",
        "z": "40a6f3866cdd8235",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 1080,
        "y": 760,
        "wires": [
            [
                "15bec94091777eca"
            ]
        ]
    },
    {
        "id": "8f2ecedfd708d4da",
        "type": "comment",
        "z": "40a6f3866cdd8235",
        "name": "LIMIT 100;",
        "info": "",
        "x": 340,
        "y": 560,
        "wires": []
    },
    {
        "id": "e62dc16f8923871c",
        "type": "function",
        "z": "40a6f3866cdd8235",
        "name": "bar_flow",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar time_label = [];\nvar data = [];\nconst toTimestamp = (strDate) => {  \n  const dt = new Date(strDate).getTime();  \n  return dt / 1000;  \n}  \nvar max = 10; // so cot\n/*\nif (payload.length - max < 0 ){\n    max = payload.length;\n}\n*/\nif (payload.length >max ){\n     max = payload.length;\n}\n\n\n//var result_div; \n//var div =  Math.round(payload.length / 10);\nvar count_column  = 10;\n\nvar step =  Math.round(payload.length / count_column);\n\n/*\nif ( payload.length / 10 < 10){\n    step = div;\n}else  ( payload.length / 10 >= 10){\n    \n}\n*/\n\n//for(var j = payload.length -1; j >= (payload.length - max);j--){\nfor(var j = 0; j<max;j++){\n    if (j%step == 0){\n \n    let unix_timestamp =  toTimestamp(payload[j].thoi_gian);//\n    var date = new Date(unix_timestamp * 1000);\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var formattedTime = hours + ':' + minutes.substr(-2);\n    time_label.push(formattedTime);\n    //node.warn(unix_timestamp);\n    new_arr_gieng1.push(payload[j].luu_luong);\n    }\n    \n}\ndata.push(new_arr_gieng1);\n\nmsg.payload = {};\nvar m={};\n m={\n    \"series\": [\"Biểu đồ cột\"],\n    \"data\":data,\n    \"labels\": time_label\n};\nreturn {payload:[m]};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 660,
        "wires": [
            [
                "e1a0b088ca263bbe"
            ]
        ]
    },
    {
        "id": "c6e778657c3b1f96",
        "type": "ui_chart",
        "z": "40a6f3866cdd8235",
        "name": "Chart_Flow",
        "group": "c964c67a2a97bd20",
        "order": 1,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": "1",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "604800",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1010,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "e1a0b088ca263bbe",
        "type": "ui_chart",
        "z": "40a6f3866cdd8235",
        "name": "Bar_Flow",
        "group": "c964c67a2a97bd20",
        "order": 2,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": "1",
        "removeOlderPoints": "100",
        "removeOlderUnit": "3600",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1000,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "61a857985bd985a0",
        "type": "function",
        "z": "40a6f3866cdd8235",
        "name": "chart_flow",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar count_line  = 20;\n\nvar step =  Math.round(payload.length / count_line);\n\n//var step = 10;\n\nfor(var j = 0; j<payload.length;j++){\n       if (j% step == 0){\n    var gieng1 = { \"x\": payload[j].thoi_gian , \"y\": payload[j].luu_luong};\n    new_arr_gieng1.push(gieng1);\n       }\n}\n\n\n\n\n\n\nmsg.payload = [{\n\"series\": [\"Biểu đồ đường\"],\n\"data\": [new_arr_gieng1],\n\"labels\": [\"\"]\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 620,
        "wires": [
            [
                "c6e778657c3b1f96"
            ]
        ]
    },
    {
        "id": "4c65b5e25f4b5752",
        "type": "ui_gauge",
        "z": "40a6f3866cdd8235",
        "name": "",
        "group": "19f9d5238f267430",
        "order": 2,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Lưu Lượng",
        "label": " m3/h",
        "format": "{{msg.luu_luong}}",
        "min": 0,
        "max": "60",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 370,
        "y": 880,
        "wires": []
    },
    {
        "id": "2831ad3f59f5807d",
        "type": "link in",
        "z": "40a6f3866cdd8235",
        "name": "kt8_detail",
        "links": [
            "bd358723ec3a9b18"
        ],
        "x": 155,
        "y": 900,
        "wires": [
            [
                "4c65b5e25f4b5752",
                "59508dc666148a9d",
                "e868f1347d3062a9",
                "05dcf77da4dff8d2"
            ]
        ]
    },
    {
        "id": "59508dc666148a9d",
        "type": "ui_gauge",
        "z": "40a6f3866cdd8235",
        "name": "",
        "group": "19f9d5238f267430",
        "order": 1,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Mực nước",
        "label": " m",
        "format": "{{msg.muc_nuoc}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 370,
        "y": 820,
        "wires": []
    },
    {
        "id": "e868f1347d3062a9",
        "type": "ui_gauge",
        "z": "40a6f3866cdd8235",
        "name": "",
        "group": "19f9d5238f267430",
        "order": 4,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Lưu Lượng Tổng",
        "label": " m3",
        "format": "{{msg.luu_luong_tong}}",
        "min": 0,
        "max": "999999999",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 390,
        "y": 1000,
        "wires": []
    },
    {
        "id": "f7672a43a2548ac0",
        "type": "function",
        "z": "40a6f3866cdd8235",
        "name": "data2table",
        "func": "var arr = [];\nvar payload = msg.payload;\nfor (var i = 0; i < msg.payload.length; i++) {\n    var d = new Date(payload[i].thoi_gian);\n    var text = d.toLocaleString();\n    var obj = { \"Thời gian\": text, \"Mực nước\": payload[i].muc_nuoc, \"TT_Mực nước\": payload[i].status_level, \"Lưu lượng\": payload[i].luu_luong, \"TT_Lưu Lượng\": payload[i].status_flow,\"Tổng\": payload[i].luu_luong_tong, \"Tổng 24h\": payload[i].tong_ngay};\n    arr.push(obj);\n}\nmsg.payload = arr;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 500,
        "wires": [
            [
                "8d98eb84e3f94d8b"
            ]
        ]
    },
    {
        "id": "8d98eb84e3f94d8b",
        "type": "ui_table",
        "z": "40a6f3866cdd8235",
        "group": "de838e4d0abca36d",
        "name": "",
        "order": 9,
        "width": 16,
        "height": 9,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 990,
        "y": 500,
        "wires": []
    },
    {
        "id": "05dcf77da4dff8d2",
        "type": "ui_gauge",
        "z": "40a6f3866cdd8235",
        "name": "",
        "group": "19f9d5238f267430",
        "order": 3,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Tổng 24h",
        "label": " m3",
        "format": "{{msg.tong_ngay}}",
        "min": 0,
        "max": "999",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 360,
        "y": 940,
        "wires": []
    },
    {
        "id": "bad35cecc1dbe5f3",
        "type": "ui_text_input",
        "z": "ad61a36faca2db15",
        "name": "From time",
        "label": "Time",
        "tooltip": "",
        "group": "b5d3eb285beaa20a",
        "order": 3,
        "width": 8,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": "10",
        "topic": "time",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 540,
        "y": 140,
        "wires": [
            [
                "710761f7df78e279"
            ]
        ]
    },
    {
        "id": "96b8fc8aa049ec04",
        "type": "join",
        "z": "ad61a36faca2db15",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "1",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 990,
        "y": 180,
        "wires": [
            [
                "78454e06a56f6ff4"
            ]
        ]
    },
    {
        "id": "c46db54660b780a3",
        "type": "ui_ui_control",
        "z": "ad61a36faca2db15",
        "name": "",
        "events": "change",
        "x": 120,
        "y": 240,
        "wires": [
            [
                "24a2c189a6b06b78"
            ]
        ]
    },
    {
        "id": "24a2c189a6b06b78",
        "type": "switch",
        "z": "ad61a36faca2db15",
        "name": "BP Tab?",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Lich_Su",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 160,
        "y": 160,
        "wires": [
            [
                "df7731eb75b80650"
            ]
        ]
    },
    {
        "id": "df7731eb75b80650",
        "type": "function",
        "z": "ad61a36faca2db15",
        "name": "Time Of Day",
        "func": "//let current_time = convertTZ(new Date(), \"Asia/Jakarta\");\n//var now = Date().toLocaleString('en-US', { timeZone: 'Asia/Jakarta' });\n//let now =  current_time;//// Tue Apr 20 2012 17:10:30 GMT+0700 (Western Indonesia Time)\nlet now = new Date();\n\nlet msg1 = {payload: now}\nlet msg2 = {payload: (now.getTime() - now.getTimezoneOffset()*60000) % (24 * 3600 * 1000)}\nlet msg3 = {topic:'name', payload: 'Gieng1'}\nlet msg4 = {payload: now}\nlet msg5 = {payload: (now.getTime() - now.getTimezoneOffset()*60000) % (24 * 3600 * 1000)}\nreturn [msg1, msg2,msg3,msg4,msg5];\n\nfunction convertTZ(date, tzString) {\n    return new Date((typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {timeZone: tzString}));   \n}\n",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 160,
        "wires": [
            [
                "763f12fbe79b2fb4"
            ],
            [
                "bad35cecc1dbe5f3"
            ],
            [
                "d412c2bf8e8e3645"
            ],
            [
                "b1cae718d7b81aa6"
            ],
            [
                "01228cc540afba50"
            ]
        ]
    },
    {
        "id": "763f12fbe79b2fb4",
        "type": "ui_date_picker",
        "z": "ad61a36faca2db15",
        "name": "From date",
        "label": "",
        "group": "b5d3eb285beaa20a",
        "order": 2,
        "width": 8,
        "height": 1,
        "passthru": true,
        "topic": "date",
        "topicType": "str",
        "className": "",
        "x": 550,
        "y": 100,
        "wires": [
            [
                "75787ba8111cea5c"
            ]
        ]
    },
    {
        "id": "32e04d2dd685e1a3",
        "type": "function",
        "z": "ad61a36faca2db15",
        "name": "Truncate to start of day",
        "func": "msg.payload = Math.floor(msg.payload/(24*3600*1000))*24*3600*1000\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "58e479a63db6e900",
        "type": "switch",
        "z": "ad61a36faca2db15",
        "name": "Submit?",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "form",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 540,
        "y": 340,
        "wires": [
            [
                "5790ce52e298b594"
            ]
        ]
    },
    {
        "id": "fa10bdf9e6b69bcc",
        "type": "change",
        "z": "ad61a36faca2db15",
        "name": "Clear values",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"rate\":\"\",\"diastolic\":\"\",\"systolic\":\"\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "0dcd4d333e4b8cdb",
        "type": "ui_toast",
        "z": "ad61a36faca2db15",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Cancel",
        "cancel": "OK",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 970,
        "y": 280,
        "wires": [
            [
                "6eb4ce778bc961fa"
            ]
        ]
    },
    {
        "id": "5790ce52e298b594",
        "type": "function",
        "z": "ad61a36faca2db15",
        "name": "Prepare for OK/Cancel",
        "func": "let saved = flow.get(\"mychoice\") || {};\n var dt = new Date();\n/*\nvar date = new Date(saved.mytime - 420*60000);\nvar date2 = new Date(saved.mytime2 -420*60000);\nvar tu_ngay = (\"Từ ngày: \"+date.getDate()+\n          \"/\"+(date.getMonth()+1)+\n          \"/\"+date.getFullYear()+\n          \" \"+date.getHours()+\n          \":\"+date.getMinutes());\nvar den_ngay = (\"Đến ngày: \"+date2.getDate()+\n          \"/\"+(date2.getMonth()+1)+\n          \"/\"+date2.getFullYear()+\n          \" \"+date2.getHours()+\n          \":\"+date2.getMinutes());\n          */\nif (saved.mytime<saved.mytime2){\nmsg.payload = `Truy xuất thông tin từ ngày: ${saved.mytime} đến ngày:  ${saved.mytime2}`\nmsg.payloadSaved = saved\nmsg.next = true;\n}else{\nmsg.payload = `Thông tin nhập không hợp lệ :\\n   ${saved.mytime}  ${saved.mytime2}`\n msg.next = false;\n   \n}\nmsg.topic = null\nreturn msg;\n\n\nfunction convertTZ(date, tzString) {\n    return new Date((typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {timeZone: tzString}));   \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 300,
        "wires": [
            [
                "0dcd4d333e4b8cdb"
            ]
        ]
    },
    {
        "id": "6eb4ce778bc961fa",
        "type": "switch",
        "z": "ad61a36faca2db15",
        "name": "OK?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1130,
        "y": 280,
        "wires": [
            [
                "4b36e75618190e20"
            ]
        ]
    },
    {
        "id": "d412c2bf8e8e3645",
        "type": "function",
        "z": "ad61a36faca2db15",
        "name": "name",
        "func": "flow.set(\"name\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 180,
        "wires": [
            [
                "96b8fc8aa049ec04"
            ]
        ]
    },
    {
        "id": "6fdf396d890231a7",
        "type": "ui_button",
        "z": "ad61a36faca2db15",
        "name": "",
        "group": "b5d3eb285beaa20a",
        "order": 7,
        "width": 16,
        "height": 1,
        "passthru": false,
        "label": "Truy xuất",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 540,
        "y": 300,
        "wires": [
            [
                "5790ce52e298b594"
            ]
        ]
    },
    {
        "id": "78454e06a56f6ff4",
        "type": "function",
        "z": "ad61a36faca2db15",
        "name": "",
        "func": "//if ( msg.payload.hasOwnProperty('time') && msg.payload.hasOwnProperty('date')&& msg.payload.hasOwnProperty('time2') && msg.payload.hasOwnProperty('date2')){\n    msg.payload.mytime = msg.payload.date +\" \" +msg.payload.time; \n    msg.payload.mytime2 =msg.payload.date2 +\" \" +msg.payload.time2; \n    flow.set(\"mychoice\", msg.payload);\n//}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "592474aefa02de8a",
        "type": "inject",
        "z": "ad61a36faca2db15",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 540,
        "y": 380,
        "wires": [
            [
                "5790ce52e298b594"
            ]
        ]
    },
    {
        "id": "b1cae718d7b81aa6",
        "type": "ui_date_picker",
        "z": "ad61a36faca2db15",
        "name": "To date",
        "label": "",
        "group": "b5d3eb285beaa20a",
        "order": 5,
        "width": 8,
        "height": 1,
        "passthru": true,
        "topic": "date2",
        "topicType": "str",
        "className": "",
        "x": 540,
        "y": 220,
        "wires": [
            [
                "1c9abffe2757c83c"
            ]
        ]
    },
    {
        "id": "01228cc540afba50",
        "type": "ui_text_input",
        "z": "ad61a36faca2db15",
        "name": "To time",
        "label": "Time2",
        "tooltip": "",
        "group": "b5d3eb285beaa20a",
        "order": 6,
        "width": 8,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": "10",
        "topic": "time2",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 540,
        "y": 260,
        "wires": [
            [
                "caaaaed497ec0217"
            ]
        ]
    },
    {
        "id": "ec522692382cca21",
        "type": "ui_text",
        "z": "ad61a36faca2db15",
        "group": "b5d3eb285beaa20a",
        "order": 4,
        "width": 16,
        "height": 1,
        "name": "den_ngay",
        "label": "Đến ngày",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 300,
        "y": 220,
        "wires": []
    },
    {
        "id": "507124c69ce8d9f2",
        "type": "inject",
        "z": "ad61a36faca2db15",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 520,
        "wires": [
            [
                "3c6301010e204a03"
            ]
        ]
    },
    {
        "id": "3c6301010e204a03",
        "type": "function",
        "z": "ad61a36faca2db15",
        "name": "saved",
        "func": "let saved = flow.get(\"mychoice\") || {};\nmsg.payload = saved;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 520,
        "wires": [
            [
                "8219899fccb8d783"
            ]
        ]
    },
    {
        "id": "a47b8b5a81a8c89f",
        "type": "mysql",
        "z": "ad61a36faca2db15",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 580,
        "y": 520,
        "wires": [
            [
                "444415c743506734",
                "38d8e32eb3569103",
                "062f81d1d252d419",
                "69105e9c7631d002",
                "49729a1c6a15454d"
            ]
        ]
    },
    {
        "id": "4b36e75618190e20",
        "type": "switch",
        "z": "ad61a36faca2db15",
        "name": "msg.next",
        "property": "next",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1260,
        "y": 280,
        "wires": [
            [
                "0396df4c309a190e"
            ]
        ]
    },
    {
        "id": "0396df4c309a190e",
        "type": "link out",
        "z": "ad61a36faca2db15",
        "name": "next1",
        "mode": "link",
        "links": [
            "5b3fece28fb86f9e"
        ],
        "x": 1365,
        "y": 280,
        "wires": []
    },
    {
        "id": "5b3fece28fb86f9e",
        "type": "link in",
        "z": "ad61a36faca2db15",
        "name": "next2",
        "links": [
            "0396df4c309a190e"
        ],
        "x": 145,
        "y": 580,
        "wires": [
            [
                "3c6301010e204a03"
            ]
        ]
    },
    {
        "id": "11740d148a35622d",
        "type": "catch",
        "z": "ad61a36faca2db15",
        "name": "",
        "scope": [
            "013410f48b00aa3a"
        ],
        "uncaught": false,
        "x": 110,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "710761f7df78e279",
        "type": "moment",
        "z": "ad61a36faca2db15",
        "name": "just_hours",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": "7",
        "adjType": "hours",
        "adjDir": "subtract",
        "format": "HH:mm",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 730,
        "y": 140,
        "wires": [
            [
                "96b8fc8aa049ec04"
            ]
        ]
    },
    {
        "id": "75787ba8111cea5c",
        "type": "moment",
        "z": "ad61a36faca2db15",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 760,
        "y": 100,
        "wires": [
            [
                "96b8fc8aa049ec04"
            ]
        ]
    },
    {
        "id": "1c9abffe2757c83c",
        "type": "moment",
        "z": "ad61a36faca2db15",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 760,
        "y": 220,
        "wires": [
            [
                "96b8fc8aa049ec04"
            ]
        ]
    },
    {
        "id": "caaaaed497ec0217",
        "type": "moment",
        "z": "ad61a36faca2db15",
        "name": "just_hours",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": "7",
        "adjType": "hours",
        "adjDir": "subtract",
        "format": "HH:mm",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 730,
        "y": 260,
        "wires": [
            [
                "96b8fc8aa049ec04"
            ]
        ]
    },
    {
        "id": "38d8e32eb3569103",
        "type": "function",
        "z": "ad61a36faca2db15",
        "name": "bar_level",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar time_label = [];\nvar data = [];\nconst toTimestamp = (strDate) => {  \n  const dt = new Date(strDate).getTime();  \n  return dt / 1000;  \n}  \nvar max = 10; // so cot\n/*\nif (payload.length - max < 0 ){\n    max = payload.length;\n}\n*/\nif (payload.length >max ){\n     max = payload.length;\n}\n\n\n//var result_div; \n//var div =  Math.round(payload.length / 10);\nvar count_column  = 10;\n\nvar step =  Math.round(payload.length / count_column);\n\n/*\nif ( payload.length / 10 < 10){\n    step = div;\n}else  ( payload.length / 10 >= 10){\n    \n}\n*/\n\n//for(var j = payload.length -1; j >= (payload.length - max);j--){\nfor(var j = 0; j<max;j++){\n    if (j%step == 0){\n \n    let unix_timestamp =  toTimestamp(payload[j].thoi_gian);//\n    var date = new Date(unix_timestamp * 1000);\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var formattedTime = hours + ':' + minutes.substr(-2);\n    time_label.push(formattedTime);\n    //node.warn(unix_timestamp);\n    new_arr_gieng1.push(payload[j].muc_nuoc);\n    }\n    \n}\ndata.push(new_arr_gieng1);\n\nmsg.payload = {};\nvar m={};\n m={\n    \"series\": [\"Biểu đồ cột\"],\n    \"data\":data,\n    \"labels\": time_label\n};\nreturn {payload:[m]};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 600,
        "wires": [
            [
                "080ef5558ab69831"
            ]
        ]
    },
    {
        "id": "f0132304a9a3d6cc",
        "type": "ui_chart",
        "z": "ad61a36faca2db15",
        "name": "Chart_Flow",
        "group": "a556a2a47da61ea7",
        "order": 1,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "20",
        "removeOlder": "1",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "604800",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1030,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "080ef5558ab69831",
        "type": "ui_chart",
        "z": "ad61a36faca2db15",
        "name": "Bar_Flow",
        "group": "a556a2a47da61ea7",
        "order": 2,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "20",
        "removeOlder": "1",
        "removeOlderPoints": "100",
        "removeOlderUnit": "3600",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1020,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "0020e10ce4b38601",
        "type": "inject",
        "z": "ad61a36faca2db15",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 400,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "8219899fccb8d783",
        "type": "sqlstring-format",
        "z": "ad61a36faca2db15",
        "name": "",
        "query": "SELECT * FROM `mydata2`.`g7` where thoi_gian > ? AND  thoi_gian < ?  LIMIT 1000;",
        "vars": "payload.mytime , payload.mytime2",
        "outField": "topic",
        "x": 410,
        "y": 520,
        "wires": [
            [
                "a47b8b5a81a8c89f"
            ]
        ]
    },
    {
        "id": "cb68b87502f419c4",
        "type": "ui_text",
        "z": "ad61a36faca2db15",
        "group": "b5d3eb285beaa20a",
        "order": 8,
        "width": 16,
        "height": 1,
        "name": "label",
        "label": "Bảng dữ liệu",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 850,
        "y": 480,
        "wires": []
    },
    {
        "id": "0990dea91766dfc1",
        "type": "ui_text",
        "z": "ad61a36faca2db15",
        "group": "b5d3eb285beaa20a",
        "order": 1,
        "width": 16,
        "height": 1,
        "name": "tu_ngay",
        "label": "Từ ngày",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 300,
        "y": 100,
        "wires": []
    },
    {
        "id": "444415c743506734",
        "type": "function",
        "z": "ad61a36faca2db15",
        "name": "chart_level",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar count_line  = 20;\n\nvar step =  Math.round(payload.length / count_line);\n\n//var step = 10;\n\nfor(var j = 0; j<payload.length;j++){\n       if (j% step == 0){\n    var gieng1 = { \"x\": payload[j].thoi_gian , \"y\": payload[j].muc_nuoc};\n    new_arr_gieng1.push(gieng1);\n       }\n}\n\n\n\n\n\n\nmsg.payload = [{\n\"series\": [\"Biểu đồ đường\"],\n\"data\": [new_arr_gieng1],\n\"labels\": [\"\"]\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 560,
        "wires": [
            [
                "f0132304a9a3d6cc"
            ]
        ]
    },
    {
        "id": "890f8ce37b5d50e6",
        "type": "http in",
        "z": "ad61a36faca2db15",
        "name": "",
        "url": "/KT01",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 740,
        "wires": [
            [
                "662a75c2e1de0b94"
            ]
        ]
    },
    {
        "id": "662a75c2e1de0b94",
        "type": "function",
        "z": "ad61a36faca2db15",
        "name": "saved",
        "func": "let saved = flow.get(\"mychoice\") || {};\nmsg.payload = saved;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 740,
        "wires": [
            [
                "45d5c7f4a1b39635"
            ]
        ]
    },
    {
        "id": "45d5c7f4a1b39635",
        "type": "sqlstring-format",
        "z": "ad61a36faca2db15",
        "name": "sql g7",
        "query": "SELECT * FROM `mydata2`.`g7` where thoi_gian > ? AND  thoi_gian < ? ;",
        "vars": "payload.mytime, payload.mytime2",
        "outField": "topic",
        "x": 510,
        "y": 740,
        "wires": [
            [
                "e0e820cb5a40efab"
            ]
        ]
    },
    {
        "id": "e0e820cb5a40efab",
        "type": "mysql",
        "z": "ad61a36faca2db15",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 750,
        "y": 740,
        "wires": [
            [
                "36b5eb99285c2bbf"
            ]
        ]
    },
    {
        "id": "36b5eb99285c2bbf",
        "type": "function",
        "z": "ad61a36faca2db15",
        "name": "timetoLocaleString",
        "func": "var payload = msg.payload ;\nfor (var j = 0; j< payload.length;j++){\n    msg.payload[j].thoi_gian =  msg.payload[j].thoi_gian.toLocaleString();\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 740,
        "wires": [
            [
                "a062dd6e895057ac"
            ]
        ]
    },
    {
        "id": "a062dd6e895057ac",
        "type": "csv",
        "z": "ad61a36faca2db15",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "thoi_gian,muc_nuoc,status_level,luu_luong,status_flow,luu_luong_tong,tong_ngay",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1130,
        "y": 740,
        "wires": [
            [
                "1932173c0b583053"
            ]
        ]
    },
    {
        "id": "1932173c0b583053",
        "type": "function",
        "z": "ad61a36faca2db15",
        "name": "Set Headers",
        "func": "msg.headers = {}\nvar file_name = msg.req.originalUrl.replace(\"/\",\"\");\nmsg.headers[\"Content-type\"] = \"text/csv\";\nmsg.headers[\"Content-Disposition\"] = \"attachment; filename=\"+file_name+\".csv\";\nmsg.headers[\"Pragma\"] = \"no-cache\";\nmsg.headers[\"Expires\"] = \"0\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 740,
        "wires": [
            [
                "9326ee3ec21a5f7e"
            ]
        ]
    },
    {
        "id": "9326ee3ec21a5f7e",
        "type": "http response",
        "z": "ad61a36faca2db15",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1410,
        "y": 780,
        "wires": []
    },
    {
        "id": "204ba9617b64e4a5",
        "type": "function",
        "z": "ad61a36faca2db15",
        "name": "Set 404",
        "func": "msg.payload = msg.error;\nmsg.statusCode = 404;//resource not found\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 780,
        "wires": [
            [
                "9326ee3ec21a5f7e"
            ]
        ]
    },
    {
        "id": "b47b79856ad0c23c",
        "type": "ui_template",
        "z": "ad61a36faca2db15",
        "group": "b5d3eb285beaa20a",
        "name": "present download link on dashboard",
        "order": 10,
        "width": 16,
        "height": 1,
        "format": "<div >\n    <i class=\"fa fa-file-excel-o\" aria-hidden=\"true\"></i>\n    <a href=\"/KT01\">[Excel] Click để tải về</a>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 850,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "15e72b1c5869ba8b",
        "type": "catch",
        "z": "ad61a36faca2db15",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 1100,
        "y": 780,
        "wires": [
            [
                "204ba9617b64e4a5"
            ]
        ]
    },
    {
        "id": "7d9d5aed48105f32",
        "type": "comment",
        "z": "ad61a36faca2db15",
        "name": "LIMIT 100;",
        "info": "",
        "x": 360,
        "y": 580,
        "wires": []
    },
    {
        "id": "69105e9c7631d002",
        "type": "function",
        "z": "ad61a36faca2db15",
        "name": "bar_flow",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar time_label = [];\nvar data = [];\nconst toTimestamp = (strDate) => {  \n  const dt = new Date(strDate).getTime();  \n  return dt / 1000;  \n}  \nvar max = 10; // so cot\n/*\nif (payload.length - max < 0 ){\n    max = payload.length;\n}\n*/\nif (payload.length >max ){\n     max = payload.length;\n}\n\n\n//var result_div; \n//var div =  Math.round(payload.length / 10);\nvar count_column  = 10;\n\nvar step =  Math.round(payload.length / count_column);\n\n/*\nif ( payload.length / 10 < 10){\n    step = div;\n}else  ( payload.length / 10 >= 10){\n    \n}\n*/\n\n//for(var j = payload.length -1; j >= (payload.length - max);j--){\nfor(var j = 0; j<max;j++){\n    if (j%step == 0){\n \n    let unix_timestamp =  toTimestamp(payload[j].thoi_gian);//\n    var date = new Date(unix_timestamp * 1000);\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var formattedTime = hours + ':' + minutes.substr(-2);\n    time_label.push(formattedTime);\n    //node.warn(unix_timestamp);\n    new_arr_gieng1.push(payload[j].luu_luong);\n    }\n    \n}\ndata.push(new_arr_gieng1);\n\nmsg.payload = {};\nvar m={};\n m={\n    \"series\": [\"Biểu đồ cột\"],\n    \"data\":data,\n    \"labels\": time_label\n};\nreturn {payload:[m]};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 680,
        "wires": [
            [
                "405a26294afc5e87"
            ]
        ]
    },
    {
        "id": "e893195ba71b9211",
        "type": "ui_chart",
        "z": "ad61a36faca2db15",
        "name": "Chart_Flow",
        "group": "f34913c21691d304",
        "order": 1,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": "1",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "604800",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1030,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "405a26294afc5e87",
        "type": "ui_chart",
        "z": "ad61a36faca2db15",
        "name": "Bar_Flow",
        "group": "f34913c21691d304",
        "order": 2,
        "width": 8,
        "height": 8,
        "label": "",
        "chartType": "bar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": "1",
        "removeOlderPoints": "100",
        "removeOlderUnit": "3600",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#2c87c9",
            "#ff4d5e",
            "#916e50",
            "#2ca02c",
            "#98df8a",
            "#7b6b6b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1020,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "062f81d1d252d419",
        "type": "function",
        "z": "ad61a36faca2db15",
        "name": "chart_flow",
        "func": "var payload = msg.payload;\nvar new_arr_gieng1 = [];\nvar count_line  = 20;\n\nvar step =  Math.round(payload.length / count_line);\n\n//var step = 10;\n\nfor(var j = 0; j<payload.length;j++){\n       if (j% step == 0){\n    var gieng1 = { \"x\": payload[j].thoi_gian , \"y\": payload[j].luu_luong};\n    new_arr_gieng1.push(gieng1);\n       }\n}\n\n\n\n\n\n\nmsg.payload = [{\n\"series\": [\"Biểu đồ đường\"],\n\"data\": [new_arr_gieng1],\n\"labels\": [\"\"]\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 640,
        "wires": [
            [
                "e893195ba71b9211"
            ]
        ]
    },
    {
        "id": "6fa77d1dfa169721",
        "type": "ui_gauge",
        "z": "ad61a36faca2db15",
        "name": "",
        "group": "dfc8284536ce79dc",
        "order": 2,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Lưu Lượng",
        "label": " m3/h",
        "format": "{{msg.luu_luong}}",
        "min": 0,
        "max": "60",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 390,
        "y": 900,
        "wires": []
    },
    {
        "id": "935165d6f77d67db",
        "type": "link in",
        "z": "ad61a36faca2db15",
        "name": "kt10_detail",
        "links": [
            "ca7da970d6a604c6"
        ],
        "x": 205,
        "y": 880,
        "wires": [
            [
                "6fa77d1dfa169721",
                "7102a8b9f32abaad",
                "6536cc9f0052e268",
                "ef380df17154a6ca"
            ]
        ]
    },
    {
        "id": "7102a8b9f32abaad",
        "type": "ui_gauge",
        "z": "ad61a36faca2db15",
        "name": "",
        "group": "dfc8284536ce79dc",
        "order": 1,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Mực nước",
        "label": " m",
        "format": "{{msg.muc_nuoc}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 390,
        "y": 840,
        "wires": []
    },
    {
        "id": "6536cc9f0052e268",
        "type": "ui_gauge",
        "z": "ad61a36faca2db15",
        "name": "",
        "group": "dfc8284536ce79dc",
        "order": 4,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Lưu Lượng Tổng",
        "label": " m3",
        "format": "{{msg.luu_luong_tong}}",
        "min": 0,
        "max": "999999999",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 410,
        "y": 1020,
        "wires": []
    },
    {
        "id": "49729a1c6a15454d",
        "type": "function",
        "z": "ad61a36faca2db15",
        "name": "data2table",
        "func": "var arr = [];\nvar payload = msg.payload;\nfor (var i = 0; i < msg.payload.length; i++) {\n    var d = new Date(payload[i].thoi_gian);\n    var text = d.toLocaleString();\n    var obj = { \"Thời gian\": text, \"Mực nước\": payload[i].muc_nuoc, \"TT_Mực nước\": payload[i].status_level, \"Lưu lượng\": payload[i].luu_luong, \"TT_Lưu Lượng\": payload[i].status_flow,\"Tổng\": payload[i].luu_luong_tong, \"Tổng 24h\": payload[i].tong_ngay};\n    arr.push(obj);\n}\nmsg.payload = arr;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 520,
        "wires": [
            [
                "3bd6b0f87a4dacb3"
            ]
        ]
    },
    {
        "id": "3bd6b0f87a4dacb3",
        "type": "ui_table",
        "z": "ad61a36faca2db15",
        "group": "b5d3eb285beaa20a",
        "name": "",
        "order": 9,
        "width": 16,
        "height": 9,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1010,
        "y": 520,
        "wires": []
    },
    {
        "id": "ef380df17154a6ca",
        "type": "ui_gauge",
        "z": "ad61a36faca2db15",
        "name": "",
        "group": "dfc8284536ce79dc",
        "order": 3,
        "width": 3,
        "height": 4,
        "gtype": "wave",
        "title": "Tổng 24h",
        "label": " m3",
        "format": "{{msg.tong_ngay}}",
        "min": 0,
        "max": "999",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 380,
        "y": 960,
        "wires": []
    },
    {
        "id": "9bb8ab27364d5beb",
        "type": "ui_template",
        "z": "bb7329521b9d0bbc",
        "group": "49f4204a709c0298",
        "name": "Logo",
        "order": 1,
        "width": 13,
        "height": 4,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 610,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "8a9ba5d1c315cc29",
        "type": "inject",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 270,
        "y": 260,
        "wires": [
            [
                "2409bbfbd1b1aaea",
                "db46e5e7cfc120c2",
                "919cb21dbc12e655"
            ]
        ]
    },
    {
        "id": "2409bbfbd1b1aaea",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "load logo",
        "func": "var imgUrl = \"https://www.thp.com.vn/tuyen-dung/wp-content/uploads/2019/12/logo_v1.png\";\n\nmsg.payload = \"<img src='\"+imgUrl+\"'alt='Logo image not found' />\";\n\nreturn msg",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 260,
        "wires": [
            [
                "9bb8ab27364d5beb"
            ]
        ]
    },
    {
        "id": "c24a00ea83f2d79e",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "49f4204a709c0298",
        "order": 2,
        "width": 13,
        "height": 1,
        "name": "cong trinh",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "Times New Roman,Times,serif",
        "fontSize": "25",
        "color": "#000000",
        "x": 580,
        "y": 300,
        "wires": []
    },
    {
        "id": "db46e5e7cfc120c2",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "function 1",
        "func": "msg.payload = \"<center>CÔNG TRÌNH QUAN TRẮC GIẾNG NGẦM<br>\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 300,
        "wires": [
            [
                "c24a00ea83f2d79e"
            ]
        ]
    },
    {
        "id": "d1ec8f88eaeefaeb",
        "type": "ui_template",
        "z": "bb7329521b9d0bbc",
        "group": "d3d57a17707c3d03",
        "name": "GMAP",
        "order": 1,
        "width": 22,
        "height": 16,
        "format": "<!DOCTYPE html>\n<html>\n\n<head>\n    <style>\n        /* Set the size of the div element that contains the map */\n        #map {\n            height: 100%;\n            /* The height is 400 pixels */\n            width: 100%;\n            /* The width is the width of the web page */\n        }\n    </style>\n</head>\n\n<body>\n\n    <!--The div element for the map -->\n    <div id=\"map\"></div>\n\n\n    <script>\n        var latitude;\nvar longitude;\nvar isPopupOpen = true;\n  var locations = [\n { latitude: 20.485813887805943, longitude: 105.8821486957129, name: 'KT10', level: 0, flow: 0, totalday: 0, total: 0  },\n { latitude: 20.4860092868859, longitude: 105.88109276687771, name: 'KT03', level: 0, flow: 0, totalday: 0, total: 0},\n { latitude: 20.485924286314106, longitude: 105.88116002454832, name: 'KT08', level: 0, flow: 0, totalday: 0, total: 0 },\n  { latitude: 20.494368826369307, longitude: 105.88027646687797, name: 'KT07', level: 0, flow: 0, totalday: 0, total: 0},\n  { latitude: 20.499571371989372, longitude: 105.8809661957133, name: 'KT05', level: 0, flow: 0, totalday: 0, total: 0},\n { latitude: 20.48597453793044, longitude: 105.88114929571303, name: 'KT02', level: 0, flow: 0, totalday: 0, total: 0},\n  { latitude: 20.506996860012077, longitude: 105.8780517957135, name: 'KT01', level: 0, flow: 0, totalday: 0, total: 0},\n  //{ latitude: 20.494368826369307, longitude: 105.88027646687797, name: 'KT04'},\n  //{ latitude: 20.496775923053374, longitude: 105.88182973804267, name: 'KT06'},\n  //{ latitude: 20.50169636696933, longitude: 105.87966159571346, name: 'KT09'},\n  ];\n  \n  // Initialize and add the map 20.497048, 105.885244\n\n\n  function initMap() \n  {\n  var centerLocation = { lat: 20.497048, lng: 105.885244 }; // Điểm tâm của bản đồ\n  \n  var map = new google.maps.Map(document.getElementById('map'), {\n  zoom: 15,\n  center: centerLocation,\n  mapTypeId: 'roadmap',\n  mapId: '2684d03b8d316e25'\n  });\n  \n  // Sử dụng vòng lặp để thêm marker và thông báo popup cho từng định vị\n  for (var i = 0; i < locations.length; i++) \n  { \n      var location=locations[i]; \n      var marker=new google.maps.Marker\n      (\n      { \n        position: {lat: location.latitude, lng: location.longitude }, \n         map: map, \n        title: location.name, \n      }\n      ); \n      // Tạo một thông báo popup cho từng định vị với số liệu và xuống dòng \n      var infowindow=new google.maps.InfoWindow\n      (\n      {\n        content: '<div style=\"font-size: 16px;font-family: Times New Roman, sans-serif;' + (i < 10 ? 'color: #002aff;' : '') + '\">' +\n        '' + location.name + '<br>' +\n        'Mực nước (m): <span id=\"level' + i + '\">0</span><br>' +\n        'Lưu lượng (m3/h): <span id=\"flow' + i + '\">0</span><br>' +\n        'Tổng 24H (m3): <span id=\"totalday' + i + '\">0</span><br>' +\n        'Tổng lưu lượng (m3): <span id=\"total' + i + '\">0</span><br>',\n      }\n      ); \n      // Thêm sự kiện click vào marker để mở hoặc đóng popup\n\n      infowindow.open(map, marker);\n      //infowindow.close(map, marker);\n      marker.addListener('click', (function(infowindow) \n      { \n      return function() \n      { \n        if (isPopupOpen) \n        { \n          infowindow.close(map); //Đóng popup nếu nó đã mở \n        } \n        else \n        { \n          infowindow.open(map, this); // Mở popup nếu nó đã đóng \n        } \n          isPopupOpen=!isPopupOpen; //Đảo ngược trạng thái \n        }; \n        })(infowindow)); // Tuỳ chỉnh giao diện của popup bằng CSS khi mở hoặc đóng popup\n    google.maps.event.addListener(infowindow, 'domready' , function() \n    { \n        var iwOuter=document.querySelector('.gm-style-iw'); \n        var iwBackground=iwOuter.previousElementSibling; \n        if (isPopupOpen) \n        {\n          iwOuter.style.backgroundColor='rgba(255, 255, 255, 0.7)' ; // Giao diện khi mở \n          iwOuter.style.color='black' ; \n        } \n        else \n        {\n          iwOuter.style.backgroundColor='transparent' ; // Giao diện khi đóng \n          iwOuter.style.color='transparent' ; \n        }\n          iwBackground.style.display='none' ; \n          iwOuter.style.color='black' ;\n        }); \n    } \n    \n    function updatePopupData() \n    {\n                const apiUrl = '/get-data'\n            // Thực hiện yêu cầu HTTP để lấy giá trị 'cod' từ API của bạn\n            fetch(apiUrl)\n            .then(response => response.json())\n            .then(data => {\n            for (var i = 0; i < locations.length; i++) \n            { \n                var levelValue=data[i].LEVEL;\n                var flowValue=data[i].FLOW;\n                var totalValue=data[i].TOTAL;               \n                var totaldayValue=data[i].TOTALDAY; \n                document.getElementById('level' +i).textContent=levelValue; \n                document.getElementById('flow' +i).textContent=flowValue; \n                document.getElementById('total' +i).textContent=totalValue;               \n                document.getElementById('totalday' +i).textContent=totaldayValue;\n                } }) .catch(error=> {\n                console.error('Lỗi khi lấy giá trị:', error);\n                });\n                }\n\n            // Gọi hàm cập nhật dữ liệu mỗi 5 giây (5000 milliseconds)\n            setInterval(updatePopupData, 1000);       \n    }\n\n    </script>\n<script async defer\n    src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyB1yTGuOxIXgzwPnQ3WBT2JEFfFpH3DvT4&libraries=drawing&callback=initMap\">\n</script>\n        </body>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 670,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "127e3b38c19fbf4e",
        "type": "http in",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "url": "/get-data",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 690,
        "y": 40,
        "wires": [
            [
                "abedfda57241e947"
            ]
        ]
    },
    {
        "id": "abedfda57241e947",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "func": "var value_LEVEL_1 = global.get('level_1');\nvar value_FLOW_1 = global.get('flow_1');\nvar value_TOTAL_1 = global.get('total_1');\nvar value_TOTALDAY_1 = global.get('tong_ngay_1');\nvar value_LEVEL_2 = global.get('level_2');\nvar value_FLOW_2 = global.get('flow_2');\nvar value_TOTAL_2 = global.get('total_2');\nvar value_TOTALDAY_2 = global.get('tong_ngay_2');\nvar value_LEVEL_3 = global.get('level_3');\nvar value_FLOW_3 = global.get('flow_3');\nvar value_TOTAL_3 = global.get('total_3');\nvar value_TOTALDAY_3 = global.get('tong_ngay_3');\nvar value_LEVEL_4 = global.get('level_4');\nvar value_FLOW_4 = global.get('flow_4');\nvar value_TOTAL_4 = global.get('total_4');\nvar value_TOTALDAY_4 = global.get('tong_ngay_4');\nvar value_LEVEL_5 = global.get('level_5');\nvar value_FLOW_5 = global.get('flow_5');\nvar value_TOTAL_5 = global.get('total_5');\nvar value_TOTALDAY_5 = global.get('tong_ngay_5');\nvar value_LEVEL_6 = global.get('level_6');\nvar value_FLOW_6 = global.get('flow_6');\nvar value_TOTAL_6 = global.get('total_6');\nvar value_TOTALDAY_6 = global.get('tong_ngay_6');\nvar value_LEVEL_7 = global.get('level_7');\nvar value_FLOW_7 = global.get('flow_7');\nvar value_TOTAL_7 = global.get('total_7');\nvar value_TOTALDAY_7 = global.get('tong_ngay_7');\n\nmsg.payload = [\n{ latitude: 40.712776, longitude: -74.005974, name: 'KT01', LEVEL: value_LEVEL_1,FLOW: value_FLOW_1, TOTALDAY: value_TOTALDAY_1, TOTAL: value_TOTAL_1 },\n{ latitude: 40.712776, longitude: -74.005974, name: 'KT02', LEVEL: value_LEVEL_2,FLOW: value_FLOW_2, TOTALDAY: value_TOTALDAY_2, TOTAL: value_TOTAL_2 },\n{ latitude: 40.712776, longitude: -74.005974, name: 'KT03', LEVEL: value_LEVEL_3, FLOW: value_FLOW_3, TOTALDAY: value_TOTALDAY_3, TOTAL: value_TOTAL_3 },\n{ latitude: 40.712776, longitude: -74.005974, name: 'KT05', LEVEL: value_LEVEL_4, FLOW: value_FLOW_4, TOTALDAY: value_TOTALDAY_4, TOTAL: value_TOTAL_4 },\n{ latitude: 40.712776, longitude: -74.005974, name: 'KT07', LEVEL: value_LEVEL_5, FLOW: value_FLOW_5, TOTALDAY: value_TOTALDAY_5, TOTAL: value_TOTAL_5 },\n{ latitude: 40.712776, longitude: -74.005974, name: 'KT08', LEVEL: value_LEVEL_6, FLOW: value_FLOW_6, TOTALDAY: value_TOTALDAY_6, TOTAL: value_TOTAL_6 },\n{ latitude: 40.712776, longitude: -74.005974, name: 'KT10', LEVEL: value_LEVEL_7, FLOW: value_FLOW_7, TOTALDAY: value_TOTALDAY_7, TOTAL: value_TOTAL_7 },\n];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 80,
        "wires": [
            [
                "84cd5947841e51f3"
            ]
        ]
    },
    {
        "id": "84cd5947841e51f3",
        "type": "http response",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 80,
        "wires": []
    },
    {
        "id": "e51c451725aa941a",
        "type": "cronplus",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 220,
        "y": 100,
        "wires": [
            [
                "d1ec8f88eaeefaeb",
                "abedfda57241e947"
            ]
        ]
    },
    {
        "id": "46641e3420475664",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "49f4204a709c0298",
        "order": 3,
        "width": 13,
        "height": 1,
        "name": "cong ty",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "Times New Roman,Times,serif",
        "fontSize": "20",
        "color": "#1c2eba",
        "x": 600,
        "y": 340,
        "wires": []
    },
    {
        "id": "919cb21dbc12e655",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "function 77",
        "func": "msg.payload = \"<center>Công ty TNHH Number One Hà Nam<br>Lô I-CN-5, KCN Thanh Liêm, P.Thanh Tuyền, Tp.Phủ Lý, Hà Nam<br>\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "46641e3420475664"
            ]
        ]
    },
    {
        "id": "1bb4c5967ff3e6b9",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "check connect g1",
        "func": "var connect = global.get(\"counter_g1\");\nif (connect  < 2)\n{\n    msg.payload = false;\n}\nelse\n{\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 520,
        "wires": [
            [
                "88c9c45a9e1cae1d"
            ]
        ]
    },
    {
        "id": "c87d6495a4a7f527",
        "type": "delay",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 420,
        "y": 480,
        "wires": [
            [
                "abd41738c6b495de"
            ]
        ]
    },
    {
        "id": "abd41738c6b495de",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "reset counter",
        "func": "global.set(\"counter_g1\", 0);\nglobal.set(\"counter_g2\", 0);\nglobal.set(\"counter_g3\", 0);\nglobal.set(\"counter_g4\", 0);\nglobal.set(\"counter_g5\", 0);\nglobal.set(\"counter_g6\", 0);\nglobal.set(\"counter_g7\", 0);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "88c9c45a9e1cae1d",
        "type": "ui_led",
        "z": "bb7329521b9d0bbc",
        "order": 24,
        "group": "49f4204a709c0298",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect kt10",
        "x": 680,
        "y": 520,
        "wires": []
    },
    {
        "id": "c459db4c5ae2d30b",
        "type": "cronplus",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */5 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 220,
        "y": 500,
        "wires": [
            [
                "c87d6495a4a7f527",
                "1bb4c5967ff3e6b9",
                "b0848e6d7b176268",
                "90f92c346b0f8aff",
                "04f49fc9ad4f9228",
                "9a1627a7680ac7c1",
                "609a08a555bf26da",
                "f584dc21d411f7c0"
            ]
        ]
    },
    {
        "id": "c84b461e0fd978f0",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "49f4204a709c0298",
        "order": 23,
        "width": 6,
        "height": 1,
        "name": "check connect kt10",
        "label": "<font color=\"black\"><b>Kết nối với Datalogger KT10:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 450,
        "y": 560,
        "wires": []
    },
    {
        "id": "5c582a4c6ebba141",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "49f4204a709c0298",
        "order": 25,
        "width": 6,
        "height": 1,
        "name": "status ftp kt10-maps",
        "label": "<b>Số file txt gửi thành công đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1420,
        "y": 1720,
        "wires": []
    },
    {
        "id": "55412a2da01e997f",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "49f4204a709c0298",
        "order": 11,
        "width": 6,
        "height": 1,
        "name": "check connect kt03",
        "label": "<font color=\"black\"><b>Kết nối với Datalogger KT03:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 450,
        "y": 640,
        "wires": []
    },
    {
        "id": "afb471f0ca865bf0",
        "type": "ui_led",
        "z": "bb7329521b9d0bbc",
        "order": 12,
        "group": "49f4204a709c0298",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect kt03",
        "x": 680,
        "y": 600,
        "wires": []
    },
    {
        "id": "b2b263a47bdf7928",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "49f4204a709c0298",
        "order": 13,
        "width": 6,
        "height": 1,
        "name": "status ftp kt03-maps",
        "label": "<b>Số file txt gửi thành công đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1420,
        "y": 1760,
        "wires": []
    },
    {
        "id": "d5a6115ba7374b99",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "49f4204a709c0298",
        "order": 20,
        "width": 6,
        "height": 1,
        "name": "check connect kt08",
        "label": "<font color=\"black\"><b>Kết nối với Datalogger KT08:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 450,
        "y": 720,
        "wires": []
    },
    {
        "id": "e0b5831144ec03e4",
        "type": "ui_led",
        "z": "bb7329521b9d0bbc",
        "order": 21,
        "group": "49f4204a709c0298",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect kt08",
        "x": 680,
        "y": 680,
        "wires": []
    },
    {
        "id": "22f75c80a97cbfde",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "49f4204a709c0298",
        "order": 22,
        "width": 6,
        "height": 1,
        "name": "status ftp kt08-maps",
        "label": "<b>Số file txt gửi thành công đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1420,
        "y": 1800,
        "wires": []
    },
    {
        "id": "dc96e0192a74ee40",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "49f4204a709c0298",
        "order": 17,
        "width": 6,
        "height": 1,
        "name": "check connect kt07",
        "label": "<font color=\"black\"><b>Kết nối với Datalogger KT07:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 450,
        "y": 800,
        "wires": []
    },
    {
        "id": "0d3ca076edcfc1d3",
        "type": "ui_led",
        "z": "bb7329521b9d0bbc",
        "order": 18,
        "group": "49f4204a709c0298",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect kt07",
        "x": 680,
        "y": 760,
        "wires": []
    },
    {
        "id": "eee01da389550374",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "49f4204a709c0298",
        "order": 19,
        "width": 6,
        "height": 1,
        "name": "status ftp kt07-maps",
        "label": "<b>Số file txt gửi thành công đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1420,
        "y": 1840,
        "wires": []
    },
    {
        "id": "e8f0f170e375a078",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "49f4204a709c0298",
        "order": 14,
        "width": 6,
        "height": 1,
        "name": "check connect kt05",
        "label": "<font color=\"black\"><b>Kết nối với Datalogger KT05",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 450,
        "y": 880,
        "wires": []
    },
    {
        "id": "4ec7afc13bccd9bc",
        "type": "ui_led",
        "z": "bb7329521b9d0bbc",
        "order": 15,
        "group": "49f4204a709c0298",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect kt05",
        "x": 680,
        "y": 840,
        "wires": []
    },
    {
        "id": "294ed0214e08c9c8",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "49f4204a709c0298",
        "order": 16,
        "width": 6,
        "height": 1,
        "name": "status ftp kt05-maps",
        "label": "<b>Số file txt gửi thành công đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1420,
        "y": 1880,
        "wires": []
    },
    {
        "id": "6a074fcd5abd9950",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "49f4204a709c0298",
        "order": 8,
        "width": 6,
        "height": 1,
        "name": "check connect kt02",
        "label": "<font color=\"black\"><b>Kết nối với Datalogger KT02:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 450,
        "y": 960,
        "wires": []
    },
    {
        "id": "c3c69779aab11d74",
        "type": "ui_led",
        "z": "bb7329521b9d0bbc",
        "order": 9,
        "group": "49f4204a709c0298",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect kt02",
        "x": 680,
        "y": 920,
        "wires": []
    },
    {
        "id": "459a505ca3d1c248",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "49f4204a709c0298",
        "order": 10,
        "width": 6,
        "height": 1,
        "name": "status ftp kt02-maps",
        "label": "<b>Số file txt gửi thành công đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1420,
        "y": 1920,
        "wires": []
    },
    {
        "id": "7ab983945ecb6ba0",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "49f4204a709c0298",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "check connect kt01",
        "label": "<font color=\"black\"><b>Kết nối với Datalogger KT01:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 450,
        "y": 1040,
        "wires": []
    },
    {
        "id": "a4b595bdc990d8b9",
        "type": "ui_led",
        "z": "bb7329521b9d0bbc",
        "order": 6,
        "group": "49f4204a709c0298",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "led connect kt01",
        "x": 680,
        "y": 1000,
        "wires": []
    },
    {
        "id": "cd20c177c809283c",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "49f4204a709c0298",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "status ftp kt01-maps",
        "label": "<b>Số file txt gửi thành công đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1420,
        "y": 1960,
        "wires": []
    },
    {
        "id": "6242d51135692da1",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "49f4204a709c0298",
        "order": 28,
        "width": 12,
        "height": 1,
        "name": "space",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 650,
        "y": 380,
        "wires": []
    },
    {
        "id": "4b564a7ecee3fae9",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "49f4204a709c0298",
        "order": 26,
        "width": 12,
        "height": 1,
        "name": "tong kt 24h",
        "label": "<font color=\"blue\"><b>Tổng lưu lượng các giếng đã khai thác trong 24H (m3):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 670,
        "y": 420,
        "wires": []
    },
    {
        "id": "9e816bb5af10ab8f",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "coun ftp file g1",
        "func": "var counter_ftp_g1 = global.get(\"counter_ftp_g1\");\ncounter_ftp_g1 ++;  \nglobal.set(\"file_ftp_g1\", counter_ftp_g1);\nglobal.set(\"sendftp_g1\", true);\nmsg = {};\nmsg.count_ftp_ok = counter_ftp_g1;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1420,
        "wires": [
            [
                "0f55b3d763a7fd37"
            ]
        ]
    },
    {
        "id": "cdd399c347489a72",
        "type": "mqtt in",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "topic": "/FTP1/",
        "qos": "2",
        "datatype": "auto",
        "broker": "2e1b0fe437ae8782",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 1420,
        "wires": [
            [
                "95c9668887d4edad"
            ]
        ]
    },
    {
        "id": "95c9668887d4edad",
        "type": "string",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "prop": "payload",
        "propout": "payload",
        "object": "msg",
        "objectout": "msg",
        "x": 530,
        "y": 1420,
        "wires": [
            [
                "9e816bb5af10ab8f",
                "3539def07b9c9089"
            ]
        ]
    },
    {
        "id": "ae163ac42366fc7e",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "coun ftp file g2",
        "func": "var counter_ftp_g2 = global.get(\"counter_ftp_g2\");\ncounter_ftp_g2++;\nglobal.set(\"file_ftp_g2\", counter_ftp_g2);\nglobal.set(\"sendftp_g2\", true);\nmsg = {};\nmsg.count_ftp_ok = counter_ftp_g2;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1460,
        "wires": [
            [
                "eb06d2a69619b1fe"
            ]
        ]
    },
    {
        "id": "a362d5121b43bd24",
        "type": "mqtt in",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "topic": "/FTP2/",
        "qos": "2",
        "datatype": "auto",
        "broker": "2e1b0fe437ae8782",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 1460,
        "wires": [
            [
                "264a38d77475e80b"
            ]
        ]
    },
    {
        "id": "264a38d77475e80b",
        "type": "string",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "prop": "payload",
        "propout": "payload",
        "object": "msg",
        "objectout": "msg",
        "x": 530,
        "y": 1460,
        "wires": [
            [
                "ae163ac42366fc7e",
                "3539def07b9c9089"
            ]
        ]
    },
    {
        "id": "71bbf50a9d117a8a",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "coun ftp file g3",
        "func": "var counter_ftp_g3 = global.get(\"counter_ftp_g3\");\ncounter_ftp_g3++;\nglobal.set(\"file_ftp_g3\", counter_ftp_g3);\nglobal.set(\"sendftp_g3\", true);\nmsg = {};\nmsg.count_ftp_ok = counter_ftp_g3;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1500,
        "wires": [
            [
                "7551650c7e14833e"
            ]
        ]
    },
    {
        "id": "ef0571ea98d2cd13",
        "type": "mqtt in",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "topic": "/FTP3/",
        "qos": "2",
        "datatype": "auto",
        "broker": "2e1b0fe437ae8782",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 1500,
        "wires": [
            [
                "c814a586d0a5885a"
            ]
        ]
    },
    {
        "id": "c814a586d0a5885a",
        "type": "string",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "prop": "payload",
        "propout": "payload",
        "object": "msg",
        "objectout": "msg",
        "x": 530,
        "y": 1500,
        "wires": [
            [
                "71bbf50a9d117a8a",
                "3539def07b9c9089"
            ]
        ]
    },
    {
        "id": "b00753af90ba35ee",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "coun ftp file g4",
        "func": "var counter_ftp_g4 = global.get(\"counter_ftp_g4\");\ncounter_ftp_g4++;\nglobal.set(\"file_ftp_g4\", counter_ftp_g4);\nglobal.set(\"sendftp_g4\", true);\nmsg = {};\nmsg.count_ftp_ok = counter_ftp_g4;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1540,
        "wires": [
            [
                "1df699486fd26592"
            ]
        ]
    },
    {
        "id": "ebdd162225285419",
        "type": "mqtt in",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "topic": "/FTP4/",
        "qos": "2",
        "datatype": "auto",
        "broker": "2e1b0fe437ae8782",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 1540,
        "wires": [
            [
                "69ba92af5b069618"
            ]
        ]
    },
    {
        "id": "69ba92af5b069618",
        "type": "string",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "prop": "payload",
        "propout": "payload",
        "object": "msg",
        "objectout": "msg",
        "x": 530,
        "y": 1540,
        "wires": [
            [
                "b00753af90ba35ee",
                "3539def07b9c9089"
            ]
        ]
    },
    {
        "id": "c88ab00d4126a679",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "coun ftp file g5",
        "func": "var counter_ftp_g5 = global.get(\"counter_ftp_g5\");\ncounter_ftp_g5++;\nglobal.set(\"file_ftp_g5\", counter_ftp_g5);\nglobal.set(\"sendftp_g5\", true);\nmsg = {};\nmsg.count_ftp_ok = counter_ftp_g5;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1580,
        "wires": [
            [
                "fde658a4d5b65775"
            ]
        ]
    },
    {
        "id": "ee0a139d71259bb1",
        "type": "mqtt in",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "topic": "/FTP5/",
        "qos": "2",
        "datatype": "auto",
        "broker": "2e1b0fe437ae8782",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 1580,
        "wires": [
            [
                "5f47729c8db87a3d"
            ]
        ]
    },
    {
        "id": "5f47729c8db87a3d",
        "type": "string",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "prop": "payload",
        "propout": "payload",
        "object": "msg",
        "objectout": "msg",
        "x": 530,
        "y": 1580,
        "wires": [
            [
                "c88ab00d4126a679",
                "3539def07b9c9089"
            ]
        ]
    },
    {
        "id": "0f55b3d763a7fd37",
        "type": "sqlstring-format",
        "z": "bb7329521b9d0bbc",
        "name": "insert_count_ftp_kt1",
        "query": "UPDATE dem_ftp_g1\nSET \n    count_ftp_ok = ?\n\n",
        "vars": "count_ftp_ok",
        "outField": "topic",
        "x": 940,
        "y": 1420,
        "wires": [
            [
                "95f5d3605ee8fcfd"
            ]
        ]
    },
    {
        "id": "eb06d2a69619b1fe",
        "type": "sqlstring-format",
        "z": "bb7329521b9d0bbc",
        "name": "insert_count_ftp_kt2",
        "query": "UPDATE dem_ftp_g2\nSET \n    count_ftp_ok = ?\n\n",
        "vars": "count_ftp_ok",
        "outField": "topic",
        "x": 940,
        "y": 1460,
        "wires": [
            [
                "dec306d099648ab1"
            ]
        ]
    },
    {
        "id": "7551650c7e14833e",
        "type": "sqlstring-format",
        "z": "bb7329521b9d0bbc",
        "name": "insert_count_ftp_kt3",
        "query": "UPDATE dem_ftp_g3\nSET \n    count_ftp_ok = ?\n\n",
        "vars": "count_ftp_ok",
        "outField": "topic",
        "x": 940,
        "y": 1500,
        "wires": [
            [
                "da69b6eec342e89c"
            ]
        ]
    },
    {
        "id": "1df699486fd26592",
        "type": "sqlstring-format",
        "z": "bb7329521b9d0bbc",
        "name": "insert_count_ftp_kt5",
        "query": "UPDATE dem_ftp_g4\nSET \n    count_ftp_ok = ?\n\n",
        "vars": "count_ftp_ok",
        "outField": "topic",
        "x": 940,
        "y": 1540,
        "wires": [
            [
                "1410fc6b026bda96"
            ]
        ]
    },
    {
        "id": "fde658a4d5b65775",
        "type": "sqlstring-format",
        "z": "bb7329521b9d0bbc",
        "name": "insert_count_ftp_kt7",
        "query": "UPDATE dem_ftp_g5\nSET \n    count_ftp_ok = ?\n\n",
        "vars": "count_ftp_ok",
        "outField": "topic",
        "x": 940,
        "y": 1580,
        "wires": [
            [
                "fc6beab6f4075faa"
            ]
        ]
    },
    {
        "id": "621be66b4eca66fc",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "coun ftp file g6",
        "func": "var counter_ftp_g6 = global.get(\"counter_ftp_g6\");\ncounter_ftp_g6++;\nglobal.set(\"file_ftp_g6\", counter_ftp_g6);\nglobal.set(\"sendftp_g6\", true);\nmsg = {};\nmsg.count_ftp_ok = counter_ftp_g6;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1620,
        "wires": [
            [
                "bcd74fd0409e1930"
            ]
        ]
    },
    {
        "id": "bbef68fae0907493",
        "type": "mqtt in",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "topic": "/FTP6/",
        "qos": "2",
        "datatype": "auto",
        "broker": "2e1b0fe437ae8782",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 1620,
        "wires": [
            [
                "bdc0d92002d2c69b"
            ]
        ]
    },
    {
        "id": "bdc0d92002d2c69b",
        "type": "string",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "prop": "payload",
        "propout": "payload",
        "object": "msg",
        "objectout": "msg",
        "x": 530,
        "y": 1620,
        "wires": [
            [
                "621be66b4eca66fc",
                "3539def07b9c9089"
            ]
        ]
    },
    {
        "id": "bcd74fd0409e1930",
        "type": "sqlstring-format",
        "z": "bb7329521b9d0bbc",
        "name": "insert_count_ftp_kt8",
        "query": "UPDATE dem_ftp_g6\nSET \n    count_ftp_ok = ?\n\n",
        "vars": "count_ftp_ok",
        "outField": "topic",
        "x": 940,
        "y": 1620,
        "wires": [
            [
                "73951c1dc49f7ef7"
            ]
        ]
    },
    {
        "id": "5599e73f7d1381b6",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "coun ftp file g7",
        "func": "var counter_ftp_g7 = global.get(\"counter_ftp_g7\");\ncounter_ftp_g7++;\nglobal.set(\"file_ftp_g7\", counter_ftp_g7);\nglobal.set(\"sendftp_g7\", true);\nmsg = {};\nmsg.count_ftp_ok = counter_ftp_g7;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1660,
        "wires": [
            [
                "ff62a065bfc34eba"
            ]
        ]
    },
    {
        "id": "45d1929cb44d539d",
        "type": "mqtt in",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "topic": "/FTP7/",
        "qos": "2",
        "datatype": "auto",
        "broker": "2e1b0fe437ae8782",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 1660,
        "wires": [
            [
                "ba578ecd53e3920d"
            ]
        ]
    },
    {
        "id": "ba578ecd53e3920d",
        "type": "string",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "prop": "payload",
        "propout": "payload",
        "object": "msg",
        "objectout": "msg",
        "x": 530,
        "y": 1660,
        "wires": [
            [
                "5599e73f7d1381b6",
                "3539def07b9c9089"
            ]
        ]
    },
    {
        "id": "ff62a065bfc34eba",
        "type": "sqlstring-format",
        "z": "bb7329521b9d0bbc",
        "name": "insert_count_ftp_kt10",
        "query": "UPDATE dem_ftp_g7\nSET \n    count_ftp_ok = ?\n\n",
        "vars": "count_ftp_ok",
        "outField": "topic",
        "x": 940,
        "y": 1660,
        "wires": [
            [
                "125275794096987c"
            ]
        ]
    },
    {
        "id": "3539def07b9c9089",
        "type": "debug",
        "z": "bb7329521b9d0bbc",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1380,
        "wires": []
    },
    {
        "id": "e282a2cc4932715c",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "func": "msg.topic =\"SELECT * FROM \"+msg.payload+\" ORDER BY `id` DESC, `id` DESC LIMIT 1\";\nmsg.data = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1720,
        "wires": [
            [
                "1ccc160512357f4b"
            ]
        ]
    },
    {
        "id": "a523f920ffe7290d",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "check_table: dem_ftp_g1",
        "func": "var ten_table =\n[\n'dem_ftp_g1'\n]\n\nmsg.payload = ten_table;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1720,
        "wires": [
            [
                "0a96c6b0db4fc671"
            ]
        ]
    },
    {
        "id": "0a96c6b0db4fc671",
        "type": "split",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 510,
        "y": 1720,
        "wires": [
            [
                "a9579a4c7910c8c2"
            ]
        ]
    },
    {
        "id": "a9579a4c7910c8c2",
        "type": "delay",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 660,
        "y": 1720,
        "wires": [
            [
                "e282a2cc4932715c"
            ]
        ]
    },
    {
        "id": "81624b5a35a70bbe",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "get_sql: dem_ftp_g1",
        "func": "\nif (msg.payload.length >= 1) \n{\n    global.set(\"counter_ftp_g1\", msg.payload[0].count_ftp_ok);\n}\nmsg.payload = global.get(\"counter_ftp_g1\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1720,
        "wires": [
            [
                "5c582a4c6ebba141",
                "7259f0f85b6b52b9",
                "fb992385f6bd3902"
            ]
        ]
    },
    {
        "id": "1ccc160512357f4b",
        "type": "mysql",
        "z": "bb7329521b9d0bbc",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1000,
        "y": 1720,
        "wires": [
            [
                "81624b5a35a70bbe"
            ]
        ]
    },
    {
        "id": "bf9cca1b9627b2f4",
        "type": "inject",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "props": [],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 1840,
        "wires": [
            [
                "a523f920ffe7290d",
                "09b5aa3a7f65fe5c",
                "a2430b242a96514f",
                "b197c18dfb5b6430",
                "77814a826e5173ca",
                "fce8b6cecea71fd3",
                "cfaea7a9b9a4eb86"
            ]
        ]
    },
    {
        "id": "85892551ca762b19",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "func": "msg.topic =\"SELECT * FROM \"+msg.payload+\" ORDER BY `id` DESC, `id` DESC LIMIT 1\";\nmsg.data = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1760,
        "wires": [
            [
                "f578871d229f19d9"
            ]
        ]
    },
    {
        "id": "09b5aa3a7f65fe5c",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "check_table: dem_ftp_g2",
        "func": "var ten_table =\n[\n'dem_ftp_g2'\n]\n\nmsg.payload = ten_table;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1760,
        "wires": [
            [
                "777ff7decec1f8c4"
            ]
        ]
    },
    {
        "id": "777ff7decec1f8c4",
        "type": "split",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 510,
        "y": 1760,
        "wires": [
            [
                "99252a1c722a117d"
            ]
        ]
    },
    {
        "id": "99252a1c722a117d",
        "type": "delay",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 660,
        "y": 1760,
        "wires": [
            [
                "85892551ca762b19"
            ]
        ]
    },
    {
        "id": "1716818e9f153b3e",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "get_sql: dem_ftp_g2",
        "func": "\nif (msg.payload.length >= 1) \n{\n    global.set(\"counter_ftp_g2\", msg.payload[0].count_ftp_ok);\n}\nmsg.payload = global.get(\"counter_ftp_g2\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1760,
        "wires": [
            [
                "b2b263a47bdf7928",
                "1d029494adeeb094",
                "ab46ea6cf09fd7f8"
            ]
        ]
    },
    {
        "id": "f578871d229f19d9",
        "type": "mysql",
        "z": "bb7329521b9d0bbc",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1000,
        "y": 1760,
        "wires": [
            [
                "1716818e9f153b3e"
            ]
        ]
    },
    {
        "id": "62525dc434fc081d",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "func": "msg.topic =\"SELECT * FROM \"+msg.payload+\" ORDER BY `id` DESC, `id` DESC LIMIT 1\";\nmsg.data = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1800,
        "wires": [
            [
                "26c41bf678c62edc"
            ]
        ]
    },
    {
        "id": "a2430b242a96514f",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "check_table: dem_ftp_g3",
        "func": "var ten_table =\n[\n'dem_ftp_g3'\n]\n\nmsg.payload = ten_table;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1800,
        "wires": [
            [
                "0b24a13df8e8fd9f"
            ]
        ]
    },
    {
        "id": "0b24a13df8e8fd9f",
        "type": "split",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 510,
        "y": 1800,
        "wires": [
            [
                "636d3e982cc4c8e9"
            ]
        ]
    },
    {
        "id": "636d3e982cc4c8e9",
        "type": "delay",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 660,
        "y": 1800,
        "wires": [
            [
                "62525dc434fc081d"
            ]
        ]
    },
    {
        "id": "35105748b1c9c2c1",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "get_sql: dem_ftp_g3",
        "func": "\nif (msg.payload.length >= 1) \n{\n    global.set(\"counter_ftp_g3\", msg.payload[0].count_ftp_ok);\n}\nmsg.payload = global.get(\"counter_ftp_g3\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1800,
        "wires": [
            [
                "22f75c80a97cbfde",
                "25bb42e6929389ec",
                "3f9f343be776bf79"
            ]
        ]
    },
    {
        "id": "26c41bf678c62edc",
        "type": "mysql",
        "z": "bb7329521b9d0bbc",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1000,
        "y": 1800,
        "wires": [
            [
                "35105748b1c9c2c1"
            ]
        ]
    },
    {
        "id": "d2133ebce1038746",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "func": "msg.topic =\"SELECT * FROM \"+msg.payload+\" ORDER BY `id` DESC, `id` DESC LIMIT 1\";\nmsg.data = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1840,
        "wires": [
            [
                "3c2ba7da42ba3f92"
            ]
        ]
    },
    {
        "id": "b197c18dfb5b6430",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "check_table: dem_ftp_g4",
        "func": "var ten_table =\n[\n'dem_ftp_g4'\n]\n\nmsg.payload = ten_table;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1840,
        "wires": [
            [
                "e3f2d96980b046f5"
            ]
        ]
    },
    {
        "id": "e3f2d96980b046f5",
        "type": "split",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 510,
        "y": 1840,
        "wires": [
            [
                "6c227eab271ba879"
            ]
        ]
    },
    {
        "id": "6c227eab271ba879",
        "type": "delay",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 660,
        "y": 1840,
        "wires": [
            [
                "d2133ebce1038746"
            ]
        ]
    },
    {
        "id": "b54a5e203f5c796b",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "get_sql: dem_ftp_g4",
        "func": "\nif (msg.payload.length >= 1) \n{\n    global.set(\"counter_ftp_g4\", msg.payload[0].count_ftp_ok);\n}\nmsg.payload = global.get(\"counter_ftp_g4\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1840,
        "wires": [
            [
                "eee01da389550374",
                "3c787cebdbc594d6",
                "946d65c019748c1f"
            ]
        ]
    },
    {
        "id": "3c2ba7da42ba3f92",
        "type": "mysql",
        "z": "bb7329521b9d0bbc",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1000,
        "y": 1840,
        "wires": [
            [
                "b54a5e203f5c796b"
            ]
        ]
    },
    {
        "id": "5d2de6bbc7af66e3",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "func": "msg.topic =\"SELECT * FROM \"+msg.payload+\" ORDER BY `id` DESC, `id` DESC LIMIT 1\";\nmsg.data = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1880,
        "wires": [
            [
                "8182c110b8559e96"
            ]
        ]
    },
    {
        "id": "77814a826e5173ca",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "check_table: dem_ftp_g5",
        "func": "var ten_table =\n[\n'dem_ftp_g5'\n]\n\nmsg.payload = ten_table;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1880,
        "wires": [
            [
                "35c4e0fc4c721caa"
            ]
        ]
    },
    {
        "id": "35c4e0fc4c721caa",
        "type": "split",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 510,
        "y": 1880,
        "wires": [
            [
                "5dec50088dcd2ff9"
            ]
        ]
    },
    {
        "id": "5dec50088dcd2ff9",
        "type": "delay",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 660,
        "y": 1880,
        "wires": [
            [
                "5d2de6bbc7af66e3"
            ]
        ]
    },
    {
        "id": "393b94ce48d29e95",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "get_sql: dem_ftp_g5",
        "func": "\nif (msg.payload.length >= 1) \n{\n    global.set(\"counter_ftp_g5\", msg.payload[0].count_ftp_ok);\n}\nmsg.payload = global.get(\"counter_ftp_g5\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1880,
        "wires": [
            [
                "294ed0214e08c9c8",
                "6c5698b02bf12fc3",
                "225a3839f261ca4a"
            ]
        ]
    },
    {
        "id": "8182c110b8559e96",
        "type": "mysql",
        "z": "bb7329521b9d0bbc",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1000,
        "y": 1880,
        "wires": [
            [
                "393b94ce48d29e95"
            ]
        ]
    },
    {
        "id": "e324adf990655480",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "func": "msg.topic =\"SELECT * FROM \"+msg.payload+\" ORDER BY `id` DESC, `id` DESC LIMIT 1\";\nmsg.data = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1920,
        "wires": [
            [
                "1638254e170b15c0"
            ]
        ]
    },
    {
        "id": "fce8b6cecea71fd3",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "check_table: dem_ftp_g6",
        "func": "var ten_table =\n[\n'dem_ftp_g6'\n]\n\nmsg.payload = ten_table;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1920,
        "wires": [
            [
                "85a277fb1c093945"
            ]
        ]
    },
    {
        "id": "85a277fb1c093945",
        "type": "split",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 510,
        "y": 1920,
        "wires": [
            [
                "80481b079e0e9333"
            ]
        ]
    },
    {
        "id": "80481b079e0e9333",
        "type": "delay",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 660,
        "y": 1920,
        "wires": [
            [
                "e324adf990655480"
            ]
        ]
    },
    {
        "id": "4f28278d03e57446",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "get_sql: dem_ftp_g6",
        "func": "\nif (msg.payload.length >= 1) \n{\n    global.set(\"counter_ftp_g6\", msg.payload[0].count_ftp_ok);\n}\nmsg.payload = global.get(\"counter_ftp_g6\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1920,
        "wires": [
            [
                "459a505ca3d1c248",
                "31569afd09cc83f6",
                "c8838d679550b2e3"
            ]
        ]
    },
    {
        "id": "1638254e170b15c0",
        "type": "mysql",
        "z": "bb7329521b9d0bbc",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1000,
        "y": 1920,
        "wires": [
            [
                "4f28278d03e57446"
            ]
        ]
    },
    {
        "id": "34db1fd0b0f78b07",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "func": "msg.topic =\"SELECT * FROM \"+msg.payload+\" ORDER BY `id` DESC, `id` DESC LIMIT 1\";\nmsg.data = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1960,
        "wires": [
            [
                "ad3cfe21a5b0799a"
            ]
        ]
    },
    {
        "id": "cfaea7a9b9a4eb86",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "check_table: dem_ftp_g7",
        "func": "var ten_table =\n[\n'dem_ftp_g7'\n]\n\nmsg.payload = ten_table;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1960,
        "wires": [
            [
                "3e1e8d470fb2ab4c"
            ]
        ]
    },
    {
        "id": "3e1e8d470fb2ab4c",
        "type": "split",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 510,
        "y": 1960,
        "wires": [
            [
                "8e64a52adcfb4261"
            ]
        ]
    },
    {
        "id": "8e64a52adcfb4261",
        "type": "delay",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 660,
        "y": 1960,
        "wires": [
            [
                "34db1fd0b0f78b07"
            ]
        ]
    },
    {
        "id": "0e0d3ce92922f660",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "get_sql: dem_ftp_g7",
        "func": "\nif (msg.payload.length >= 1) \n{\n    global.set(\"counter_ftp_g7\", msg.payload[0].count_ftp_ok);\n}\nmsg.payload = global.get(\"counter_ftp_g7\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1960,
        "wires": [
            [
                "cd20c177c809283c",
                "378be06e157e4461",
                "6fb785bdcf095152"
            ]
        ]
    },
    {
        "id": "ad3cfe21a5b0799a",
        "type": "mysql",
        "z": "bb7329521b9d0bbc",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1000,
        "y": 1960,
        "wires": [
            [
                "0e0d3ce92922f660"
            ]
        ]
    },
    {
        "id": "cb3bb48c76f7a75a",
        "type": "cronplus",
        "z": "bb7329521b9d0bbc",
        "name": "Reset count ftp at 23:40",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 55 23 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 170,
        "y": 2140,
        "wires": [
            [
                "3e4523df7d74f480"
            ]
        ]
    },
    {
        "id": "3e4523df7d74f480",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "reset: dem_ftp",
        "func": "msg = {};\nmsg.count_ftp_ok = 0;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2140,
        "wires": [
            [
                "6a6145a7593518ce",
                "abd38aea850719b6",
                "476967264edda009",
                "f481b28ee527b0df",
                "766014373778e947",
                "ac410a24bdcca975",
                "22676df5e3092150"
            ]
        ]
    },
    {
        "id": "6a6145a7593518ce",
        "type": "sqlstring-format",
        "z": "bb7329521b9d0bbc",
        "name": "insert_count_ftp_g1",
        "query": "UPDATE dem_ftp_g1\nSET \n    count_ftp_ok = ?\n\n",
        "vars": "count_ftp_ok",
        "outField": "topic",
        "x": 630,
        "y": 2020,
        "wires": [
            [
                "95c9b11805626966"
            ]
        ]
    },
    {
        "id": "95c9b11805626966",
        "type": "mysql",
        "z": "bb7329521b9d0bbc",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 880,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "abd38aea850719b6",
        "type": "sqlstring-format",
        "z": "bb7329521b9d0bbc",
        "name": "insert_count_ftp_g2",
        "query": "UPDATE dem_ftp_g2\nSET \n    count_ftp_ok = ?\n\n",
        "vars": "count_ftp_ok",
        "outField": "topic",
        "x": 630,
        "y": 2060,
        "wires": [
            [
                "95c9b11805626966"
            ]
        ]
    },
    {
        "id": "476967264edda009",
        "type": "sqlstring-format",
        "z": "bb7329521b9d0bbc",
        "name": "insert_count_ftp_g3",
        "query": "UPDATE dem_ftp_g3\nSET \n    count_ftp_ok = ?\n\n",
        "vars": "count_ftp_ok",
        "outField": "topic",
        "x": 630,
        "y": 2100,
        "wires": [
            [
                "95c9b11805626966"
            ]
        ]
    },
    {
        "id": "f481b28ee527b0df",
        "type": "sqlstring-format",
        "z": "bb7329521b9d0bbc",
        "name": "insert_count_ftp_g4",
        "query": "UPDATE dem_ftp_g4\nSET \n    count_ftp_ok = ?\n\n",
        "vars": "count_ftp_ok",
        "outField": "topic",
        "x": 630,
        "y": 2140,
        "wires": [
            [
                "95c9b11805626966"
            ]
        ]
    },
    {
        "id": "766014373778e947",
        "type": "sqlstring-format",
        "z": "bb7329521b9d0bbc",
        "name": "insert_count_ftp_g5",
        "query": "UPDATE dem_ftp_g5\nSET \n    count_ftp_ok = ?\n\n",
        "vars": "count_ftp_ok",
        "outField": "topic",
        "x": 630,
        "y": 2180,
        "wires": [
            [
                "95c9b11805626966"
            ]
        ]
    },
    {
        "id": "ac410a24bdcca975",
        "type": "sqlstring-format",
        "z": "bb7329521b9d0bbc",
        "name": "insert_count_ftp_g6",
        "query": "UPDATE dem_ftp_g6\nSET \n    count_ftp_ok = ?\n\n",
        "vars": "count_ftp_ok",
        "outField": "topic",
        "x": 630,
        "y": 2220,
        "wires": [
            [
                "95c9b11805626966"
            ]
        ]
    },
    {
        "id": "22676df5e3092150",
        "type": "sqlstring-format",
        "z": "bb7329521b9d0bbc",
        "name": "insert_count_ftp_g7",
        "query": "UPDATE dem_ftp_g7\nSET \n    count_ftp_ok = ?\n\n",
        "vars": "count_ftp_ok",
        "outField": "topic",
        "x": 630,
        "y": 2260,
        "wires": [
            [
                "95c9b11805626966"
            ]
        ]
    },
    {
        "id": "b0848e6d7b176268",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "check connect g2",
        "func": "var connect = global.get(\"counter_g2\");\nif (connect  < 2)\n{\n    msg.payload = false;\n}\nelse\n{\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 600,
        "wires": [
            [
                "afb471f0ca865bf0"
            ]
        ]
    },
    {
        "id": "90f92c346b0f8aff",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "check connect g3",
        "func": "var connect = global.get(\"counter_g3\");\nif (connect  < 2)\n{\n    msg.payload = false;\n}\nelse\n{\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 680,
        "wires": [
            [
                "e0b5831144ec03e4"
            ]
        ]
    },
    {
        "id": "04f49fc9ad4f9228",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "check connect g4",
        "func": "var connect = global.get(\"counter_g4\");\nif (connect  < 2)\n{\n    msg.payload = false;\n}\nelse\n{\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 760,
        "wires": [
            [
                "0d3ca076edcfc1d3"
            ]
        ]
    },
    {
        "id": "9a1627a7680ac7c1",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "check connect g5",
        "func": "var connect = global.get(\"counter_g5\");\nif (connect  < 2)\n{\n    msg.payload = false;\n}\nelse\n{\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 840,
        "wires": [
            [
                "4ec7afc13bccd9bc"
            ]
        ]
    },
    {
        "id": "609a08a555bf26da",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "check connect g6",
        "func": "var connect = global.get(\"counter_g6\");\nif (connect  < 2)\n{\n    msg.payload = false;\n}\nelse\n{\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 920,
        "wires": [
            [
                "c3c69779aab11d74"
            ]
        ]
    },
    {
        "id": "f584dc21d411f7c0",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "check connect g7",
        "func": "var connect = global.get(\"counter_g7\");\nif (connect  < 2)\n{\n    msg.payload = false;\n}\nelse\n{\n    msg.payload = true;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1000,
        "wires": [
            [
                "a4b595bdc990d8b9"
            ]
        ]
    },
    {
        "id": "2bbde64171985aef",
        "type": "function",
        "z": "bb7329521b9d0bbc",
        "name": "display m3/day ",
        "func": "var tong_ngay_1 = global.get(\"tong_ngay_1\");\nvar tong_ngay_2 = global.get(\"tong_ngay_2\");\nvar tong_ngay_3 = global.get(\"tong_ngay_3\");\nvar tong_ngay_4 = global.get(\"tong_ngay_4\");\nvar tong_ngay_5 = global.get(\"tong_ngay_5\");\nvar tong_ngay_6 = global.get(\"tong_ngay_6\");\nvar tong_ngay_7 = global.get(\"tong_ngay_7\");\nmsg.payload = tong_ngay_1 + tong_ngay_2 + tong_ngay_3 + tong_ngay_4 + tong_ngay_5 + tong_ngay_6 + tong_ngay_7;\nreturn msg;\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 420,
        "wires": [
            [
                "4b564a7ecee3fae9"
            ]
        ]
    },
    {
        "id": "423581fd5d147c15",
        "type": "cronplus",
        "z": "bb7329521b9d0bbc",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */1 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 200,
        "y": 420,
        "wires": [
            [
                "2bbde64171985aef"
            ]
        ]
    },
    {
        "id": "7259f0f85b6b52b9",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "cd22576b9e453129",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "status ftp kt10-mobile",
        "label": "<font color=\"blue\">Số file txt gửi thành công đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1740,
        "y": 1720,
        "wires": []
    },
    {
        "id": "1d029494adeeb094",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "0a3343425c9b53ca",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "status ftp kt03-mobile",
        "label": "<font color=\"blue\">Số file txt gửi thành công đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1740,
        "y": 1760,
        "wires": []
    },
    {
        "id": "25bb42e6929389ec",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "8de54ffe0f0fc049",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "status ftp kt08-mobile",
        "label": "<font color=\"blue\">Số file txt gửi thành công đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1740,
        "y": 1800,
        "wires": []
    },
    {
        "id": "3c787cebdbc594d6",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "6497d0df00ba9f79",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "status ftp kt07-mobile",
        "label": "<font color=\"blue\">Số file txt gửi thành công đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1740,
        "y": 1840,
        "wires": []
    },
    {
        "id": "6c5698b02bf12fc3",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "c534907ad0340a41",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "status ftp kt05-mobile",
        "label": "<font color=\"blue\">Số file txt gửi thành công đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1740,
        "y": 1880,
        "wires": []
    },
    {
        "id": "31569afd09cc83f6",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "89f90ae8144f4cc7",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "status ftp kt02-mobile",
        "label": "<font color=\"blue\">Số file txt gửi thành công đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1740,
        "y": 1920,
        "wires": []
    },
    {
        "id": "378be06e157e4461",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "d375dab203da6e86",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "status ftp kt01-mobile",
        "label": "<font color=\"blue\">Số file txt gửi thành công đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1740,
        "y": 1960,
        "wires": []
    },
    {
        "id": "fb992385f6bd3902",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "953580f1c70bae15",
        "order": 3,
        "width": 5,
        "height": 1,
        "name": "status ftp kt10-home",
        "label": "<font color=\"blue\"><b>Số file txt gửi đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1420,
        "y": 2040,
        "wires": []
    },
    {
        "id": "ab46ea6cf09fd7f8",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "6729a816d3d532b5",
        "order": 3,
        "width": 5,
        "height": 1,
        "name": "status ftp kt03-home",
        "label": "<font color=\"blue\"><b>Số file txt gửi đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1420,
        "y": 2080,
        "wires": []
    },
    {
        "id": "3f9f343be776bf79",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "f3b4b427b3ddcb91",
        "order": 3,
        "width": 5,
        "height": 1,
        "name": "status ftp kt08-home",
        "label": "<font color=\"blue\"><b>Số file txt gửi đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1420,
        "y": 2120,
        "wires": []
    },
    {
        "id": "946d65c019748c1f",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "c8e5e73c6b6c38d6",
        "order": 3,
        "width": 5,
        "height": 1,
        "name": "status ftp kt07-home",
        "label": "<font color=\"blue\"><b>Số file txt gửi đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1420,
        "y": 2160,
        "wires": []
    },
    {
        "id": "225a3839f261ca4a",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "93ec55053f717475",
        "order": 3,
        "width": 5,
        "height": 1,
        "name": "status ftp kt05-home",
        "label": "<font color=\"blue\"><b>Số file txt gửi đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1420,
        "y": 2200,
        "wires": []
    },
    {
        "id": "c8838d679550b2e3",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "f40c6bb51b026681",
        "order": 3,
        "width": 5,
        "height": 1,
        "name": "status ftp kt02-home",
        "label": "<font color=\"blue\"><b>Số file txt gửi đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1420,
        "y": 2240,
        "wires": []
    },
    {
        "id": "6fb785bdcf095152",
        "type": "ui_text",
        "z": "bb7329521b9d0bbc",
        "group": "84dc3a0a897c3f1c",
        "order": 3,
        "width": 5,
        "height": 1,
        "name": "status ftp kt01-home",
        "label": "<font color=\"blue\"><b>Số file txt gửi đến Server:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1420,
        "y": 2280,
        "wires": []
    },
    {
        "id": "95f5d3605ee8fcfd",
        "type": "mysql",
        "z": "bb7329521b9d0bbc",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1140,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "dec306d099648ab1",
        "type": "mysql",
        "z": "bb7329521b9d0bbc",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1140,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "da69b6eec342e89c",
        "type": "mysql",
        "z": "bb7329521b9d0bbc",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1140,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "1410fc6b026bda96",
        "type": "mysql",
        "z": "bb7329521b9d0bbc",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1140,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "fc6beab6f4075faa",
        "type": "mysql",
        "z": "bb7329521b9d0bbc",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1140,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "73951c1dc49f7ef7",
        "type": "mysql",
        "z": "bb7329521b9d0bbc",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1140,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "125275794096987c",
        "type": "mysql",
        "z": "bb7329521b9d0bbc",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1140,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "2e3ac6059d63fe7d",
        "type": "function",
        "z": "7855a58305240820",
        "name": "display m3/day ",
        "func": "\nmsg = {};\nmsg.tong_ngay_1 = global.get(\"tong_ngay_1\");\nmsg.tong_ngay_2 = global.get(\"tong_ngay_2\");\nmsg.tong_ngay_3 = global.get(\"tong_ngay_3\");\nmsg.tong_ngay_4 = global.get(\"tong_ngay_4\");\nmsg.tong_ngay_5 = global.get(\"tong_ngay_5\");\nmsg.tong_ngay_6 = global.get(\"tong_ngay_6\");\nmsg.tong_ngay_7 = global.get(\"tong_ngay_7\");\n//msg.tong_ngay_8 = tong_ngay_0h_g8;\nreturn msg;\n \n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 640,
        "wires": [
            [
                "ce128a947ade7c44",
                "a105b1eb6215355b",
                "875db9fad21b4301",
                "b58eaa5cfb812239",
                "f83d793567649966",
                "ba22ae88a75decee",
                "122cef14a067aa48"
            ]
        ]
    },
    {
        "id": "ce128a947ade7c44",
        "type": "ui_text",
        "z": "7855a58305240820",
        "group": "4c11921c9db3b2fc",
        "order": 13,
        "width": 9,
        "height": 1,
        "name": "kt tu 0h_kt10",
        "label": "<font color=\"blue\"><b>Giếng KT10-Khai thác từ lúc 0h (m3):",
        "format": "{{msg.tong_ngay_1}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 670,
        "y": 540,
        "wires": []
    },
    {
        "id": "a105b1eb6215355b",
        "type": "ui_text",
        "z": "7855a58305240820",
        "group": "4c11921c9db3b2fc",
        "order": 5,
        "width": 9,
        "height": 1,
        "name": "kt tu 0h_kt03",
        "label": "<font color=\"blue\"><b>Giếng KT03-Khai thác từ lúc 0h (m3):",
        "format": "{{msg.tong_ngay_2}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 670,
        "y": 580,
        "wires": []
    },
    {
        "id": "875db9fad21b4301",
        "type": "ui_text",
        "z": "7855a58305240820",
        "group": "4c11921c9db3b2fc",
        "order": 11,
        "width": 9,
        "height": 1,
        "name": "kt tu 0h_kt08",
        "label": "<font color=\"blue\"><b>Giếng KT08-Khai thác từ lúc 0h (m3):",
        "format": "{{msg.tong_ngay_3}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 670,
        "y": 620,
        "wires": []
    },
    {
        "id": "b58eaa5cfb812239",
        "type": "ui_text",
        "z": "7855a58305240820",
        "group": "4c11921c9db3b2fc",
        "order": 9,
        "width": 9,
        "height": 1,
        "name": "kt tu 0h_kt07",
        "label": "<font color=\"blue\"><b>Giếng KT07-Khai thác từ lúc 0h (m3):",
        "format": "{{msg.tong_ngay_4}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 670,
        "y": 660,
        "wires": []
    },
    {
        "id": "f83d793567649966",
        "type": "ui_text",
        "z": "7855a58305240820",
        "group": "4c11921c9db3b2fc",
        "order": 7,
        "width": 9,
        "height": 1,
        "name": "kt tu 0h_kt05",
        "label": "<font color=\"blue\"><b>Giếng KT05-Khai thác từ lúc 0h (m3):",
        "format": "{{msg.tong_ngay_5}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 670,
        "y": 700,
        "wires": []
    },
    {
        "id": "ba22ae88a75decee",
        "type": "ui_text",
        "z": "7855a58305240820",
        "group": "4c11921c9db3b2fc",
        "order": 3,
        "width": 9,
        "height": 1,
        "name": "kt tu 0h_kt02",
        "label": "<font color=\"blue\"><b>Giếng KT02-Khai thác từ lúc 0h (m3):",
        "format": "{{msg.tong_ngay_6}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 670,
        "y": 740,
        "wires": []
    },
    {
        "id": "122cef14a067aa48",
        "type": "ui_text",
        "z": "7855a58305240820",
        "group": "4c11921c9db3b2fc",
        "order": 1,
        "width": 9,
        "height": 1,
        "name": "kt tu 0h_kt01",
        "label": "<font color=\"blue\"><b>Giếng KT01-Khai thác từ lúc 0h (m3):",
        "format": "{{msg.tong_ngay_7}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 670,
        "y": 780,
        "wires": []
    },
    {
        "id": "3914f2e79ef6f0b1",
        "type": "join",
        "z": "7855a58305240820",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "1",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 830,
        "y": 160,
        "wires": [
            [
                "4fbdb6f06ef37c23"
            ]
        ]
    },
    {
        "id": "45d9ee802e781010",
        "type": "ui_ui_control",
        "z": "7855a58305240820",
        "name": "",
        "events": "change",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "ae3f7a6e4dbe5274"
            ]
        ]
    },
    {
        "id": "ae3f7a6e4dbe5274",
        "type": "switch",
        "z": "7855a58305240820",
        "name": "BP Tab?",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Lich_Su",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 260,
        "y": 180,
        "wires": [
            [
                "466916c94a22cf78"
            ]
        ]
    },
    {
        "id": "466916c94a22cf78",
        "type": "function",
        "z": "7855a58305240820",
        "name": "Time Of Day",
        "func": "//let current_time = convertTZ(new Date(), \"Asia/Jakarta\");\n//var now = Date().toLocaleString('en-US', { timeZone: 'Asia/Jakarta' });\n//let now =  current_time;//// Tue Apr 20 2012 17:10:30 GMT+0700 (Western Indonesia Time)\nlet now = new Date();\n\nlet msg1 = {payload: now}\nlet msg2 = {payload: (now.getTime() - now.getTimezoneOffset()*60000) % (24 * 3600 * 1000)}\nlet msg3 = {topic:'name', payload: 'Gieng1'}\nlet msg4 = {payload: now}\nlet msg5 = {payload: (now.getTime() - now.getTimezoneOffset()*60000) % (24 * 3600 * 1000)}\nreturn [msg1, msg2,msg3,msg4,msg5];\n\nfunction convertTZ(date, tzString) {\n    return new Date((typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {timeZone: tzString}));   \n}\n",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 180,
        "wires": [
            [
                "402a212109cf5dfb"
            ],
            [],
            [
                "b654f51a20620561"
            ],
            [
                "ade9398276854d3e"
            ],
            []
        ]
    },
    {
        "id": "402a212109cf5dfb",
        "type": "ui_date_picker",
        "z": "7855a58305240820",
        "name": "From date",
        "label": "Từ ngày",
        "group": "b84cda1145a40922",
        "order": 1,
        "width": 12,
        "height": 1,
        "passthru": true,
        "topic": "date",
        "topicType": "str",
        "className": "",
        "x": 670,
        "y": 120,
        "wires": [
            [
                "78fd6f966d5f5002"
            ]
        ]
    },
    {
        "id": "79aa28823147a1eb",
        "type": "function",
        "z": "7855a58305240820",
        "name": "Truncate to start of day",
        "func": "msg.payload = Math.floor(msg.payload/(24*3600*1000))*24*3600*1000\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "6e96d50e1f1d0ac2",
        "type": "switch",
        "z": "7855a58305240820",
        "name": "Submit?",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "form",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 660,
        "y": 280,
        "wires": [
            [
                "924c3ac677b43682"
            ]
        ]
    },
    {
        "id": "ea1644cb8d3ac1fe",
        "type": "change",
        "z": "7855a58305240820",
        "name": "Clear values",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"rate\":\"\",\"diastolic\":\"\",\"systolic\":\"\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "efb974d45dbc487e",
        "type": "ui_toast",
        "z": "7855a58305240820",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Cancel",
        "cancel": "OK",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1090,
        "y": 240,
        "wires": [
            [
                "b4ede9bef6fefba8"
            ]
        ]
    },
    {
        "id": "924c3ac677b43682",
        "type": "function",
        "z": "7855a58305240820",
        "name": "Prepare for OK/Cancel",
        "func": "let saved = flow.get(\"mychoice\") || {};\n var dt = new Date();\n/*\nvar date = new Date(saved.mytime - 420*60000);\nvar date2 = new Date(saved.mytime2 -420*60000);\nvar tu_ngay = (\"Từ ngày: \"+date.getDate()+\n          \"/\"+(date.getMonth()+1)+\n          \"/\"+date.getFullYear()+\n          \" \"+date.getHours()+\n          \":\"+date.getMinutes());\nvar den_ngay = (\"Đến ngày: \"+date2.getDate()+\n          \"/\"+(date2.getMonth()+1)+\n          \"/\"+date2.getFullYear()+\n          \" \"+date2.getHours()+\n          \":\"+date2.getMinutes());\n          */\nif (saved.mytime<saved.mytime2){\nmsg.payload = `Truy xuất thông tin từ ngày: ${saved.mytime} đến ngày:  ${saved.mytime2}`\nmsg.payloadSaved = saved\nmsg.next = true;\n}else{\nmsg.payload = `Thông tin nhập không hợp lệ :\\n   ${saved.mytime}  ${saved.mytime2}`\n msg.next = false;\n   \n}\nmsg.topic = null\nreturn msg;\n\n\nfunction convertTZ(date, tzString) {\n    return new Date((typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {timeZone: tzString}));   \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 240,
        "wires": [
            [
                "efb974d45dbc487e"
            ]
        ]
    },
    {
        "id": "b4ede9bef6fefba8",
        "type": "switch",
        "z": "7855a58305240820",
        "name": "OK?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1230,
        "y": 240,
        "wires": [
            [
                "635f32101c491c67"
            ]
        ]
    },
    {
        "id": "b654f51a20620561",
        "type": "function",
        "z": "7855a58305240820",
        "name": "name",
        "func": "flow.set(\"name\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 160,
        "wires": [
            [
                "3914f2e79ef6f0b1"
            ]
        ]
    },
    {
        "id": "08ba7e0341d4b7d5",
        "type": "ui_button",
        "z": "7855a58305240820",
        "name": "",
        "group": "b84cda1145a40922",
        "order": 4,
        "width": 25,
        "height": 1,
        "passthru": false,
        "label": "Truy xuất",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 660,
        "y": 240,
        "wires": [
            [
                "924c3ac677b43682"
            ]
        ]
    },
    {
        "id": "4fbdb6f06ef37c23",
        "type": "function",
        "z": "7855a58305240820",
        "name": "",
        "func": "//if ( msg.payload.hasOwnProperty('time') && msg.payload.hasOwnProperty('date')&& msg.payload.hasOwnProperty('time2') && msg.payload.hasOwnProperty('date2')){\n    msg.payload.mytime = msg.payload.date; \n    msg.payload.mytime2 =msg.payload.date2; \n    flow.set(\"mychoice\", msg.payload);\n//}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "6bbf02aefeda6a05",
        "type": "inject",
        "z": "7855a58305240820",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 360,
        "wires": [
            [
                "86a7b63de716260c"
            ]
        ]
    },
    {
        "id": "86a7b63de716260c",
        "type": "function",
        "z": "7855a58305240820",
        "name": "saved",
        "func": "let saved = flow.get(\"mychoice\") || {};\nmsg.payload = saved;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 360,
        "wires": [
            [
                "c9b8e8a86761d0a4"
            ]
        ]
    },
    {
        "id": "dd07d8d54b569ba1",
        "type": "mysql",
        "z": "7855a58305240820",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 700,
        "y": 360,
        "wires": [
            [
                "3f3baf2a5f2829da"
            ]
        ]
    },
    {
        "id": "635f32101c491c67",
        "type": "switch",
        "z": "7855a58305240820",
        "name": "msg.next",
        "property": "next",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1360,
        "y": 240,
        "wires": [
            [
                "03dfe50923543d68"
            ]
        ]
    },
    {
        "id": "03dfe50923543d68",
        "type": "link out",
        "z": "7855a58305240820",
        "name": "next1",
        "mode": "link",
        "links": [
            "6d636ded7cf40556"
        ],
        "x": 1455,
        "y": 240,
        "wires": []
    },
    {
        "id": "6d636ded7cf40556",
        "type": "link in",
        "z": "7855a58305240820",
        "name": "next2",
        "links": [
            "03dfe50923543d68"
        ],
        "x": 245,
        "y": 300,
        "wires": [
            [
                "86a7b63de716260c"
            ]
        ]
    },
    {
        "id": "4d62e58743e2462e",
        "type": "catch",
        "z": "7855a58305240820",
        "name": "",
        "scope": [
            "013410f48b00aa3a"
        ],
        "uncaught": false,
        "x": 810,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "78fd6f966d5f5002",
        "type": "moment",
        "z": "7855a58305240820",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 880,
        "y": 120,
        "wires": [
            [
                "3914f2e79ef6f0b1"
            ]
        ]
    },
    {
        "id": "c9b8e8a86761d0a4",
        "type": "sqlstring-format",
        "z": "7855a58305240820",
        "name": "",
        "query": "SELECT * FROM `mydata2`.`khai_thac_ngay` where thoi_gian > ? AND  thoi_gian < ?  LIMIT 1000;",
        "vars": "payload.mytime , payload.mytime2",
        "outField": "topic",
        "x": 530,
        "y": 360,
        "wires": [
            [
                "dd07d8d54b569ba1"
            ]
        ]
    },
    {
        "id": "3f3baf2a5f2829da",
        "type": "function",
        "z": "7855a58305240820",
        "name": "data2table",
        "func": "var arr = [];\nvar payload = msg.payload;\n\nfor (var i=0; i< msg.payload.length;i++)\n{\n \n    var d = new Date(payload[i].thoi_gian);\n    var text = d.toLocaleDateString('en-GB', { day: 'numeric', month: 'numeric', year: 'numeric' });\n    var obj = \n    {\n        \"Thời gian\": text, \"Khai thác 24H-KT01\": payload[i].tong_ngay_kt1, \"Khai thác 24H-KT02\": payload[i].tong_ngay_kt2, \"Khai thác 24H-KT03\": payload[i].tong_ngay_kt3,\n        \"Khai thác 24H-KT05\": payload[i].tong_ngay_kt5, \"Khai thác 24H-KT07\": payload[i].tong_ngay_kt7, \"Khai thác 24H-KT08\": payload[i].tong_ngay_kt8,\n        \"Khai thác 24H-KT10\": payload[i].tong_ngay_kt10\n    };\n    arr.push(obj);\n}\nmsg.payload = arr;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 360,
        "wires": [
            [
                "38403069944df9d5"
            ]
        ]
    },
    {
        "id": "3473ad6f22f9794a",
        "type": "http in",
        "z": "7855a58305240820",
        "name": "",
        "url": "/TONG_24H",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 420,
        "wires": [
            [
                "91facec79a8aa5b1"
            ]
        ]
    },
    {
        "id": "91facec79a8aa5b1",
        "type": "function",
        "z": "7855a58305240820",
        "name": "saved",
        "func": "let saved = flow.get(\"mychoice\") || {};\nmsg.payload = saved;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 420,
        "wires": [
            [
                "0a3dea5883f91586"
            ]
        ]
    },
    {
        "id": "0a3dea5883f91586",
        "type": "sqlstring-format",
        "z": "7855a58305240820",
        "name": "sql",
        "query": "SELECT * FROM `mydata2`.`khai_thac_ngay` where thoi_gian > ? AND  thoi_gian < ? ;",
        "vars": "payload.mytime, payload.mytime2",
        "outField": "topic",
        "x": 510,
        "y": 420,
        "wires": [
            [
                "a42c041479526efb"
            ]
        ]
    },
    {
        "id": "a42c041479526efb",
        "type": "mysql",
        "z": "7855a58305240820",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 680,
        "y": 420,
        "wires": [
            [
                "3a5b2f7f6745cfc7"
            ]
        ]
    },
    {
        "id": "3a5b2f7f6745cfc7",
        "type": "function",
        "z": "7855a58305240820",
        "name": "timetoLocaleString",
        "func": "var payload = msg.payload;\nfor (var j = 0; j < payload.length; j++) {\n    msg.payload[j].thoi_gian = msg.payload[j].thoi_gian.toLocaleDateString('en-GB', { day: 'numeric', month: 'numeric', year: 'numeric' });\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 420,
        "wires": [
            [
                "aceca1d9b4aaedda"
            ]
        ]
    },
    {
        "id": "aceca1d9b4aaedda",
        "type": "csv",
        "z": "7855a58305240820",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "thoi_gian,tong_ngay_kt1,tong_ngay_kt2,tong_ngay_kt3,tong_ngay_kt5,tong_ngay_kt7,tong_ngay_kt8,tong_ngay_kt10",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1030,
        "y": 420,
        "wires": [
            [
                "a2268c480b55d0ae"
            ]
        ]
    },
    {
        "id": "a2268c480b55d0ae",
        "type": "function",
        "z": "7855a58305240820",
        "name": "Set Headers",
        "func": "msg.headers = {}\nvar file_name = msg.req.originalUrl.replace(\"/\",\"\");\nmsg.headers[\"Content-type\"] = \"text/csv\";\nmsg.headers[\"Content-Disposition\"] = \"attachment; filename=\"+file_name+\".csv\";\nmsg.headers[\"Pragma\"] = \"no-cache\";\nmsg.headers[\"Expires\"] = \"0\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 420,
        "wires": [
            [
                "ae496fb3f22fc0bc"
            ]
        ]
    },
    {
        "id": "ae496fb3f22fc0bc",
        "type": "http response",
        "z": "7855a58305240820",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1330,
        "y": 460,
        "wires": []
    },
    {
        "id": "9747940e591685bc",
        "type": "function",
        "z": "7855a58305240820",
        "name": "Set 404",
        "func": "msg.payload = msg.error;\nmsg.statusCode = 404;//resource not found\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 460,
        "wires": [
            [
                "ae496fb3f22fc0bc"
            ]
        ]
    },
    {
        "id": "444666f33b29c29d",
        "type": "ui_template",
        "z": "7855a58305240820",
        "group": "b84cda1145a40922",
        "name": "present download link on dashboard",
        "order": 6,
        "width": 25,
        "height": 1,
        "format": "<div >\n    <i class=\"fa fa-file-excel-o\" aria-hidden=\"true\"></i>\n    <a href=\"/TONG_24H\">[Excel] Click để tải về</a>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 390,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "0263fbfb9031efba",
        "type": "catch",
        "z": "7855a58305240820",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 660,
        "y": 460,
        "wires": [
            [
                "9747940e591685bc"
            ]
        ]
    },
    {
        "id": "38403069944df9d5",
        "type": "ui_table",
        "z": "7855a58305240820",
        "group": "b84cda1145a40922",
        "name": "",
        "order": 5,
        "width": 25,
        "height": 13,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1150,
        "y": 360,
        "wires": []
    },
    {
        "id": "188d3448e32b06fc",
        "type": "moment",
        "z": "7855a58305240820",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Bangkok",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD",
        "locale": "en_GB",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 880,
        "y": 200,
        "wires": [
            [
                "3914f2e79ef6f0b1"
            ]
        ]
    },
    {
        "id": "ade9398276854d3e",
        "type": "ui_date_picker",
        "z": "7855a58305240820",
        "name": "To date",
        "label": "Đến ngày",
        "group": "b84cda1145a40922",
        "order": 3,
        "width": 12,
        "height": 1,
        "passthru": true,
        "topic": "date2",
        "topicType": "str",
        "className": "",
        "x": 660,
        "y": 200,
        "wires": [
            [
                "188d3448e32b06fc"
            ]
        ]
    },
    {
        "id": "ab3e875def9fd958",
        "type": "ui_text",
        "z": "7855a58305240820",
        "group": "4c11921c9db3b2fc",
        "order": 15,
        "width": 10,
        "height": 9,
        "name": "spcae 0h",
        "label": "",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 580,
        "y": 60,
        "wires": []
    },
    {
        "id": "83b5219c53ef7cbd",
        "type": "cronplus",
        "z": "7855a58305240820",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */1 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 220,
        "y": 640,
        "wires": [
            [
                "2e3ac6059d63fe7d"
            ]
        ]
    },
    {
        "id": "5239a891060dbad1",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "ad4455eff3a4d232"
            ]
        ]
    },
    {
        "id": "14dd7941134cbce6",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 100,
        "wires": [
            [
                "13e11e320f30822e"
            ]
        ]
    },
    {
        "id": "ad4455eff3a4d232",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Level_G1: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT01_Alarm1_Mất kết nối với thiết bị đo\";\nmsg.payload = \"Mất kết nối với thiết bị đo mực nước\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "13e11e320f30822e",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Flow_G1: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT01_Alarm1_Mất kết nối với thiết bị đo\";\nmsg.payload = \"Mất kết nối với thiết bị đo lưu lượng\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "aad65533628d230f",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Level_G2: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT02_Alarm1_Mất kết nối với thiết bị đo\";\nmsg.payload = \"Mất kết nối với thiết bị đo mực nước\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "1e4f86d11b09b2cc",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Flow_G2: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT02_Alarm1_Mất kết nối với thiết bị đo\";\nmsg.payload = \"Mất kết nối với thiết bị đo lưu lượng\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "1bd19a5a63ef02a2",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Level_G3: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT03_Alarm1_Mất kết nối với thiết bị đo\";\nmsg.payload = \"Mất kết nối với thiết bị đo mực nước\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "78e879d4ec747e30",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Flow_G3: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT03_Alarm1_Mất kết nối với thiết bị đo\";\nmsg.payload = \"Mất kết nối với thiết bị đo lưu lượng\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "72aca66236f9546e",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Level_G4: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT05_Alarm1_Mất kết nối với thiết bị đo\";\nmsg.payload = \"Mất kết nối với thiết bị đo mực nước\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "0439c2723c743e78",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Flow_G4: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT05_Alarm1_Mất kết nối với thiết bị đo\";\nmsg.payload = \"Mất kết nối với thiết bị đo lưu lượng\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "2079144056ce9dd2",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Level_G5: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT07_Alarm1_Mất kết nối với thiết bị đo\";\nmsg.payload = \"Mất kết nối với thiết bị đo mực nước\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "7c7caf6a6914a9cb",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Flow_G5: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT07_Alarm1_Mất kết nối với thiết bị đo\";\nmsg.payload = \"Mất kết nối với thiết bị đo lưu lượng\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "72f6d167a3791684",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Level_G6: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT08_Alarm1_Mất kết nối với thiết bị đo\";\nmsg.payload = \"Mất kết nối với thiết bị đo mực nước\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "714cbb554fed12f4",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Flow_G6: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT08_Alarm1_Mất kết nối với thiết bị đo\";\nmsg.payload = \"Mất kết nối với thiết bị đo lưu lượng\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "463935a7ae91145c",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Level_G7: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT10_Alarm1_Mất kết nối với thiết bị đo\";\nmsg.payload = \"Mất kết nối với thiết bị đo mực nước\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "62493412fbcb9d0d",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Flow_G7: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT10_Alarm1_Mất kết nối với thiết bị đo\";\nmsg.payload = \"Mất kết nối với thiết bị đo lưu lượng\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "a136b944d7eb8873",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 200,
        "wires": [
            [
                "aad65533628d230f"
            ]
        ]
    },
    {
        "id": "39430ec7bc15a545",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "1e4f86d11b09b2cc"
            ]
        ]
    },
    {
        "id": "b70464aaab1d5038",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 340,
        "wires": [
            [
                "1bd19a5a63ef02a2"
            ]
        ]
    },
    {
        "id": "9cc4ed2f71d0227e",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 380,
        "wires": [
            [
                "78e879d4ec747e30"
            ]
        ]
    },
    {
        "id": "ecb8f9c2fba81109",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 480,
        "wires": [
            [
                "72aca66236f9546e"
            ]
        ]
    },
    {
        "id": "ab747787b7a8efdb",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 520,
        "wires": [
            [
                "0439c2723c743e78"
            ]
        ]
    },
    {
        "id": "e7d4e3fae718c885",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 620,
        "wires": [
            [
                "2079144056ce9dd2"
            ]
        ]
    },
    {
        "id": "e9bc2d214dbc5a47",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 660,
        "wires": [
            [
                "7c7caf6a6914a9cb"
            ]
        ]
    },
    {
        "id": "e2328f7596645f4b",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 760,
        "wires": [
            [
                "72f6d167a3791684"
            ]
        ]
    },
    {
        "id": "b3b8334003c4a792",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 800,
        "wires": [
            [
                "714cbb554fed12f4"
            ]
        ]
    },
    {
        "id": "59744ccbe6d5c381",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 900,
        "wires": [
            [
                "463935a7ae91145c"
            ]
        ]
    },
    {
        "id": "34b6c913eb82f8ae",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 940,
        "wires": [
            [
                "62493412fbcb9d0d"
            ]
        ]
    },
    {
        "id": "7d66007d99113190",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 1300,
        "wires": [
            [
                "8c57d9eddce7ae9b"
            ]
        ]
    },
    {
        "id": "d08d2396a60b9c55",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 1260,
        "wires": [
            [
                "f24449534042d5b8"
            ]
        ]
    },
    {
        "id": "ec7986386025242d",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 1220,
        "wires": [
            [
                "3c2861ab44cfadfe"
            ]
        ]
    },
    {
        "id": "036d692f40ebacc5",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 1180,
        "wires": [
            [
                "5331de47e1bdd6d9"
            ]
        ]
    },
    {
        "id": "f0819f9ee90503a1",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 1140,
        "wires": [
            [
                "9ad9de1a7f3c842f"
            ]
        ]
    },
    {
        "id": "49bcd3deda4830ff",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 1100,
        "wires": [
            [
                "1c3216c3dfc39281"
            ]
        ]
    },
    {
        "id": "a0dbb352480d76a3",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 1060,
        "wires": [
            [
                "d51d36efddbccd21"
            ]
        ]
    },
    {
        "id": "d51d36efddbccd21",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "G1: Err connect",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"G1_Alarm1_Mất kết nối\";\nmsg.payload = \"Đã 60 phút không nhận được dữ liệu từ giếng, vui lòng kiểm tra nguồn điện hoặc Internet\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "1c3216c3dfc39281",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "G2: Err connect",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"G2_Alarm1_Mất kết nối\";\nmsg.payload = \"Đã 60 phút không nhận được dữ liệu từ giếng, vui lòng kiểm tra nguồn điện hoặc Internet\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "9ad9de1a7f3c842f",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "G3: Err connect",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"G3_Alarm1_Mất kết nối\";\nmsg.payload = \"Đã 60 phút không nhận được dữ liệu từ giếng, vui lòng kiểm tra nguồn điện hoặc Internet\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "5331de47e1bdd6d9",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "G4: Err connect",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"G4_Alarm1_Mất kết nối\";\nmsg.payload = \"Đã 60 phút không nhận được dữ liệu từ giếng, vui lòng kiểm tra nguồn điện hoặc Internet\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "3c2861ab44cfadfe",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "G5: Err connect",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"G5_Alarm1_Mất kết nối\";\nmsg.payload = \"Đã 60 phút không nhận được dữ liệu từ giếng, vui lòng kiểm tra nguồn điện hoặc Internet\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "f24449534042d5b8",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "G6: Err connect",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"G6_Alarm1_Mất kết nối\";\nmsg.payload = \"Đã 60 phút không nhận được dữ liệu từ giếng, vui lòng kiểm tra nguồn điện hoặc Internet\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "8c57d9eddce7ae9b",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "G7: Err connect",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"G7_Alarm1_Mất kết nối\";\nmsg.payload = \"Đã 60 phút không nhận được dữ liệu từ giếng, vui lòng kiểm tra nguồn điện hoặc Internet\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "a77d625c776ae5e5",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check ss level",
        "func": "var status_level = global.get(\"status_level_7\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 60,
        "wires": [
            [
                "5239a891060dbad1"
            ]
        ]
    },
    {
        "id": "7cce546d07b121c9",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check ss flow",
        "func": "var status_level = global.get(\"status_flow_7\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 100,
        "wires": [
            [
                "14dd7941134cbce6"
            ]
        ]
    },
    {
        "id": "674f5dac079109d0",
        "type": "cronplus",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */1 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 120,
        "y": 520,
        "wires": [
            [
                "a77d625c776ae5e5",
                "7cce546d07b121c9",
                "bd9594667fb9b2bc",
                "bed01ed8b7553a1a",
                "814dd7b922f475fc",
                "0c58d7d4d326f554",
                "ff3af81afe8b6d0e",
                "501419d75f5843f9",
                "e6d38f0114a3efb0",
                "00c8574026d5d3c2",
                "f01aae0bfd5223a7",
                "81505042248b8a8c",
                "d1b0b2332ce162c2",
                "abfcf9c091d55732",
                "8e99f189eda9d7e0",
                "74d46b3888df822e",
                "155c1c10c1ab2fbd",
                "458e20b4e451b034",
                "146759bde16b98ac",
                "9e675bbd830e3279",
                "343fc063ad822251"
            ]
        ]
    },
    {
        "id": "bd9594667fb9b2bc",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check ss level",
        "func": "var status_level = global.get(\"status_level_7\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 200,
        "wires": [
            [
                "a136b944d7eb8873"
            ]
        ]
    },
    {
        "id": "bed01ed8b7553a1a",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check ss flow",
        "func": "var status_level = global.get(\"status_flow_7\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 240,
        "wires": [
            [
                "39430ec7bc15a545"
            ]
        ]
    },
    {
        "id": "814dd7b922f475fc",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check ss level",
        "func": "var status_level = global.get(\"status_level_7\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 340,
        "wires": [
            [
                "b70464aaab1d5038"
            ]
        ]
    },
    {
        "id": "0c58d7d4d326f554",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check ss flow",
        "func": "var status_level = global.get(\"status_flow_7\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 380,
        "wires": [
            [
                "9cc4ed2f71d0227e"
            ]
        ]
    },
    {
        "id": "ff3af81afe8b6d0e",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check ss level",
        "func": "var status_level = global.get(\"status_level_7\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 480,
        "wires": [
            [
                "ecb8f9c2fba81109"
            ]
        ]
    },
    {
        "id": "501419d75f5843f9",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check ss flow",
        "func": "var status_level = global.get(\"status_flow_7\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 520,
        "wires": [
            [
                "ab747787b7a8efdb"
            ]
        ]
    },
    {
        "id": "e6d38f0114a3efb0",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check ss level",
        "func": "var status_level = global.get(\"status_level_7\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 620,
        "wires": [
            [
                "e7d4e3fae718c885"
            ]
        ]
    },
    {
        "id": "00c8574026d5d3c2",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check ss flow",
        "func": "var status_level = global.get(\"status_flow_7\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 660,
        "wires": [
            [
                "e9bc2d214dbc5a47"
            ]
        ]
    },
    {
        "id": "f01aae0bfd5223a7",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check ss level",
        "func": "var status_level = global.get(\"status_level_7\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 760,
        "wires": [
            [
                "e2328f7596645f4b"
            ]
        ]
    },
    {
        "id": "81505042248b8a8c",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check ss flow",
        "func": "var status_level = global.get(\"status_flow_7\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 800,
        "wires": [
            [
                "b3b8334003c4a792"
            ]
        ]
    },
    {
        "id": "d1b0b2332ce162c2",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check ss level",
        "func": "var status_level = global.get(\"status_level_7\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 900,
        "wires": [
            [
                "59744ccbe6d5c381"
            ]
        ]
    },
    {
        "id": "abfcf9c091d55732",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check ss flow",
        "func": "var status_level = global.get(\"status_flow_7\");\nif (status_level  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 940,
        "wires": [
            [
                "34b6c913eb82f8ae"
            ]
        ]
    },
    {
        "id": "74d46b3888df822e",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check state inverter",
        "func": "var status_inverter = global.get(\"status_inverter_7\");\nif (status_inverter  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 980,
        "wires": [
            [
                "616796f516be8ef3"
            ]
        ]
    },
    {
        "id": "cfba45e5fdee7a48",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Inverter_G7: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT10_Alarm2_Biến tần\";\nmsg.payload = \"Biến tần bơm giếng đang lỗi\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "616796f516be8ef3",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 980,
        "wires": [
            [
                "cfba45e5fdee7a48"
            ]
        ]
    },
    {
        "id": "8e99f189eda9d7e0",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check state inverter",
        "func": "var status_inverter = global.get(\"status_inverter_6\");\nif (status_inverter  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 840,
        "wires": [
            [
                "23570b1a37408676"
            ]
        ]
    },
    {
        "id": "423a16f22ae3e2cc",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Inverter_G6: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT08_Alarm2_Biến tần\";\nmsg.payload = \"Biến tần bơm giếng đang lỗi\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "23570b1a37408676",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 840,
        "wires": [
            [
                "423a16f22ae3e2cc"
            ]
        ]
    },
    {
        "id": "155c1c10c1ab2fbd",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check state inverter",
        "func": "var status_inverter = global.get(\"status_inverter_5\");\nif (status_inverter  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 700,
        "wires": [
            [
                "3e6e094e5709216a"
            ]
        ]
    },
    {
        "id": "87e88163824ea8ce",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Inverter_G5: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT07_Alarm2_Biến tần\";\nmsg.payload = \"Biến tần bơm giếng đang lỗi\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "3e6e094e5709216a",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 700,
        "wires": [
            [
                "87e88163824ea8ce"
            ]
        ]
    },
    {
        "id": "458e20b4e451b034",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check state inverter",
        "func": "var status_inverter = global.get(\"status_inverter_4\");\nif (status_inverter  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 560,
        "wires": [
            [
                "f3e95c18e803c2db"
            ]
        ]
    },
    {
        "id": "f5f6f088dc57ee9c",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Inverter_G4: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT05_Alarm2_Biến tần\";\nmsg.payload = \"Biến tần bơm giếng đang lỗi\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "f3e95c18e803c2db",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 560,
        "wires": [
            [
                "f5f6f088dc57ee9c"
            ]
        ]
    },
    {
        "id": "146759bde16b98ac",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check state inverter",
        "func": "var status_inverter = global.get(\"status_inverter_3\");\nif (status_inverter  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 420,
        "wires": [
            [
                "12f71e50e2d98c4a"
            ]
        ]
    },
    {
        "id": "ba91726671302640",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Inverter_G3: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT03_Alarm2_Biến tần\";\nmsg.payload = \"Biến tần bơm giếng đang lỗi\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "12f71e50e2d98c4a",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 420,
        "wires": [
            [
                "ba91726671302640"
            ]
        ]
    },
    {
        "id": "9e675bbd830e3279",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check state inverter",
        "func": "var status_inverter = global.get(\"status_inverter_2\");\nif (status_inverter  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 280,
        "wires": [
            [
                "c5e8151f959ba3b1"
            ]
        ]
    },
    {
        "id": "5212e774bd9407f6",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Inverter_G2: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT02_Alarm2_Biến tần\";\nmsg.payload = \"Biến tần bơm giếng đang lỗi\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "c5e8151f959ba3b1",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 280,
        "wires": [
            [
                "5212e774bd9407f6"
            ]
        ]
    },
    {
        "id": "343fc063ad822251",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "check state inverter",
        "func": "var status_inverter = global.get(\"status_inverter_1\");\nif (status_inverter  == 2 )\n{\n    msg.payload = true;\n}\nelse\n{\n    msg.payload = false;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 140,
        "wires": [
            [
                "e779305de120e4f0"
            ]
        ]
    },
    {
        "id": "9b0ec385fe0b5642",
        "type": "function",
        "z": "36991e1f24d3f7bf",
        "name": "Inverter_G1: status 02",
        "func": "//var setpoint1 = global.get(\"setpoint_1\");\nmsg.topic = \"KT01_Alarm2_Biến tần\";\nmsg.payload = \"Biến tần bơm giếng đang lỗi\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e779305de120e4f0",
        "type": "switch",
        "z": "36991e1f24d3f7bf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 140,
        "wires": [
            [
                "9b0ec385fe0b5642"
            ]
        ]
    },
    {
        "id": "cb9485b8d5900781",
        "type": "mqtt out",
        "z": "76b288a8884e6049",
        "name": "",
        "topic": "/HZ1/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 510,
        "y": 500,
        "wires": []
    },
    {
        "id": "c17ae7bd7ec4dc95",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "function 36",
        "func": "global.set(\"set_Hz_1\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "4c7acd485e589d81",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "function 38",
        "func": "msg.payload = {\"Set_Hz\": global.get(\"set_Hz_1\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 500,
        "wires": [
            [
                "cb9485b8d5900781",
                "a160e27e3088ccd2"
            ]
        ]
    },
    {
        "id": "c846ec1f8ab15565",
        "type": "ui_button",
        "z": "76b288a8884e6049",
        "name": "send_data 1",
        "group": "453627178f2bf110",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>OK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 500,
        "wires": [
            [
                "4c7acd485e589d81",
                "7f4610f64f444f86"
            ]
        ]
    },
    {
        "id": "617403116d6073a4",
        "type": "ui_numeric",
        "z": "76b288a8884e6049",
        "name": "set hz 1",
        "label": "<font color=\"blue\"><b>Cài đặt tần số biến tần KT01 (Hz);",
        "tooltip": "",
        "group": "453627178f2bf110",
        "order": 1,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "",
        "min": 0,
        "max": "50",
        "step": "1",
        "className": "",
        "x": 1080,
        "y": 1220,
        "wires": [
            [
                "c17ae7bd7ec4dc95"
            ]
        ]
    },
    {
        "id": "a160e27e3088ccd2",
        "type": "debug",
        "z": "76b288a8884e6049",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 560,
        "wires": []
    },
    {
        "id": "90912b0b53674c0b",
        "type": "mqtt out",
        "z": "76b288a8884e6049",
        "name": "",
        "topic": "/HZ2/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 510,
        "y": 660,
        "wires": []
    },
    {
        "id": "f69a954f841598a9",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "function 40",
        "func": "global.set(\"set_Hz_2\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "8a75d9fdf8e39e72",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "function 42",
        "func": "msg.payload = {\"Set_Hz\": global.get(\"set_Hz_2\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 660,
        "wires": [
            [
                "90912b0b53674c0b",
                "808757f73d3cb169"
            ]
        ]
    },
    {
        "id": "2e4d07241ecf953c",
        "type": "ui_button",
        "z": "76b288a8884e6049",
        "name": "send_data 2",
        "group": "453627178f2bf110",
        "order": 5,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>OK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 660,
        "wires": [
            [
                "8a75d9fdf8e39e72",
                "5d131379e76ef3a2"
            ]
        ]
    },
    {
        "id": "51140306b7fbf158",
        "type": "ui_numeric",
        "z": "76b288a8884e6049",
        "name": "set hz 2",
        "label": "<font color=\"blue\"><b>Cài đặt tần số biến tần KT02 (Hz);",
        "tooltip": "",
        "group": "453627178f2bf110",
        "order": 4,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "",
        "min": 0,
        "max": "50",
        "step": "1",
        "className": "",
        "x": 1080,
        "y": 1320,
        "wires": [
            [
                "f69a954f841598a9"
            ]
        ]
    },
    {
        "id": "808757f73d3cb169",
        "type": "debug",
        "z": "76b288a8884e6049",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 720,
        "wires": []
    },
    {
        "id": "bce7a96ea6b4700f",
        "type": "mqtt out",
        "z": "76b288a8884e6049",
        "name": "",
        "topic": "/HZ3/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 510,
        "y": 820,
        "wires": []
    },
    {
        "id": "f7ef2d1779333f55",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "function 45",
        "func": "global.set(\"set_Hz_3\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "18da379fcd1aaa69",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "function 47",
        "func": "msg.payload = {\"Set_Hz\": global.get(\"set_Hz_3\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 820,
        "wires": [
            [
                "bce7a96ea6b4700f",
                "e00fc3a715a87e64"
            ]
        ]
    },
    {
        "id": "841a4de8a04f9a03",
        "type": "ui_button",
        "z": "76b288a8884e6049",
        "name": "send_data 3",
        "group": "453627178f2bf110",
        "order": 8,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>OK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 820,
        "wires": [
            [
                "18da379fcd1aaa69",
                "16003e25aa35f040"
            ]
        ]
    },
    {
        "id": "e42da66d30d1d0ff",
        "type": "ui_numeric",
        "z": "76b288a8884e6049",
        "name": "set hz 3",
        "label": "<font color=\"blue\"><b>Cài đặt tần số biến tần KT03 (Hz);",
        "tooltip": "",
        "group": "453627178f2bf110",
        "order": 7,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "",
        "min": 0,
        "max": "50",
        "step": "1",
        "className": "",
        "x": 1080,
        "y": 1420,
        "wires": [
            [
                "f7ef2d1779333f55"
            ]
        ]
    },
    {
        "id": "e00fc3a715a87e64",
        "type": "debug",
        "z": "76b288a8884e6049",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 880,
        "wires": []
    },
    {
        "id": "507f599b260a2368",
        "type": "mqtt out",
        "z": "76b288a8884e6049",
        "name": "",
        "topic": "/HZ4/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 510,
        "y": 980,
        "wires": []
    },
    {
        "id": "7dd251056b6c2eba",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "function 50",
        "func": "global.set(\"set_Hz_4\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "ebf83f8cd16487c9",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "function 52",
        "func": "msg.payload = {\"Set_Hz\": global.get(\"set_Hz_4\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 980,
        "wires": [
            [
                "507f599b260a2368",
                "80eae23b9684204c"
            ]
        ]
    },
    {
        "id": "7f7586caf276098a",
        "type": "ui_button",
        "z": "76b288a8884e6049",
        "name": "send_data 4",
        "group": "453627178f2bf110",
        "order": 11,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>OK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 980,
        "wires": [
            [
                "ebf83f8cd16487c9",
                "3fae4931831a1c9e"
            ]
        ]
    },
    {
        "id": "3e59f95b12624af5",
        "type": "ui_numeric",
        "z": "76b288a8884e6049",
        "name": "set hz 4",
        "label": "<font color=\"blue\"><b>Cài đặt tần số biến tần KT05 (Hz);",
        "tooltip": "",
        "group": "453627178f2bf110",
        "order": 10,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "",
        "min": 0,
        "max": "50",
        "step": "1",
        "className": "",
        "x": 1080,
        "y": 1520,
        "wires": [
            [
                "7dd251056b6c2eba"
            ]
        ]
    },
    {
        "id": "80eae23b9684204c",
        "type": "debug",
        "z": "76b288a8884e6049",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1f3573297854947a",
        "type": "mqtt out",
        "z": "76b288a8884e6049",
        "name": "",
        "topic": "/HZ5/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 1190,
        "y": 500,
        "wires": []
    },
    {
        "id": "8e8af858233344d9",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "function 55",
        "func": "global.set(\"set_Hz_5\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "636970ac21a6ecf1",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "function 57",
        "func": "msg.payload = {\"Set_Hz\": global.get(\"set_Hz_5\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 500,
        "wires": [
            [
                "1f3573297854947a",
                "1a1bb182bce2e5c4"
            ]
        ]
    },
    {
        "id": "4ac0b97b4f7a6d88",
        "type": "ui_button",
        "z": "76b288a8884e6049",
        "name": "send_data 5",
        "group": "453627178f2bf110",
        "order": 14,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>OK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 830,
        "y": 500,
        "wires": [
            [
                "636970ac21a6ecf1",
                "1801655e8bac7023"
            ]
        ]
    },
    {
        "id": "df1c89225c21fe2c",
        "type": "ui_numeric",
        "z": "76b288a8884e6049",
        "name": "set hz 5",
        "label": "<font color=\"blue\"><b>Cài đặt tần số biến tần KT07 (Hz);",
        "tooltip": "",
        "group": "453627178f2bf110",
        "order": 13,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "",
        "min": 0,
        "max": "50",
        "step": "1",
        "className": "",
        "x": 1080,
        "y": 1620,
        "wires": [
            [
                "8e8af858233344d9"
            ]
        ]
    },
    {
        "id": "1a1bb182bce2e5c4",
        "type": "debug",
        "z": "76b288a8884e6049",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 560,
        "wires": []
    },
    {
        "id": "17820df71e3772e3",
        "type": "mqtt out",
        "z": "76b288a8884e6049",
        "name": "",
        "topic": "/HZ6/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 1190,
        "y": 660,
        "wires": []
    },
    {
        "id": "2465a60663aae696",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "function 60",
        "func": "global.set(\"set_Hz_6\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "7542d469ce076593",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "function 62",
        "func": "msg.payload = {\"Set_Hz\": global.get(\"set_Hz_6\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 660,
        "wires": [
            [
                "17820df71e3772e3",
                "3db2c0e37bd9c4c5"
            ]
        ]
    },
    {
        "id": "ba67e2f994887f5b",
        "type": "ui_button",
        "z": "76b288a8884e6049",
        "name": "send_data 6",
        "group": "453627178f2bf110",
        "order": 17,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>OK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 830,
        "y": 660,
        "wires": [
            [
                "7542d469ce076593",
                "877eed56d0dab53c"
            ]
        ]
    },
    {
        "id": "ee48e6e8ae41f486",
        "type": "ui_numeric",
        "z": "76b288a8884e6049",
        "name": "set hz 6",
        "label": "<font color=\"blue\"><b>Cài đặt tần số biến tần KT08 (Hz);",
        "tooltip": "",
        "group": "453627178f2bf110",
        "order": 16,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "",
        "min": 0,
        "max": "50",
        "step": "1",
        "className": "",
        "x": 1080,
        "y": 1720,
        "wires": [
            [
                "2465a60663aae696"
            ]
        ]
    },
    {
        "id": "3db2c0e37bd9c4c5",
        "type": "debug",
        "z": "76b288a8884e6049",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 720,
        "wires": []
    },
    {
        "id": "290ebbf79f2a4b3c",
        "type": "mqtt out",
        "z": "76b288a8884e6049",
        "name": "",
        "topic": "/HZ7/",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "41370e1941ec34b4",
        "x": 1190,
        "y": 840,
        "wires": []
    },
    {
        "id": "860fd6ef34dfc98d",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "function 65",
        "func": "global.set(\"set_Hz_7\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "64a5c4fa8699f937",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "function 67",
        "func": "msg.payload = {\"Set_Hz\": global.get(\"set_Hz_7\")};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 840,
        "wires": [
            [
                "290ebbf79f2a4b3c",
                "2638fedb989ebaea"
            ]
        ]
    },
    {
        "id": "1ed3034ab3c30751",
        "type": "ui_button",
        "z": "76b288a8884e6049",
        "name": "send_data 7",
        "group": "453627178f2bf110",
        "order": 20,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "<font color=\"white\"><b>OK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 830,
        "y": 840,
        "wires": [
            [
                "64a5c4fa8699f937",
                "5d0e4e6356649d63"
            ]
        ]
    },
    {
        "id": "95c3af1fe8e1d5af",
        "type": "ui_numeric",
        "z": "76b288a8884e6049",
        "name": "set hz 7",
        "label": "<font color=\"blue\"><b>Cài đặt tần số biến tần KT10 (Hz);",
        "tooltip": "",
        "group": "453627178f2bf110",
        "order": 19,
        "width": 7,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "",
        "min": 0,
        "max": "50",
        "step": "1",
        "className": "",
        "x": 1080,
        "y": 1820,
        "wires": [
            [
                "860fd6ef34dfc98d"
            ]
        ]
    },
    {
        "id": "2638fedb989ebaea",
        "type": "debug",
        "z": "76b288a8884e6049",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 900,
        "wires": []
    },
    {
        "id": "7f4610f64f444f86",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "save set hz g1",
        "func": "msg = {};\nmsg.set_hz = global.get(\"set_Hz_1\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 600,
        "wires": [
            [
                "9dfc999f9048ee17"
            ]
        ]
    },
    {
        "id": "9dfc999f9048ee17",
        "type": "sqlstring-format",
        "z": "76b288a8884e6049",
        "name": "insert_set_hz_g1",
        "query": "UPDATE set_hz_g1\nSET \n    set_hz = ?\n\n",
        "vars": "set_hz",
        "outField": "topic",
        "x": 610,
        "y": 600,
        "wires": [
            [
                "83d67ceef447a4d0"
            ]
        ]
    },
    {
        "id": "513fd80d8445df70",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "check_set hz_g1",
        "func": "var ten_table =\n[\n'set_hz_g1'\n]\n\nmsg.payload = ten_table;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1160,
        "wires": [
            [
                "d0a91b0cb6395094"
            ]
        ]
    },
    {
        "id": "d0a91b0cb6395094",
        "type": "split",
        "z": "76b288a8884e6049",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 510,
        "y": 1160,
        "wires": [
            [
                "3629b93e8ba2d068"
            ]
        ]
    },
    {
        "id": "3629b93e8ba2d068",
        "type": "delay",
        "z": "76b288a8884e6049",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 660,
        "y": 1160,
        "wires": [
            [
                "aecb9935df67144c"
            ]
        ]
    },
    {
        "id": "aecb9935df67144c",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "",
        "func": "msg.topic =\"SELECT * FROM \"+msg.payload+\" ORDER BY `id` DESC, `id` DESC LIMIT 1\";\nmsg.data = msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1160,
        "wires": [
            [
                "20075baac72d4e68"
            ]
        ]
    },
    {
        "id": "20075baac72d4e68",
        "type": "mysql",
        "z": "76b288a8884e6049",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1000,
        "y": 1160,
        "wires": [
            [
                "7e3a9c983eaa768c"
            ]
        ]
    },
    {
        "id": "7e3a9c983eaa768c",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "get_sql: set hz_g1",
        "func": "\nif (msg.payload.length >= 1) \n{\n    global.set(\"sql_set_hz_g1\", msg.payload[0].set_hz);\n}\nmsg.payload = global.get(\"sql_set_hz_g1\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1160,
        "wires": [
            [
                "617403116d6073a4"
            ]
        ]
    },
    {
        "id": "5d131379e76ef3a2",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "save set hz g2",
        "func": "msg = {};\nmsg.set_hz = global.get(\"set_Hz_2\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 760,
        "wires": [
            [
                "fe46361764e1e034"
            ]
        ]
    },
    {
        "id": "fe46361764e1e034",
        "type": "sqlstring-format",
        "z": "76b288a8884e6049",
        "name": "insert_set_hz_g2",
        "query": "UPDATE set_hz_g2\nSET \n    set_hz = ?\n\n",
        "vars": "set_hz",
        "outField": "topic",
        "x": 610,
        "y": 760,
        "wires": [
            [
                "77623ae28873d1df"
            ]
        ]
    },
    {
        "id": "16003e25aa35f040",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "save set hz g3",
        "func": "msg = {};\nmsg.set_hz = global.get(\"set_Hz_3\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 920,
        "wires": [
            [
                "fc22ed94761f7944"
            ]
        ]
    },
    {
        "id": "fc22ed94761f7944",
        "type": "sqlstring-format",
        "z": "76b288a8884e6049",
        "name": "insert_set_hz_g3",
        "query": "UPDATE set_hz_g3\nSET \n    set_hz = ?\n\n",
        "vars": "set_hz",
        "outField": "topic",
        "x": 610,
        "y": 920,
        "wires": [
            [
                "69a7902b9b42de20"
            ]
        ]
    },
    {
        "id": "3fae4931831a1c9e",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "save set hz g4",
        "func": "msg = {};\nmsg.set_hz = global.get(\"set_Hz_4\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1080,
        "wires": [
            [
                "ec522df9e65666ca"
            ]
        ]
    },
    {
        "id": "ec522df9e65666ca",
        "type": "sqlstring-format",
        "z": "76b288a8884e6049",
        "name": "insert_set_hz_g4",
        "query": "UPDATE set_hz_g4\nSET \n    set_hz = ?\n\n",
        "vars": "set_hz",
        "outField": "topic",
        "x": 610,
        "y": 1080,
        "wires": [
            [
                "58fd3fb01d7043c7"
            ]
        ]
    },
    {
        "id": "1801655e8bac7023",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "save set hz g5",
        "func": "msg = {};\nmsg.set_hz = global.get(\"set_Hz_5\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 600,
        "wires": [
            [
                "c9d9e6b106a0d5a9"
            ]
        ]
    },
    {
        "id": "c9d9e6b106a0d5a9",
        "type": "sqlstring-format",
        "z": "76b288a8884e6049",
        "name": "insert_set_hz_g5",
        "query": "UPDATE set_hz_g5\nSET \n    set_hz = ?\n\n",
        "vars": "set_hz",
        "outField": "topic",
        "x": 1290,
        "y": 600,
        "wires": [
            [
                "6e0f730e49500319"
            ]
        ]
    },
    {
        "id": "877eed56d0dab53c",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "save set hz g6",
        "func": "msg = {};\nmsg.set_hz = global.get(\"set_Hz_6\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 780,
        "wires": [
            [
                "90a33336e9e5f546"
            ]
        ]
    },
    {
        "id": "90a33336e9e5f546",
        "type": "sqlstring-format",
        "z": "76b288a8884e6049",
        "name": "insert_set_hz_g6",
        "query": "UPDATE set_hz_g6\nSET \n    set_hz = ?\n\n",
        "vars": "set_hz",
        "outField": "topic",
        "x": 1290,
        "y": 780,
        "wires": [
            [
                "06e27de09fbe900f"
            ]
        ]
    },
    {
        "id": "5d0e4e6356649d63",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "save set hz g7",
        "func": "msg = {};\nmsg.set_hz = global.get(\"set_Hz_7\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 940,
        "wires": [
            [
                "deb2e21cc0b72d1c"
            ]
        ]
    },
    {
        "id": "deb2e21cc0b72d1c",
        "type": "sqlstring-format",
        "z": "76b288a8884e6049",
        "name": "insert_set_hz_g7",
        "query": "UPDATE set_hz_g7\nSET \n    set_hz = ?\n\n",
        "vars": "set_hz",
        "outField": "topic",
        "x": 1290,
        "y": 940,
        "wires": [
            [
                "9af23cb7f2f90ee3"
            ]
        ]
    },
    {
        "id": "f93dd9a093df99cd",
        "type": "inject",
        "z": "76b288a8884e6049",
        "name": "",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 1460,
        "wires": [
            [
                "513fd80d8445df70",
                "d5f7e97e1d568a7d",
                "cde212e1501e0d1a",
                "457a313c5302ebf0",
                "c8fe9a870ca7ea2f",
                "8811517ff3f4cda0",
                "23a5a57d307c89cc"
            ]
        ]
    },
    {
        "id": "d5f7e97e1d568a7d",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "check_set hz_g2",
        "func": "var ten_table =\n[\n'set_hz_g2'\n]\n\nmsg.payload = ten_table;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1260,
        "wires": [
            [
                "63581fe3a646771b"
            ]
        ]
    },
    {
        "id": "63581fe3a646771b",
        "type": "split",
        "z": "76b288a8884e6049",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 510,
        "y": 1260,
        "wires": [
            [
                "fe3ffe7c8ae452c5"
            ]
        ]
    },
    {
        "id": "fe3ffe7c8ae452c5",
        "type": "delay",
        "z": "76b288a8884e6049",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 660,
        "y": 1260,
        "wires": [
            [
                "e90bc3b3c153be4d"
            ]
        ]
    },
    {
        "id": "e90bc3b3c153be4d",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "",
        "func": "msg.topic =\"SELECT * FROM \"+msg.payload+\" ORDER BY `id` DESC, `id` DESC LIMIT 1\";\nmsg.data = msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1260,
        "wires": [
            [
                "2772d802366111d0"
            ]
        ]
    },
    {
        "id": "2772d802366111d0",
        "type": "mysql",
        "z": "76b288a8884e6049",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1000,
        "y": 1260,
        "wires": [
            [
                "214d7e9002d44d08"
            ]
        ]
    },
    {
        "id": "214d7e9002d44d08",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "get_sql: set hz_g2",
        "func": "\nif (msg.payload.length >= 1) \n{\n    global.set(\"sql_set_hz_g2\", msg.payload[0].set_hz);\n}\nmsg.payload = global.get(\"sql_set_hz_g2\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1260,
        "wires": [
            [
                "51140306b7fbf158"
            ]
        ]
    },
    {
        "id": "cde212e1501e0d1a",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "check_set hz_g3",
        "func": "var ten_table =\n[\n'set_hz_g3'\n]\n\nmsg.payload = ten_table;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1360,
        "wires": [
            [
                "27b48d90d4ac9660"
            ]
        ]
    },
    {
        "id": "27b48d90d4ac9660",
        "type": "split",
        "z": "76b288a8884e6049",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 510,
        "y": 1360,
        "wires": [
            [
                "94aff7a68f47ae2f"
            ]
        ]
    },
    {
        "id": "94aff7a68f47ae2f",
        "type": "delay",
        "z": "76b288a8884e6049",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 660,
        "y": 1360,
        "wires": [
            [
                "2a1586ec57a2c81f"
            ]
        ]
    },
    {
        "id": "2a1586ec57a2c81f",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "",
        "func": "msg.topic =\"SELECT * FROM \"+msg.payload+\" ORDER BY `id` DESC, `id` DESC LIMIT 1\";\nmsg.data = msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1360,
        "wires": [
            [
                "045245cb55f3eeb2"
            ]
        ]
    },
    {
        "id": "045245cb55f3eeb2",
        "type": "mysql",
        "z": "76b288a8884e6049",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1000,
        "y": 1360,
        "wires": [
            [
                "410858d223cb3d98"
            ]
        ]
    },
    {
        "id": "410858d223cb3d98",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "get_sql: set hz_g3",
        "func": "\nif (msg.payload.length >= 1) \n{\n    global.set(\"sql_set_hz_g3\", msg.payload[0].set_hz);\n}\nmsg.payload = global.get(\"sql_set_hz_g3\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1360,
        "wires": [
            [
                "e42da66d30d1d0ff"
            ]
        ]
    },
    {
        "id": "457a313c5302ebf0",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "check_set hz_g4",
        "func": "var ten_table =\n[\n'set_hz_g4'\n]\n\nmsg.payload = ten_table;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1460,
        "wires": [
            [
                "133863f14b7cba84"
            ]
        ]
    },
    {
        "id": "133863f14b7cba84",
        "type": "split",
        "z": "76b288a8884e6049",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 510,
        "y": 1460,
        "wires": [
            [
                "2595c252550d352e"
            ]
        ]
    },
    {
        "id": "2595c252550d352e",
        "type": "delay",
        "z": "76b288a8884e6049",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 660,
        "y": 1460,
        "wires": [
            [
                "f728fd4ea61f83cb"
            ]
        ]
    },
    {
        "id": "f728fd4ea61f83cb",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "",
        "func": "msg.topic =\"SELECT * FROM \"+msg.payload+\" ORDER BY `id` DESC, `id` DESC LIMIT 1\";\nmsg.data = msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1460,
        "wires": [
            [
                "a9616678698d1a8d"
            ]
        ]
    },
    {
        "id": "a9616678698d1a8d",
        "type": "mysql",
        "z": "76b288a8884e6049",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1000,
        "y": 1460,
        "wires": [
            [
                "603ae2245cbddbc3"
            ]
        ]
    },
    {
        "id": "603ae2245cbddbc3",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "get_sql: set hz_g4",
        "func": "\nif (msg.payload.length >= 1) \n{\n    global.set(\"sql_set_hz_g4\", msg.payload[0].set_hz);\n}\nmsg.payload = global.get(\"sql_set_hz_g4\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1460,
        "wires": [
            [
                "3e59f95b12624af5"
            ]
        ]
    },
    {
        "id": "c8fe9a870ca7ea2f",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "check_set hz_g5",
        "func": "var ten_table =\n[\n'set_hz_g5'\n]\n\nmsg.payload = ten_table;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1560,
        "wires": [
            [
                "74535c3ca6c85403"
            ]
        ]
    },
    {
        "id": "74535c3ca6c85403",
        "type": "split",
        "z": "76b288a8884e6049",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 510,
        "y": 1560,
        "wires": [
            [
                "1bf7efc4a6f2e80b"
            ]
        ]
    },
    {
        "id": "1bf7efc4a6f2e80b",
        "type": "delay",
        "z": "76b288a8884e6049",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 660,
        "y": 1560,
        "wires": [
            [
                "fe605ddbfbe32c3d"
            ]
        ]
    },
    {
        "id": "fe605ddbfbe32c3d",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "",
        "func": "msg.topic =\"SELECT * FROM \"+msg.payload+\" ORDER BY `id` DESC, `id` DESC LIMIT 1\";\nmsg.data = msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1560,
        "wires": [
            [
                "91ba28ae0b581f65"
            ]
        ]
    },
    {
        "id": "91ba28ae0b581f65",
        "type": "mysql",
        "z": "76b288a8884e6049",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1000,
        "y": 1560,
        "wires": [
            [
                "6676b2dc5d00aab5"
            ]
        ]
    },
    {
        "id": "6676b2dc5d00aab5",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "get_sql: set hz_g5",
        "func": "\nif (msg.payload.length >= 1) \n{\n    global.set(\"sql_set_hz_g5\", msg.payload[0].set_hz);\n}\nmsg.payload = global.get(\"sql_set_hz_g5\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1560,
        "wires": [
            [
                "df1c89225c21fe2c"
            ]
        ]
    },
    {
        "id": "8811517ff3f4cda0",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "check_set hz_g6",
        "func": "var ten_table =\n[\n'set_hz_g6'\n]\n\nmsg.payload = ten_table;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1660,
        "wires": [
            [
                "f5acf852d7657114"
            ]
        ]
    },
    {
        "id": "f5acf852d7657114",
        "type": "split",
        "z": "76b288a8884e6049",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 510,
        "y": 1660,
        "wires": [
            [
                "54918343acad30b1"
            ]
        ]
    },
    {
        "id": "54918343acad30b1",
        "type": "delay",
        "z": "76b288a8884e6049",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 660,
        "y": 1660,
        "wires": [
            [
                "f942013c23c7dbcd"
            ]
        ]
    },
    {
        "id": "f942013c23c7dbcd",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "",
        "func": "msg.topic =\"SELECT * FROM \"+msg.payload+\" ORDER BY `id` DESC, `id` DESC LIMIT 1\";\nmsg.data = msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1660,
        "wires": [
            [
                "326857cab4d278ca"
            ]
        ]
    },
    {
        "id": "326857cab4d278ca",
        "type": "mysql",
        "z": "76b288a8884e6049",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1000,
        "y": 1660,
        "wires": [
            [
                "bcfdcb96f341166e"
            ]
        ]
    },
    {
        "id": "bcfdcb96f341166e",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "get_sql: set hz_g6",
        "func": "\nif (msg.payload.length >= 1) \n{\n    global.set(\"sql_set_hz_g6\", msg.payload[0].set_hz);\n}\nmsg.payload = global.get(\"sql_set_hz_g6\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1660,
        "wires": [
            [
                "ee48e6e8ae41f486"
            ]
        ]
    },
    {
        "id": "23a5a57d307c89cc",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "check_set hz_g7",
        "func": "var ten_table =\n[\n'set_hz_g7'\n]\n\nmsg.payload = ten_table;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1760,
        "wires": [
            [
                "d8b7e0c484da7d4e"
            ]
        ]
    },
    {
        "id": "d8b7e0c484da7d4e",
        "type": "split",
        "z": "76b288a8884e6049",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 510,
        "y": 1760,
        "wires": [
            [
                "f1c6225605e40fa9"
            ]
        ]
    },
    {
        "id": "f1c6225605e40fa9",
        "type": "delay",
        "z": "76b288a8884e6049",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 660,
        "y": 1760,
        "wires": [
            [
                "7a943039bf6ec1e2"
            ]
        ]
    },
    {
        "id": "7a943039bf6ec1e2",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "",
        "func": "msg.topic =\"SELECT * FROM \"+msg.payload+\" ORDER BY `id` DESC, `id` DESC LIMIT 1\";\nmsg.data = msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1760,
        "wires": [
            [
                "3b3af1c00cf449b0"
            ]
        ]
    },
    {
        "id": "3b3af1c00cf449b0",
        "type": "mysql",
        "z": "76b288a8884e6049",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1000,
        "y": 1760,
        "wires": [
            [
                "f4f136b719eb58a2"
            ]
        ]
    },
    {
        "id": "f4f136b719eb58a2",
        "type": "function",
        "z": "76b288a8884e6049",
        "name": "get_sql: set hz_g7",
        "func": "\nif (msg.payload.length >= 1) \n{\n    global.set(\"sql_set_hz_g7\", msg.payload[0].set_hz);\n}\nmsg.payload = global.get(\"sql_set_hz_g7\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1760,
        "wires": [
            [
                "95c3af1fe8e1d5af"
            ]
        ]
    },
    {
        "id": "83d67ceef447a4d0",
        "type": "mysql",
        "z": "76b288a8884e6049",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 800,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "77623ae28873d1df",
        "type": "mysql",
        "z": "76b288a8884e6049",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 800,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "69a7902b9b42de20",
        "type": "mysql",
        "z": "76b288a8884e6049",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 800,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "58fd3fb01d7043c7",
        "type": "mysql",
        "z": "76b288a8884e6049",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 800,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "6e0f730e49500319",
        "type": "mysql",
        "z": "76b288a8884e6049",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1480,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "06e27de09fbe900f",
        "type": "mysql",
        "z": "76b288a8884e6049",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1480,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "9af23cb7f2f90ee3",
        "type": "mysql",
        "z": "76b288a8884e6049",
        "mydb": "9524bebe354aad1c",
        "name": "",
        "x": 1480,
        "y": 940,
        "wires": [
            []
        ]
    }
]